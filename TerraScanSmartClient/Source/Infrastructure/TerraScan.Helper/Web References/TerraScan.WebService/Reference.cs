//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace TerraScan.Helper.TerraScan.WebService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TerraScanServiceSoap", Namespace="http://tempuri.org/")]
    public partial class TerraScanService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback F1030_DeleteDistrictDefinitionRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1030_SaveDistrictDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1033_ListPostTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1033_ListSpecialDistrictsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1500_GetDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1500_GetSubFundItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1500_GetFunctionItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1500_ListAccountDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1500_CreateOrEditAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1500_ListRegisterTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1500_GetConfigurationValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1503_GetGenericElementMgmtOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1503_SaveGenericElementMgmtOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1503_DeleteGenericElementMgmtOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1515_GetSubFundSelectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1513_GetFundSelectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1031_ListDistrictAssessmentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1031_ListDistrictAssessmentIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1031_GetDistrictAssessmentParcelIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1031_ListDistrictAssessmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1031_SaveDistrictAssessmentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1031_DeleteDistrictAssessmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9503_GetSubFundManagementDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9503_GetSubFundItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15005_CheckSubFundOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9503_CreateOrEditSubFundOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1501_ListRollYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1501_ListGLConfigDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1501_GetGLConfigDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1501_CreateOrEditGLConfigDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1410_GetOwnerReceiptingOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1410_ListOwnerReceiptingOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1410_DeleteOwnerReceiptingOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1410_SaveOwnerReceiptingOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8000_GetGDocBusinessOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8000_GetGDocDiameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8000_GetGDocPropertyReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback wListStreetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8000_GetGDocUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84121_GetSanitaryManholePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84121_SaveSanitaryManholePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84121_DeleteSanitaryManholePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84122_GetSanitaryManholeLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84122_SaveSanitaryManholeLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84721_GetWaterValvePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84721_SaveWaterValvePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84721_DeleteWaterValvePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9033_ListQueryViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9033_GetDefaultLayoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9033_QueryEngineOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84722_GetWaterValveLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84722_SaveWaterValveLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84723_GetWaterHydrantPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84723_CheckMainValveIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84723_SaveWaterHydrantPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84723_DeleteWaterHydrantPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84725_GetWaterPipePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84725_SaveWaterPipePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84725_DeleteWaterPipePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84726_GetWaterPipeLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84726_SaveWaterPipeLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15002_GetDistirctFundDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15002_ListAllFundsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15002_CheckDistrictOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15002_CreateOrEditDistrictMgmtOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84123_GetSanitaryPipePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84123_SaveSanitaryPipePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84123_DeleteSanitaryPipePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84124_GetSanitaryPipeLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F84124_SaveSanitaryPipeLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F11020_GetRealPropertyStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1423_UpdateRealPropertyStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1423_ListMortgageNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15020_ListHistoryGridOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15020_GetReceiptDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1003_GetMinTaxDueOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1004_GetInterestAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1009_GetValidReceiptTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1405_SaveMasterReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15104_GetReceiptPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15104_UpdateReceiptPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15004_GetAgencyDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15004_CheckDuplicateAgencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15004_CreateOrEditAgencyDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15007_CheckDuplicateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9038_LoadLayoutInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9038_DeleteLayoutInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9038_SaveLayoutInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9001_GetNextWorkingDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15003_GetFundSubFundDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15003_ListAvailableSubFundsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15003_ListFundTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15003_CheckFundOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15003_CreateOrEditFundMgmtOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15012_GetExciseReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15011_GetExciseStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15011_SaveExciseStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15010_GetExciseIndividualTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15010_GetExciseTaxAffidavitDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15010_GetExciseTaxAffidavitCalulateAmountDueOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15010_GetAffidavitStatementIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15010_SaveAffiDavitDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15010_GetOwnerDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15010_GetDistrictSelectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15010_DeleteAffidavitDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15013_GetExciseTaxRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15013_ListExciseTaxRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15013_SaveExciseTaxRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15013_DeleteExciseTaxRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15013_GetDistrictNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15013_GetAccountNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJournalEntryDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateJournalEntryDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15019_CheckRollYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9013_ListNextNumberConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9013_CheckNextNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9013_UpdateNextNumberConfigDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9013_ListNextNumberRollYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15018_GetMiscReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1021_GetMiscReceiptTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1021_SaveMiscReceiptTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1022_ListMiscReceiptTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1022_DeleteMiscReceiptTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1025_ListRollYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1025_ListAutoFundTransferDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1025_DeleteAutoFundTransferDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1025_UpdateAutoFundTransferDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1025_CheckRollYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback RdlToCode_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback RdlToCode_FillComboOperationCompleted;
        
        private System.Threading.SendOrPostCallback RdlToCode_SaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback RdlToCode_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback F27006_ListParcelOwnershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback F27006_ListALLOwnerDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F27006_SaveParcelOwnershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback F27006_CheckOwnershipDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F25000_GetParcelDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F35001_GetValueSliceHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback F35001_GetAdjustmentSliceValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback F35002_ListAdjustmentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback F35001_DeleteValueSliceOperationCompleted;
        
        private System.Threading.SendOrPostCallback F35000_InsertOrUpdateValueSliceOperationCompleted;
        
        private System.Threading.SendOrPostCallback F35000_GetAppraisalSummaryObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F35000_InsertObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback F35000_ListObjectSliceTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F27000_GetMiscAssessmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback F27000_ListMADistrictTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback F27000_ListMADistrictItemTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback F27000_SaveMADetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15015_ListStatementOwnershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15015_SaveStatementOwnershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9060_ListAuditingTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9060_ListAuditingColumnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9060_SaveAuditConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9060_DeleteAuditConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckInstallationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListHistoryGridOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceiptDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListTenderTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValidReceiptTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMinTaxDueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInterestAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceiptHeaderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListReceiptItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceiptStatementHeaderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListReceiptOwnersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTenderTypeConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9075_GetCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConnectionStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachementFunctionNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRealEstateStatementCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRealEstateStatementIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRealEstateStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListSortQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckQueryExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSnapshotOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSnapShotOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSnapShotExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSnapShotResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListSnapShotOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListSortSnapShotOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSnapShotOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9008_GetReportDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9008_SaveReportDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAutoPrintStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAutoPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGroupDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUserDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGroupDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGroupDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupPermissionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveGroupPermissionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogExceptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryUtilityListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteQueryUtilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertQueryUtilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSnapshotUtilityListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSnapshotUtilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSnapshotUtilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuthenticationStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSQLQueryResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSQLDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSQLStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSQLCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSQLQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9015_DeleteQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountyConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCountyConfigDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMortgageTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMortgageTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMortgageImportFileTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMortgageImportTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMortgageTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMortgageImportStatementIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMortgageImportStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMortgageImportEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMortgageImportTemplateDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback MortgageImportCheckErrorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMortgageImportValidReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMortgageImportOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMortgageImportOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMortgageImportFileEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetErrorEngineOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertErrorEngineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListNextNumberConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckNextNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNextNumberConfigDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1107_ExciseWorkQueue_GetWorkQueueSearchResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1109_ListManagementQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1109_ManagementQueueFilterResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1109_FilterSearchAffidavitOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1109_ListRollYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1108_GetSubmitAffidavitOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1108_ListManagementQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1108_ListConfigurationDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1108_GetSubmitAffidavitReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1108_SaveReplyReetXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExciseTaxStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExciseTaxReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListExciseTaxStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveExciseTaxReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExciseTaxAffidavitStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateExciseAffidavitStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListExciseRateDistrictOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExciseDistrictCopyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveExciseDistrcitCopyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasterNameSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExciseIndividualTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExciseTaxAffidavitDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExciseTaxAffidavitCalulateAmountDueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAffidavitStatementIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAffiDavitDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOwnerDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistrictSelectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAffidavitDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteAffdvtQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExciseTaxRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListExciseTaxRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveExciseTaxRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExciseTaxRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistrictNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountSelectionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1512_GetDistrictSelectionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListHelpDocumentFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGDocEventEngineDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListEventTypeStatusDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadEventEngineDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventEngineDataHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkOrderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGDocCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveGDocCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGDocEventHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListGDocEventHeaderStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGDocEventHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveGDocEventHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8901_GetWorkOrderEngineOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8901_GetWorkOrderTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8901_SaveWorkOrderEngineOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8912_GetWorkOrderCallInOperationCompleted;
        
        private System.Threading.SendOrPostCallback wListAddressesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8912_SaveWorkOrderCallInOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8910_GetWorkOrderGeneralOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8910_SaveWorkOrderGeneralOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8016_GetStoppageEventDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8016_SaveStoppageEventDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8042_GetTimeFooterDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8046_GetMaterialsFooterDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F27007_GetParcelHeaderSlimDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F15016_GetStatementHeaderSlimDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentItemsDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePaymentItemsDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListPostTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListPostingHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListPostingErrorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListPostingQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListPreviewPostingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearTemporaryRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompilePostingRecordSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback PerformPostingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostIdDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertReverseGLPostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventEngineEventPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEventEngineEventPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListEventEngineTVDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListEventEngineDetailTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEventEngineTVDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEventEngineTVDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEventEngineTVDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSandwichAndItsSliceInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSandwichSubTitleInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListUserNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListDepositHistoryDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepositHistorySearchResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDepositHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListAccountNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinearEventTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveLinearEventTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPointEventTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePointEventTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1211_GetDisbursementCheckListOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1211_UpdateCheckStagingOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1211_UpdateAgencyValidStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1211_DeleteCheckStagingOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1211_CreateChecksOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8056_ListInspectionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8056_SaveInspectionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8056_UpdateInspectionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8056_DeleteInspectionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1210_GetDisbursementDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1210_DisbursementAccountNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1210_SaveDisbursementOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1214_AccountNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1214_ListRefundPaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1214_PrepareChecksOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1226_ListCashLedgerOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1226_GetCashLedgerOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1221_UpdateCashLedgerOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1226_UpdateCashLedgerStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1226_DeleteCashLedgerOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8040_ListTimeInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8040_ListTimeResourceInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8040_SaveTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8040_UpdateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8040_DeleteTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8902_GetHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8902_SaveHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8902_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8044_ListMaterialDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8044_ListMaterialsResourceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8044_SaveMaterialDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8044_UpdateMaterialDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8044_DeleteMaterialItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1220_AccountNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1220_GetReconciledDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1220_ListAccountRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1220_GetAccountRegisterDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F8904_GetEventGridDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9002_GetUserDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1224_AccountNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1224_GetCheckNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1224_ListUnPrintedChecksOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1224_CreateChecksOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1502_GetAccountElementMgmtOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1502_SaveAccountElementMgmtOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1502_DeleteAccountElementMgmtOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9600_ListSearchresultOperationCompleted;
        
        private System.Threading.SendOrPostCallback F9600_ListSortResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1530_GetInstitutionDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1530_SaveInstitutionOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1531_GetCashAccountDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1531_SaveCashAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1532_GetInstitutionContactDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1532_SaveInstitutionContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1030_ListDistrictDefinitionTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1030_GetDistrictDefinitionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback F1030_DeleteDistrictDefinitionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TerraScanService() {
            this.Url = global::TerraScan.Helper.Properties.Settings.Default.TerraScan_Helper_TerraScan_WebService_TerraScanService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event F1030_DeleteDistrictDefinitionRateCompletedEventHandler F1030_DeleteDistrictDefinitionRateCompleted;
        
        /// <remarks/>
        public event F1030_SaveDistrictDefinitionCompletedEventHandler F1030_SaveDistrictDefinitionCompleted;
        
        /// <remarks/>
        public event F1033_ListPostTypesCompletedEventHandler F1033_ListPostTypesCompleted;
        
        /// <remarks/>
        public event F1033_ListSpecialDistrictsCompletedEventHandler F1033_ListSpecialDistrictsCompleted;
        
        /// <remarks/>
        public event F1500_GetDescriptionCompletedEventHandler F1500_GetDescriptionCompleted;
        
        /// <remarks/>
        public event F1500_GetSubFundItemsCompletedEventHandler F1500_GetSubFundItemsCompleted;
        
        /// <remarks/>
        public event F1500_GetFunctionItemsCompletedEventHandler F1500_GetFunctionItemsCompleted;
        
        /// <remarks/>
        public event F1500_ListAccountDetailsCompletedEventHandler F1500_ListAccountDetailsCompleted;
        
        /// <remarks/>
        public event F1500_CreateOrEditAccountCompletedEventHandler F1500_CreateOrEditAccountCompleted;
        
        /// <remarks/>
        public event F1500_ListRegisterTypeCompletedEventHandler F1500_ListRegisterTypeCompleted;
        
        /// <remarks/>
        public event F1500_GetConfigurationValueCompletedEventHandler F1500_GetConfigurationValueCompleted;
        
        /// <remarks/>
        public event F1503_GetGenericElementMgmtCompletedEventHandler F1503_GetGenericElementMgmtCompleted;
        
        /// <remarks/>
        public event F1503_SaveGenericElementMgmtCompletedEventHandler F1503_SaveGenericElementMgmtCompleted;
        
        /// <remarks/>
        public event F1503_DeleteGenericElementMgmtCompletedEventHandler F1503_DeleteGenericElementMgmtCompleted;
        
        /// <remarks/>
        public event F1515_GetSubFundSelectionCompletedEventHandler F1515_GetSubFundSelectionCompleted;
        
        /// <remarks/>
        public event F1513_GetFundSelectionCompletedEventHandler F1513_GetFundSelectionCompleted;
        
        /// <remarks/>
        public event F1031_ListDistrictAssessmentDetailsCompletedEventHandler F1031_ListDistrictAssessmentDetailsCompleted;
        
        /// <remarks/>
        public event F1031_ListDistrictAssessmentIDsCompletedEventHandler F1031_ListDistrictAssessmentIDsCompleted;
        
        /// <remarks/>
        public event F1031_GetDistrictAssessmentParcelIDCompletedEventHandler F1031_GetDistrictAssessmentParcelIDCompleted;
        
        /// <remarks/>
        public event F1031_ListDistrictAssessmentCompletedEventHandler F1031_ListDistrictAssessmentCompleted;
        
        /// <remarks/>
        public event F1031_SaveDistrictAssessmentDetailsCompletedEventHandler F1031_SaveDistrictAssessmentDetailsCompleted;
        
        /// <remarks/>
        public event F1031_DeleteDistrictAssessmentCompletedEventHandler F1031_DeleteDistrictAssessmentCompleted;
        
        /// <remarks/>
        public event F9503_GetSubFundManagementDetailsCompletedEventHandler F9503_GetSubFundManagementDetailsCompleted;
        
        /// <remarks/>
        public event F9503_GetSubFundItemsCompletedEventHandler F9503_GetSubFundItemsCompleted;
        
        /// <remarks/>
        public event F15005_CheckSubFundCompletedEventHandler F15005_CheckSubFundCompleted;
        
        /// <remarks/>
        public event F9503_CreateOrEditSubFundCompletedEventHandler F9503_CreateOrEditSubFundCompleted;
        
        /// <remarks/>
        public event F1501_ListRollYearCompletedEventHandler F1501_ListRollYearCompleted;
        
        /// <remarks/>
        public event F1501_ListGLConfigDetailsCompletedEventHandler F1501_ListGLConfigDetailsCompleted;
        
        /// <remarks/>
        public event F1501_GetGLConfigDetailsCompletedEventHandler F1501_GetGLConfigDetailsCompleted;
        
        /// <remarks/>
        public event F1501_CreateOrEditGLConfigDetailsCompletedEventHandler F1501_CreateOrEditGLConfigDetailsCompleted;
        
        /// <remarks/>
        public event F1410_GetOwnerReceiptingCompletedEventHandler F1410_GetOwnerReceiptingCompleted;
        
        /// <remarks/>
        public event F1410_ListOwnerReceiptingCompletedEventHandler F1410_ListOwnerReceiptingCompleted;
        
        /// <remarks/>
        public event F1410_DeleteOwnerReceiptingCompletedEventHandler F1410_DeleteOwnerReceiptingCompleted;
        
        /// <remarks/>
        public event F1410_SaveOwnerReceiptingCompletedEventHandler F1410_SaveOwnerReceiptingCompleted;
        
        /// <remarks/>
        public event F8000_GetGDocBusinessCompletedEventHandler F8000_GetGDocBusinessCompleted;
        
        /// <remarks/>
        public event F8000_GetGDocDiameterCompletedEventHandler F8000_GetGDocDiameterCompleted;
        
        /// <remarks/>
        public event F8000_GetGDocPropertyReferenceCompletedEventHandler F8000_GetGDocPropertyReferenceCompleted;
        
        /// <remarks/>
        public event wListStreetsCompletedEventHandler wListStreetsCompleted;
        
        /// <remarks/>
        public event F8000_GetGDocUserCompletedEventHandler F8000_GetGDocUserCompleted;
        
        /// <remarks/>
        public event F84121_GetSanitaryManholePropertiesCompletedEventHandler F84121_GetSanitaryManholePropertiesCompleted;
        
        /// <remarks/>
        public event F84121_SaveSanitaryManholePropertiesCompletedEventHandler F84121_SaveSanitaryManholePropertiesCompleted;
        
        /// <remarks/>
        public event F84121_DeleteSanitaryManholePropertiesCompletedEventHandler F84121_DeleteSanitaryManholePropertiesCompleted;
        
        /// <remarks/>
        public event F84122_GetSanitaryManholeLocationCompletedEventHandler F84122_GetSanitaryManholeLocationCompleted;
        
        /// <remarks/>
        public event F84122_SaveSanitaryManholeLocationCompletedEventHandler F84122_SaveSanitaryManholeLocationCompleted;
        
        /// <remarks/>
        public event F84721_GetWaterValvePropertiesCompletedEventHandler F84721_GetWaterValvePropertiesCompleted;
        
        /// <remarks/>
        public event F84721_SaveWaterValvePropertiesCompletedEventHandler F84721_SaveWaterValvePropertiesCompleted;
        
        /// <remarks/>
        public event F84721_DeleteWaterValvePropertiesCompletedEventHandler F84721_DeleteWaterValvePropertiesCompleted;
        
        /// <remarks/>
        public event F9033_ListQueryViewCompletedEventHandler F9033_ListQueryViewCompleted;
        
        /// <remarks/>
        public event F9033_GetDefaultLayoutCompletedEventHandler F9033_GetDefaultLayoutCompleted;
        
        /// <remarks/>
        public event F9033_QueryEngineCompletedEventHandler F9033_QueryEngineCompleted;
        
        /// <remarks/>
        public event F84722_GetWaterValveLocationCompletedEventHandler F84722_GetWaterValveLocationCompleted;
        
        /// <remarks/>
        public event F84722_SaveWaterValveLocationCompletedEventHandler F84722_SaveWaterValveLocationCompleted;
        
        /// <remarks/>
        public event F84723_GetWaterHydrantPropertiesCompletedEventHandler F84723_GetWaterHydrantPropertiesCompleted;
        
        /// <remarks/>
        public event F84723_CheckMainValveIdCompletedEventHandler F84723_CheckMainValveIdCompleted;
        
        /// <remarks/>
        public event F84723_SaveWaterHydrantPropertiesCompletedEventHandler F84723_SaveWaterHydrantPropertiesCompleted;
        
        /// <remarks/>
        public event F84723_DeleteWaterHydrantPropertiesCompletedEventHandler F84723_DeleteWaterHydrantPropertiesCompleted;
        
        /// <remarks/>
        public event F84725_GetWaterPipePropertiesCompletedEventHandler F84725_GetWaterPipePropertiesCompleted;
        
        /// <remarks/>
        public event F84725_SaveWaterPipePropertiesCompletedEventHandler F84725_SaveWaterPipePropertiesCompleted;
        
        /// <remarks/>
        public event F84725_DeleteWaterPipePropertiesCompletedEventHandler F84725_DeleteWaterPipePropertiesCompleted;
        
        /// <remarks/>
        public event F84726_GetWaterPipeLocationCompletedEventHandler F84726_GetWaterPipeLocationCompleted;
        
        /// <remarks/>
        public event F84726_SaveWaterPipeLocationCompletedEventHandler F84726_SaveWaterPipeLocationCompleted;
        
        /// <remarks/>
        public event F15002_GetDistirctFundDetailsCompletedEventHandler F15002_GetDistirctFundDetailsCompleted;
        
        /// <remarks/>
        public event F15002_ListAllFundsCompletedEventHandler F15002_ListAllFundsCompleted;
        
        /// <remarks/>
        public event F15002_CheckDistrictCompletedEventHandler F15002_CheckDistrictCompleted;
        
        /// <remarks/>
        public event F15002_CreateOrEditDistrictMgmtCompletedEventHandler F15002_CreateOrEditDistrictMgmtCompleted;
        
        /// <remarks/>
        public event F84123_GetSanitaryPipePropertiesCompletedEventHandler F84123_GetSanitaryPipePropertiesCompleted;
        
        /// <remarks/>
        public event F84123_SaveSanitaryPipePropertiesCompletedEventHandler F84123_SaveSanitaryPipePropertiesCompleted;
        
        /// <remarks/>
        public event F84123_DeleteSanitaryPipePropertiesCompletedEventHandler F84123_DeleteSanitaryPipePropertiesCompleted;
        
        /// <remarks/>
        public event F84124_GetSanitaryPipeLocationCompletedEventHandler F84124_GetSanitaryPipeLocationCompleted;
        
        /// <remarks/>
        public event F84124_SaveSanitaryPipeLocationCompletedEventHandler F84124_SaveSanitaryPipeLocationCompleted;
        
        /// <remarks/>
        public event F11020_GetRealPropertyStatementCompletedEventHandler F11020_GetRealPropertyStatementCompleted;
        
        /// <remarks/>
        public event F1423_UpdateRealPropertyStatementCompletedEventHandler F1423_UpdateRealPropertyStatementCompleted;
        
        /// <remarks/>
        public event F1423_ListMortgageNameCompletedEventHandler F1423_ListMortgageNameCompleted;
        
        /// <remarks/>
        public event F15020_ListHistoryGridCompletedEventHandler F15020_ListHistoryGridCompleted;
        
        /// <remarks/>
        public event F15020_GetReceiptDetailsCompletedEventHandler F15020_GetReceiptDetailsCompleted;
        
        /// <remarks/>
        public event F1003_GetMinTaxDueCompletedEventHandler F1003_GetMinTaxDueCompleted;
        
        /// <remarks/>
        public event F1004_GetInterestAmountCompletedEventHandler F1004_GetInterestAmountCompleted;
        
        /// <remarks/>
        public event F1009_GetValidReceiptTestCompletedEventHandler F1009_GetValidReceiptTestCompleted;
        
        /// <remarks/>
        public event F1405_SaveMasterReceiptCompletedEventHandler F1405_SaveMasterReceiptCompleted;
        
        /// <remarks/>
        public event F15104_GetReceiptPaymentCompletedEventHandler F15104_GetReceiptPaymentCompleted;
        
        /// <remarks/>
        public event F15104_UpdateReceiptPaymentCompletedEventHandler F15104_UpdateReceiptPaymentCompleted;
        
        /// <remarks/>
        public event F15004_GetAgencyDetailsCompletedEventHandler F15004_GetAgencyDetailsCompleted;
        
        /// <remarks/>
        public event F15004_CheckDuplicateAgencyCompletedEventHandler F15004_CheckDuplicateAgencyCompleted;
        
        /// <remarks/>
        public event F15004_CreateOrEditAgencyDetailsCompletedEventHandler F15004_CreateOrEditAgencyDetailsCompleted;
        
        /// <remarks/>
        public event F15007_CheckDuplicateAccountCompletedEventHandler F15007_CheckDuplicateAccountCompleted;
        
        /// <remarks/>
        public event F9038_LoadLayoutInformationCompletedEventHandler F9038_LoadLayoutInformationCompleted;
        
        /// <remarks/>
        public event F9038_DeleteLayoutInformationCompletedEventHandler F9038_DeleteLayoutInformationCompleted;
        
        /// <remarks/>
        public event F9038_SaveLayoutInformationCompletedEventHandler F9038_SaveLayoutInformationCompleted;
        
        /// <remarks/>
        public event F9001_GetNextWorkingDayCompletedEventHandler F9001_GetNextWorkingDayCompleted;
        
        /// <remarks/>
        public event F15003_GetFundSubFundDetailsCompletedEventHandler F15003_GetFundSubFundDetailsCompleted;
        
        /// <remarks/>
        public event F15003_ListAvailableSubFundsCompletedEventHandler F15003_ListAvailableSubFundsCompleted;
        
        /// <remarks/>
        public event F15003_ListFundTypeCompletedEventHandler F15003_ListFundTypeCompleted;
        
        /// <remarks/>
        public event F15003_CheckFundCompletedEventHandler F15003_CheckFundCompleted;
        
        /// <remarks/>
        public event F15003_CreateOrEditFundMgmtCompletedEventHandler F15003_CreateOrEditFundMgmtCompleted;
        
        /// <remarks/>
        public event F15012_GetExciseReceiptCompletedEventHandler F15012_GetExciseReceiptCompleted;
        
        /// <remarks/>
        public event F15011_GetExciseStatementCompletedEventHandler F15011_GetExciseStatementCompleted;
        
        /// <remarks/>
        public event F15011_SaveExciseStatementCompletedEventHandler F15011_SaveExciseStatementCompleted;
        
        /// <remarks/>
        public event F15010_GetExciseIndividualTypeCompletedEventHandler F15010_GetExciseIndividualTypeCompleted;
        
        /// <remarks/>
        public event F15010_GetExciseTaxAffidavitDetailsCompletedEventHandler F15010_GetExciseTaxAffidavitDetailsCompleted;
        
        /// <remarks/>
        public event F15010_GetExciseTaxAffidavitCalulateAmountDueCompletedEventHandler F15010_GetExciseTaxAffidavitCalulateAmountDueCompleted;
        
        /// <remarks/>
        public event F15010_GetAffidavitStatementIdCompletedEventHandler F15010_GetAffidavitStatementIdCompleted;
        
        /// <remarks/>
        public event F15010_SaveAffiDavitDetailsCompletedEventHandler F15010_SaveAffiDavitDetailsCompleted;
        
        /// <remarks/>
        public event F15010_GetOwnerDetailsCompletedEventHandler F15010_GetOwnerDetailsCompleted;
        
        /// <remarks/>
        public event F15010_GetDistrictSelectionCompletedEventHandler F15010_GetDistrictSelectionCompleted;
        
        /// <remarks/>
        public event F15010_DeleteAffidavitDetailsCompletedEventHandler F15010_DeleteAffidavitDetailsCompleted;
        
        /// <remarks/>
        public event F15013_GetExciseTaxRateCompletedEventHandler F15013_GetExciseTaxRateCompleted;
        
        /// <remarks/>
        public event F15013_ListExciseTaxRateCompletedEventHandler F15013_ListExciseTaxRateCompleted;
        
        /// <remarks/>
        public event F15013_SaveExciseTaxRateCompletedEventHandler F15013_SaveExciseTaxRateCompleted;
        
        /// <remarks/>
        public event F15013_DeleteExciseTaxRateCompletedEventHandler F15013_DeleteExciseTaxRateCompleted;
        
        /// <remarks/>
        public event F15013_GetDistrictNameCompletedEventHandler F15013_GetDistrictNameCompleted;
        
        /// <remarks/>
        public event F15013_GetAccountNameCompletedEventHandler F15013_GetAccountNameCompleted;
        
        /// <remarks/>
        public event GetJournalEntryDetailsCompletedEventHandler GetJournalEntryDetailsCompleted;
        
        /// <remarks/>
        public event UpdateJournalEntryDetailsCompletedEventHandler UpdateJournalEntryDetailsCompleted;
        
        /// <remarks/>
        public event F15019_CheckRollYearCompletedEventHandler F15019_CheckRollYearCompleted;
        
        /// <remarks/>
        public event F9013_ListNextNumberConfigurationCompletedEventHandler F9013_ListNextNumberConfigurationCompleted;
        
        /// <remarks/>
        public event F9013_CheckNextNumberCompletedEventHandler F9013_CheckNextNumberCompleted;
        
        /// <remarks/>
        public event F9013_UpdateNextNumberConfigDetailsCompletedEventHandler F9013_UpdateNextNumberConfigDetailsCompleted;
        
        /// <remarks/>
        public event F9013_ListNextNumberRollYearCompletedEventHandler F9013_ListNextNumberRollYearCompleted;
        
        /// <remarks/>
        public event F15018_GetMiscReceiptCompletedEventHandler F15018_GetMiscReceiptCompleted;
        
        /// <remarks/>
        public event F1021_GetMiscReceiptTemplateCompletedEventHandler F1021_GetMiscReceiptTemplateCompleted;
        
        /// <remarks/>
        public event F1021_SaveMiscReceiptTemplateCompletedEventHandler F1021_SaveMiscReceiptTemplateCompleted;
        
        /// <remarks/>
        public event F1022_ListMiscReceiptTemplateCompletedEventHandler F1022_ListMiscReceiptTemplateCompleted;
        
        /// <remarks/>
        public event F1022_DeleteMiscReceiptTemplateCompletedEventHandler F1022_DeleteMiscReceiptTemplateCompleted;
        
        /// <remarks/>
        public event F1025_ListRollYearCompletedEventHandler F1025_ListRollYearCompleted;
        
        /// <remarks/>
        public event F1025_ListAutoFundTransferDetailsCompletedEventHandler F1025_ListAutoFundTransferDetailsCompleted;
        
        /// <remarks/>
        public event F1025_DeleteAutoFundTransferDetailsCompletedEventHandler F1025_DeleteAutoFundTransferDetailsCompleted;
        
        /// <remarks/>
        public event F1025_UpdateAutoFundTransferDetailsCompletedEventHandler F1025_UpdateAutoFundTransferDetailsCompleted;
        
        /// <remarks/>
        public event F1025_CheckRollYearCompletedEventHandler F1025_CheckRollYearCompleted;
        
        /// <remarks/>
        public event RdlToCode_GetCompletedEventHandler RdlToCode_GetCompleted;
        
        /// <remarks/>
        public event RdlToCode_FillComboCompletedEventHandler RdlToCode_FillComboCompleted;
        
        /// <remarks/>
        public event RdlToCode_SaveCompletedEventHandler RdlToCode_SaveCompleted;
        
        /// <remarks/>
        public event RdlToCode_DeleteCompletedEventHandler RdlToCode_DeleteCompleted;
        
        /// <remarks/>
        public event F27006_ListParcelOwnershipCompletedEventHandler F27006_ListParcelOwnershipCompleted;
        
        /// <remarks/>
        public event F27006_ListALLOwnerDetailsCompletedEventHandler F27006_ListALLOwnerDetailsCompleted;
        
        /// <remarks/>
        public event F27006_SaveParcelOwnershipCompletedEventHandler F27006_SaveParcelOwnershipCompleted;
        
        /// <remarks/>
        public event F27006_CheckOwnershipDetailsCompletedEventHandler F27006_CheckOwnershipDetailsCompleted;
        
        /// <remarks/>
        public event F25000_GetParcelDetailsCompletedEventHandler F25000_GetParcelDetailsCompleted;
        
        /// <remarks/>
        public event F35001_GetValueSliceHeaderCompletedEventHandler F35001_GetValueSliceHeaderCompleted;
        
        /// <remarks/>
        public event F35001_GetAdjustmentSliceValueCompletedEventHandler F35001_GetAdjustmentSliceValueCompleted;
        
        /// <remarks/>
        public event F35002_ListAdjustmentTypeCompletedEventHandler F35002_ListAdjustmentTypeCompleted;
        
        /// <remarks/>
        public event F35001_DeleteValueSliceCompletedEventHandler F35001_DeleteValueSliceCompleted;
        
        /// <remarks/>
        public event F35000_InsertOrUpdateValueSliceCompletedEventHandler F35000_InsertOrUpdateValueSliceCompleted;
        
        /// <remarks/>
        public event F35000_GetAppraisalSummaryObjectsCompletedEventHandler F35000_GetAppraisalSummaryObjectsCompleted;
        
        /// <remarks/>
        public event F35000_InsertObjectCompletedEventHandler F35000_InsertObjectCompleted;
        
        /// <remarks/>
        public event F35000_ListObjectSliceTypesCompletedEventHandler F35000_ListObjectSliceTypesCompleted;
        
        /// <remarks/>
        public event F27000_GetMiscAssessmentCompletedEventHandler F27000_GetMiscAssessmentCompleted;
        
        /// <remarks/>
        public event F27000_ListMADistrictTypeCompletedEventHandler F27000_ListMADistrictTypeCompleted;
        
        /// <remarks/>
        public event F27000_ListMADistrictItemTypeCompletedEventHandler F27000_ListMADistrictItemTypeCompleted;
        
        /// <remarks/>
        public event F27000_SaveMADetailsCompletedEventHandler F27000_SaveMADetailsCompleted;
        
        /// <remarks/>
        public event F15015_ListStatementOwnershipCompletedEventHandler F15015_ListStatementOwnershipCompleted;
        
        /// <remarks/>
        public event F15015_SaveStatementOwnershipCompletedEventHandler F15015_SaveStatementOwnershipCompleted;
        
        /// <remarks/>
        public event F9060_ListAuditingTablesCompletedEventHandler F9060_ListAuditingTablesCompleted;
        
        /// <remarks/>
        public event F9060_ListAuditingColumnsCompletedEventHandler F9060_ListAuditingColumnsCompleted;
        
        /// <remarks/>
        public event F9060_SaveAuditConfigurationCompletedEventHandler F9060_SaveAuditConfigurationCompleted;
        
        /// <remarks/>
        public event F9060_DeleteAuditConfigurationCompletedEventHandler F9060_DeleteAuditConfigurationCompleted;
        
        /// <remarks/>
        public event CheckInstallationCompletedEventHandler CheckInstallationCompleted;
        
        /// <remarks/>
        public event ListHistoryGridCompletedEventHandler ListHistoryGridCompleted;
        
        /// <remarks/>
        public event GetReceiptDetailsCompletedEventHandler GetReceiptDetailsCompleted;
        
        /// <remarks/>
        public event ListTenderTypeCompletedEventHandler ListTenderTypeCompleted;
        
        /// <remarks/>
        public event GetValidReceiptTestCompletedEventHandler GetValidReceiptTestCompleted;
        
        /// <remarks/>
        public event SaveReceiptCompletedEventHandler SaveReceiptCompleted;
        
        /// <remarks/>
        public event GetMinTaxDueCompletedEventHandler GetMinTaxDueCompleted;
        
        /// <remarks/>
        public event GetInterestAmountCompletedEventHandler GetInterestAmountCompleted;
        
        /// <remarks/>
        public event GetReceiptHeaderDetailsCompletedEventHandler GetReceiptHeaderDetailsCompleted;
        
        /// <remarks/>
        public event ListReceiptItemsCompletedEventHandler ListReceiptItemsCompleted;
        
        /// <remarks/>
        public event GetReceiptStatementHeaderDetailsCompletedEventHandler GetReceiptStatementHeaderDetailsCompleted;
        
        /// <remarks/>
        public event ListReceiptOwnersCompletedEventHandler ListReceiptOwnersCompleted;
        
        /// <remarks/>
        public event GetPaymentCompletedEventHandler GetPaymentCompleted;
        
        /// <remarks/>
        public event SavePaymentCompletedEventHandler SavePaymentCompleted;
        
        /// <remarks/>
        public event GetTenderTypeConfigurationCompletedEventHandler GetTenderTypeConfigurationCompleted;
        
        /// <remarks/>
        public event GetCommentsCompletedEventHandler GetCommentsCompleted;
        
        /// <remarks/>
        public event F9075_GetCommentCompletedEventHandler F9075_GetCommentCompleted;
        
        /// <remarks/>
        public event SaveCommentsCompletedEventHandler SaveCommentsCompleted;
        
        /// <remarks/>
        public event DeleteCommentsCompletedEventHandler DeleteCommentsCompleted;
        
        /// <remarks/>
        public event GetCommentsCountCompletedEventHandler GetCommentsCountCompleted;
        
        /// <remarks/>
        public event GetConfigDetailsCompletedEventHandler GetConfigDetailsCompleted;
        
        /// <remarks/>
        public event GetConnectionStringCompletedEventHandler GetConnectionStringCompleted;
        
        /// <remarks/>
        public event GetAttachmentCountCompletedEventHandler GetAttachmentCountCompleted;
        
        /// <remarks/>
        public event GetAttachmentItemsCompletedEventHandler GetAttachmentItemsCompleted;
        
        /// <remarks/>
        public event GetAttachementFunctionNameCompletedEventHandler GetAttachementFunctionNameCompleted;
        
        /// <remarks/>
        public event SaveAttachmentsCompletedEventHandler SaveAttachmentsCompleted;
        
        /// <remarks/>
        public event DeleteAttachmentsCompletedEventHandler DeleteAttachmentsCompleted;
        
        /// <remarks/>
        public event GetProgramIdCompletedEventHandler GetProgramIdCompleted;
        
        /// <remarks/>
        public event GetFilePathCompletedEventHandler GetFilePathCompleted;
        
        /// <remarks/>
        public event GetRealEstateStatementCountCompletedEventHandler GetRealEstateStatementCountCompleted;
        
        /// <remarks/>
        public event GetRealEstateStatementIdsCompletedEventHandler GetRealEstateStatementIdsCompleted;
        
        /// <remarks/>
        public event GetRealEstateStatementCompletedEventHandler GetRealEstateStatementCompleted;
        
        /// <remarks/>
        public event ListQueryCompletedEventHandler ListQueryCompleted;
        
        /// <remarks/>
        public event ListSortQueryCompletedEventHandler ListSortQueryCompleted;
        
        /// <remarks/>
        public event SaveQueryCompletedEventHandler SaveQueryCompleted;
        
        /// <remarks/>
        public event ExecuteQueryCompletedEventHandler ExecuteQueryCompleted;
        
        /// <remarks/>
        public event CheckQueryExistCompletedEventHandler CheckQueryExistCompleted;
        
        /// <remarks/>
        public event GetQueryResultCompletedEventHandler GetQueryResultCompleted;
        
        /// <remarks/>
        public event DeleteQueryCompletedEventHandler DeleteQueryCompleted;
        
        /// <remarks/>
        public event ExecuteSnapshotCompletedEventHandler ExecuteSnapshotCompleted;
        
        /// <remarks/>
        public event SaveSnapShotCompletedEventHandler SaveSnapShotCompleted;
        
        /// <remarks/>
        public event CheckSnapShotExistCompletedEventHandler CheckSnapShotExistCompleted;
        
        /// <remarks/>
        public event GetSnapShotResultCompletedEventHandler GetSnapShotResultCompleted;
        
        /// <remarks/>
        public event ListSnapShotCompletedEventHandler ListSnapShotCompleted;
        
        /// <remarks/>
        public event ListSortSnapShotCompletedEventHandler ListSortSnapShotCompleted;
        
        /// <remarks/>
        public event DeleteSnapShotCompletedEventHandler DeleteSnapShotCompleted;
        
        /// <remarks/>
        public event GetReportDetailsCompletedEventHandler GetReportDetailsCompleted;
        
        /// <remarks/>
        public event F9008_GetReportDetailsCompletedEventHandler F9008_GetReportDetailsCompleted;
        
        /// <remarks/>
        public event F9008_SaveReportDetailsCompletedEventHandler F9008_SaveReportDetailsCompleted;
        
        /// <remarks/>
        public event GetAutoPrintStatusCompletedEventHandler GetAutoPrintStatusCompleted;
        
        /// <remarks/>
        public event SaveAutoPrintCompletedEventHandler SaveAutoPrintCompleted;
        
        /// <remarks/>
        public event GetMenuItemsCompletedEventHandler GetMenuItemsCompleted;
        
        /// <remarks/>
        public event GetFormItemsCompletedEventHandler GetFormItemsCompleted;
        
        /// <remarks/>
        public event GetFormTitleCompletedEventHandler GetFormTitleCompleted;
        
        /// <remarks/>
        public event GetFormPermissionsCompletedEventHandler GetFormPermissionsCompleted;
        
        /// <remarks/>
        public event GetUserGroupDetailsCompletedEventHandler GetUserGroupDetailsCompleted;
        
        /// <remarks/>
        public event SaveUserDetailsCompletedEventHandler SaveUserDetailsCompleted;
        
        /// <remarks/>
        public event DeleteUserDetailsCompletedEventHandler DeleteUserDetailsCompleted;
        
        /// <remarks/>
        public event GetGroupDetailsCompletedEventHandler GetGroupDetailsCompleted;
        
        /// <remarks/>
        public event InsertGroupDetailsCompletedEventHandler InsertGroupDetailsCompleted;
        
        /// <remarks/>
        public event DeleteGroupDetailsCompletedEventHandler DeleteGroupDetailsCompleted;
        
        /// <remarks/>
        public event GetGroupPermissionDetailsCompletedEventHandler GetGroupPermissionDetailsCompleted;
        
        /// <remarks/>
        public event SaveGroupPermissionDetailsCompletedEventHandler SaveGroupPermissionDetailsCompleted;
        
        /// <remarks/>
        public event LogExceptionCompletedEventHandler LogExceptionCompleted;
        
        /// <remarks/>
        public event GetQueryUtilityListCompletedEventHandler GetQueryUtilityListCompleted;
        
        /// <remarks/>
        public event DeleteQueryUtilityCompletedEventHandler DeleteQueryUtilityCompleted;
        
        /// <remarks/>
        public event InsertQueryUtilityCompletedEventHandler InsertQueryUtilityCompleted;
        
        /// <remarks/>
        public event GetSnapshotUtilityListCompletedEventHandler GetSnapshotUtilityListCompleted;
        
        /// <remarks/>
        public event DeleteSnapshotUtilityCompletedEventHandler DeleteSnapshotUtilityCompleted;
        
        /// <remarks/>
        public event InsertSnapshotUtilityCompletedEventHandler InsertSnapshotUtilityCompleted;
        
        /// <remarks/>
        public event ValidationCompletedEventHandler ValidationCompleted;
        
        /// <remarks/>
        public event GetUserInformationCompletedEventHandler GetUserInformationCompleted;
        
        /// <remarks/>
        public event GetConfigInformationCompletedEventHandler GetConfigInformationCompleted;
        
        /// <remarks/>
        public event GetAuthenticationStateCompletedEventHandler GetAuthenticationStateCompleted;
        
        /// <remarks/>
        public event GetSQLQueryResultCompletedEventHandler GetSQLQueryResultCompleted;
        
        /// <remarks/>
        public event GetSQLDescriptionCompletedEventHandler GetSQLDescriptionCompleted;
        
        /// <remarks/>
        public event GetSQLStringCompletedEventHandler GetSQLStringCompleted;
        
        /// <remarks/>
        public event GetSQLCategoryCompletedEventHandler GetSQLCategoryCompleted;
        
        /// <remarks/>
        public event SaveSQLQueryCompletedEventHandler SaveSQLQueryCompleted;
        
        /// <remarks/>
        public event F9015_DeleteQueryCompletedEventHandler F9015_DeleteQueryCompleted;
        
        /// <remarks/>
        public event GetCountyConfigurationCompletedEventHandler GetCountyConfigurationCompleted;
        
        /// <remarks/>
        public event UpdateCountyConfigDetailsCompletedEventHandler UpdateCountyConfigDetailsCompleted;
        
        /// <remarks/>
        public event GetMortgageTemplateCompletedEventHandler GetMortgageTemplateCompleted;
        
        /// <remarks/>
        public event ListMortgageTemplateCompletedEventHandler ListMortgageTemplateCompleted;
        
        /// <remarks/>
        public event ListMortgageImportFileTypeCompletedEventHandler ListMortgageImportFileTypeCompleted;
        
        /// <remarks/>
        public event SaveMortgageImportTemplateCompletedEventHandler SaveMortgageImportTemplateCompleted;
        
        /// <remarks/>
        public event DeleteMortgageTemplateCompletedEventHandler DeleteMortgageTemplateCompleted;
        
        /// <remarks/>
        public event GetMortgageImportStatementIdsCompletedEventHandler GetMortgageImportStatementIdsCompleted;
        
        /// <remarks/>
        public event GetMortgageImportStatementCompletedEventHandler GetMortgageImportStatementCompleted;
        
        /// <remarks/>
        public event SaveMortgageImportEntriesCompletedEventHandler SaveMortgageImportEntriesCompleted;
        
        /// <remarks/>
        public event GetMortgageImportTemplateDetailsCompletedEventHandler GetMortgageImportTemplateDetailsCompleted;
        
        /// <remarks/>
        public event MortgageImportCheckErrorsCompletedEventHandler MortgageImportCheckErrorsCompleted;
        
        /// <remarks/>
        public event CheckMortgageImportValidReceiptCompletedEventHandler CheckMortgageImportValidReceiptCompleted;
        
        /// <remarks/>
        public event SaveMortgageImportCompletedEventHandler SaveMortgageImportCompleted;
        
        /// <remarks/>
        public event CreateReceiptCompletedEventHandler CreateReceiptCompleted;
        
        /// <remarks/>
        public event DeleteMortgageImportCompletedEventHandler DeleteMortgageImportCompleted;
        
        /// <remarks/>
        public event DeleteMortgageImportFileEntriesCompletedEventHandler DeleteMortgageImportFileEntriesCompleted;
        
        /// <remarks/>
        public event GetErrorEngineCompletedEventHandler GetErrorEngineCompleted;
        
        /// <remarks/>
        public event InsertErrorEngineCompletedEventHandler InsertErrorEngineCompleted;
        
        /// <remarks/>
        public event ListNextNumberConfigurationCompletedEventHandler ListNextNumberConfigurationCompleted;
        
        /// <remarks/>
        public event CheckNextNumberCompletedEventHandler CheckNextNumberCompleted;
        
        /// <remarks/>
        public event UpdateNextNumberConfigDetailsCompletedEventHandler UpdateNextNumberConfigDetailsCompleted;
        
        /// <remarks/>
        public event F1107_ExciseWorkQueue_GetWorkQueueSearchResultCompletedEventHandler F1107_ExciseWorkQueue_GetWorkQueueSearchResultCompleted;
        
        /// <remarks/>
        public event F1109_ListManagementQueueCompletedEventHandler F1109_ListManagementQueueCompleted;
        
        /// <remarks/>
        public event F1109_ManagementQueueFilterResultCompletedEventHandler F1109_ManagementQueueFilterResultCompleted;
        
        /// <remarks/>
        public event F1109_FilterSearchAffidavitCompletedEventHandler F1109_FilterSearchAffidavitCompleted;
        
        /// <remarks/>
        public event F1109_ListRollYearCompletedEventHandler F1109_ListRollYearCompleted;
        
        /// <remarks/>
        public event F1108_GetSubmitAffidavitCompletedEventHandler F1108_GetSubmitAffidavitCompleted;
        
        /// <remarks/>
        public event F1108_ListManagementQueueCompletedEventHandler F1108_ListManagementQueueCompleted;
        
        /// <remarks/>
        public event F1108_ListConfigurationDetailCompletedEventHandler F1108_ListConfigurationDetailCompleted;
        
        /// <remarks/>
        public event F1108_GetSubmitAffidavitReplyCompletedEventHandler F1108_GetSubmitAffidavitReplyCompleted;
        
        /// <remarks/>
        public event F1108_SaveReplyReetXmlCompletedEventHandler F1108_SaveReplyReetXmlCompleted;
        
        /// <remarks/>
        public event GetExciseTaxStatementCompletedEventHandler GetExciseTaxStatementCompleted;
        
        /// <remarks/>
        public event GetExciseTaxReceiptCompletedEventHandler GetExciseTaxReceiptCompleted;
        
        /// <remarks/>
        public event ListExciseTaxStatementCompletedEventHandler ListExciseTaxStatementCompleted;
        
        /// <remarks/>
        public event SaveExciseTaxReceiptCompletedEventHandler SaveExciseTaxReceiptCompleted;
        
        /// <remarks/>
        public event GetExciseTaxAffidavitStatusCompletedEventHandler GetExciseTaxAffidavitStatusCompleted;
        
        /// <remarks/>
        public event UpdateExciseAffidavitStatusCompletedEventHandler UpdateExciseAffidavitStatusCompleted;
        
        /// <remarks/>
        public event ListExciseRateDistrictCompletedEventHandler ListExciseRateDistrictCompleted;
        
        /// <remarks/>
        public event GetExciseDistrictCopyCompletedEventHandler GetExciseDistrictCopyCompleted;
        
        /// <remarks/>
        public event SaveExciseDistrcitCopyCompletedEventHandler SaveExciseDistrcitCopyCompleted;
        
        /// <remarks/>
        public event GetMasterNameSearchCompletedEventHandler GetMasterNameSearchCompleted;
        
        /// <remarks/>
        public event GetExciseIndividualTypeCompletedEventHandler GetExciseIndividualTypeCompleted;
        
        /// <remarks/>
        public event GetExciseTaxAffidavitDetailsCompletedEventHandler GetExciseTaxAffidavitDetailsCompleted;
        
        /// <remarks/>
        public event GetExciseTaxAffidavitCalulateAmountDueCompletedEventHandler GetExciseTaxAffidavitCalulateAmountDueCompleted;
        
        /// <remarks/>
        public event GetAffidavitStatementIdCompletedEventHandler GetAffidavitStatementIdCompleted;
        
        /// <remarks/>
        public event SaveAffiDavitDetailsCompletedEventHandler SaveAffiDavitDetailsCompleted;
        
        /// <remarks/>
        public event GetOwnerDetailsCompletedEventHandler GetOwnerDetailsCompleted;
        
        /// <remarks/>
        public event GetDistrictSelectionCompletedEventHandler GetDistrictSelectionCompleted;
        
        /// <remarks/>
        public event DeleteAffidavitDetailsCompletedEventHandler DeleteAffidavitDetailsCompleted;
        
        /// <remarks/>
        public event ExecuteAffdvtQueryCompletedEventHandler ExecuteAffdvtQueryCompleted;
        
        /// <remarks/>
        public event GetExciseTaxRateCompletedEventHandler GetExciseTaxRateCompleted;
        
        /// <remarks/>
        public event ListExciseTaxRateCompletedEventHandler ListExciseTaxRateCompleted;
        
        /// <remarks/>
        public event SaveExciseTaxRateCompletedEventHandler SaveExciseTaxRateCompleted;
        
        /// <remarks/>
        public event DeleteExciseTaxRateCompletedEventHandler DeleteExciseTaxRateCompleted;
        
        /// <remarks/>
        public event GetDistrictNameCompletedEventHandler GetDistrictNameCompleted;
        
        /// <remarks/>
        public event GetAccountNameCompletedEventHandler GetAccountNameCompleted;
        
        /// <remarks/>
        public event GetAccountSelectionDataCompletedEventHandler GetAccountSelectionDataCompleted;
        
        /// <remarks/>
        public event F1512_GetDistrictSelectionDataCompletedEventHandler F1512_GetDistrictSelectionDataCompleted;
        
        /// <remarks/>
        public event ListHelpDocumentFormCompletedEventHandler ListHelpDocumentFormCompleted;
        
        /// <remarks/>
        public event InsertGDocEventEngineDataCompletedEventHandler InsertGDocEventEngineDataCompleted;
        
        /// <remarks/>
        public event ListEventTypeStatusDetailsCompletedEventHandler ListEventTypeStatusDetailsCompleted;
        
        /// <remarks/>
        public event LoadEventEngineDataCompletedEventHandler LoadEventEngineDataCompleted;
        
        /// <remarks/>
        public event GetEventEngineDataHeaderCompletedEventHandler GetEventEngineDataHeaderCompleted;
        
        /// <remarks/>
        public event GetWorkOrderDetailsCompletedEventHandler GetWorkOrderDetailsCompleted;
        
        /// <remarks/>
        public event GetGDocCommentCompletedEventHandler GetGDocCommentCompleted;
        
        /// <remarks/>
        public event SaveGDocCommentCompletedEventHandler SaveGDocCommentCompleted;
        
        /// <remarks/>
        public event GetGDocEventHeaderCompletedEventHandler GetGDocEventHeaderCompleted;
        
        /// <remarks/>
        public event ListGDocEventHeaderStatusCompletedEventHandler ListGDocEventHeaderStatusCompleted;
        
        /// <remarks/>
        public event DeleteGDocEventHeaderCompletedEventHandler DeleteGDocEventHeaderCompleted;
        
        /// <remarks/>
        public event SaveGDocEventHeaderCompletedEventHandler SaveGDocEventHeaderCompleted;
        
        /// <remarks/>
        public event F8901_GetWorkOrderEngineCompletedEventHandler F8901_GetWorkOrderEngineCompleted;
        
        /// <remarks/>
        public event F8901_GetWorkOrderTypeCompletedEventHandler F8901_GetWorkOrderTypeCompleted;
        
        /// <remarks/>
        public event F8901_SaveWorkOrderEngineCompletedEventHandler F8901_SaveWorkOrderEngineCompleted;
        
        /// <remarks/>
        public event F8912_GetWorkOrderCallInCompletedEventHandler F8912_GetWorkOrderCallInCompleted;
        
        /// <remarks/>
        public event wListAddressesCompletedEventHandler wListAddressesCompleted;
        
        /// <remarks/>
        public event F8912_SaveWorkOrderCallInCompletedEventHandler F8912_SaveWorkOrderCallInCompleted;
        
        /// <remarks/>
        public event F8910_GetWorkOrderGeneralCompletedEventHandler F8910_GetWorkOrderGeneralCompleted;
        
        /// <remarks/>
        public event F8910_SaveWorkOrderGeneralCompletedEventHandler F8910_SaveWorkOrderGeneralCompleted;
        
        /// <remarks/>
        public event F8016_GetStoppageEventDetailsCompletedEventHandler F8016_GetStoppageEventDetailsCompleted;
        
        /// <remarks/>
        public event F8016_SaveStoppageEventDetailsCompletedEventHandler F8016_SaveStoppageEventDetailsCompleted;
        
        /// <remarks/>
        public event F8042_GetTimeFooterDetailsCompletedEventHandler F8042_GetTimeFooterDetailsCompleted;
        
        /// <remarks/>
        public event F8046_GetMaterialsFooterDetailsCompletedEventHandler F8046_GetMaterialsFooterDetailsCompleted;
        
        /// <remarks/>
        public event F27007_GetParcelHeaderSlimDetailsCompletedEventHandler F27007_GetParcelHeaderSlimDetailsCompleted;
        
        /// <remarks/>
        public event F15016_GetStatementHeaderSlimDetailsCompletedEventHandler F15016_GetStatementHeaderSlimDetailsCompleted;
        
        /// <remarks/>
        public event GetPaymentItemsDetailsCompletedEventHandler GetPaymentItemsDetailsCompleted;
        
        /// <remarks/>
        public event SavePaymentItemsDetailsCompletedEventHandler SavePaymentItemsDetailsCompleted;
        
        /// <remarks/>
        public event ListPostTypesCompletedEventHandler ListPostTypesCompleted;
        
        /// <remarks/>
        public event ListPostingHistoryCompletedEventHandler ListPostingHistoryCompleted;
        
        /// <remarks/>
        public event ListPostingErrorsCompletedEventHandler ListPostingErrorsCompleted;
        
        /// <remarks/>
        public event InsertAccountCompletedEventHandler InsertAccountCompleted;
        
        /// <remarks/>
        public event ListPostingQueueCompletedEventHandler ListPostingQueueCompleted;
        
        /// <remarks/>
        public event ListPreviewPostingCompletedEventHandler ListPreviewPostingCompleted;
        
        /// <remarks/>
        public event ClearTemporaryRecordsCompletedEventHandler ClearTemporaryRecordsCompleted;
        
        /// <remarks/>
        public event CompilePostingRecordSetCompletedEventHandler CompilePostingRecordSetCompleted;
        
        /// <remarks/>
        public event PerformPostingCompletedEventHandler PerformPostingCompleted;
        
        /// <remarks/>
        public event GetPostIdDetailsCompletedEventHandler GetPostIdDetailsCompleted;
        
        /// <remarks/>
        public event InsertReverseGLPostCompletedEventHandler InsertReverseGLPostCompleted;
        
        /// <remarks/>
        public event GetEventEngineEventPropertiesCompletedEventHandler GetEventEngineEventPropertiesCompleted;
        
        /// <remarks/>
        public event SaveEventEngineEventPropertiesCompletedEventHandler SaveEventEngineEventPropertiesCompleted;
        
        /// <remarks/>
        public event ListEventEngineTVDetailsCompletedEventHandler ListEventEngineTVDetailsCompleted;
        
        /// <remarks/>
        public event ListEventEngineDetailTypesCompletedEventHandler ListEventEngineDetailTypesCompleted;
        
        /// <remarks/>
        public event SaveEventEngineTVDetailsCompletedEventHandler SaveEventEngineTVDetailsCompleted;
        
        /// <remarks/>
        public event UpdateEventEngineTVDetailsCompletedEventHandler UpdateEventEngineTVDetailsCompleted;
        
        /// <remarks/>
        public event DeleteEventEngineTVDetailsCompletedEventHandler DeleteEventEngineTVDetailsCompleted;
        
        /// <remarks/>
        public event GetSandwichAndItsSliceInformationCompletedEventHandler GetSandwichAndItsSliceInformationCompleted;
        
        /// <remarks/>
        public event GetSandwichSubTitleInformationCompletedEventHandler GetSandwichSubTitleInformationCompleted;
        
        /// <remarks/>
        public event GetFormDetailsCompletedEventHandler GetFormDetailsCompleted;
        
        /// <remarks/>
        public event ListUserNamesCompletedEventHandler ListUserNamesCompleted;
        
        /// <remarks/>
        public event ListDepositHistoryDetailsCompletedEventHandler ListDepositHistoryDetailsCompleted;
        
        /// <remarks/>
        public event GetDepositHistorySearchResultCompletedEventHandler GetDepositHistorySearchResultCompleted;
        
        /// <remarks/>
        public event UpdateDepositHistoryCompletedEventHandler UpdateDepositHistoryCompleted;
        
        /// <remarks/>
        public event ListAccountNamesCompletedEventHandler ListAccountNamesCompleted;
        
        /// <remarks/>
        public event GetLinearEventTypeCompletedEventHandler GetLinearEventTypeCompleted;
        
        /// <remarks/>
        public event SaveLinearEventTypeCompletedEventHandler SaveLinearEventTypeCompleted;
        
        /// <remarks/>
        public event GetPointEventTypeCompletedEventHandler GetPointEventTypeCompleted;
        
        /// <remarks/>
        public event SavePointEventTypeCompletedEventHandler SavePointEventTypeCompleted;
        
        /// <remarks/>
        public event F1211_GetDisbursementCheckListCompletedEventHandler F1211_GetDisbursementCheckListCompleted;
        
        /// <remarks/>
        public event F1211_UpdateCheckStagingCompletedEventHandler F1211_UpdateCheckStagingCompleted;
        
        /// <remarks/>
        public event F1211_UpdateAgencyValidStatusCompletedEventHandler F1211_UpdateAgencyValidStatusCompleted;
        
        /// <remarks/>
        public event F1211_DeleteCheckStagingCompletedEventHandler F1211_DeleteCheckStagingCompleted;
        
        /// <remarks/>
        public event F1211_CreateChecksCompletedEventHandler F1211_CreateChecksCompleted;
        
        /// <remarks/>
        public event F8056_ListInspectionDetailsCompletedEventHandler F8056_ListInspectionDetailsCompleted;
        
        /// <remarks/>
        public event F8056_SaveInspectionDetailsCompletedEventHandler F8056_SaveInspectionDetailsCompleted;
        
        /// <remarks/>
        public event F8056_UpdateInspectionDetailsCompletedEventHandler F8056_UpdateInspectionDetailsCompleted;
        
        /// <remarks/>
        public event F8056_DeleteInspectionDetailsCompletedEventHandler F8056_DeleteInspectionDetailsCompleted;
        
        /// <remarks/>
        public event F1210_GetDisbursementDetailsCompletedEventHandler F1210_GetDisbursementDetailsCompleted;
        
        /// <remarks/>
        public event F1210_DisbursementAccountNamesCompletedEventHandler F1210_DisbursementAccountNamesCompleted;
        
        /// <remarks/>
        public event F1210_SaveDisbursementCompletedEventHandler F1210_SaveDisbursementCompleted;
        
        /// <remarks/>
        public event F1214_AccountNamesCompletedEventHandler F1214_AccountNamesCompleted;
        
        /// <remarks/>
        public event F1214_ListRefundPaymentsCompletedEventHandler F1214_ListRefundPaymentsCompleted;
        
        /// <remarks/>
        public event F1214_PrepareChecksCompletedEventHandler F1214_PrepareChecksCompleted;
        
        /// <remarks/>
        public event F1226_ListCashLedgerCompletedEventHandler F1226_ListCashLedgerCompleted;
        
        /// <remarks/>
        public event F1226_GetCashLedgerCompletedEventHandler F1226_GetCashLedgerCompleted;
        
        /// <remarks/>
        public event F1221_UpdateCashLedgerCompletedEventHandler F1221_UpdateCashLedgerCompleted;
        
        /// <remarks/>
        public event F1226_UpdateCashLedgerStatusCompletedEventHandler F1226_UpdateCashLedgerStatusCompleted;
        
        /// <remarks/>
        public event F1226_DeleteCashLedgerCompletedEventHandler F1226_DeleteCashLedgerCompleted;
        
        /// <remarks/>
        public event F8040_ListTimeInformationCompletedEventHandler F8040_ListTimeInformationCompleted;
        
        /// <remarks/>
        public event F8040_ListTimeResourceInformationCompletedEventHandler F8040_ListTimeResourceInformationCompleted;
        
        /// <remarks/>
        public event F8040_SaveTimeCompletedEventHandler F8040_SaveTimeCompleted;
        
        /// <remarks/>
        public event F8040_UpdateTimeCompletedEventHandler F8040_UpdateTimeCompleted;
        
        /// <remarks/>
        public event F8040_DeleteTimeCompletedEventHandler F8040_DeleteTimeCompleted;
        
        /// <remarks/>
        public event F8902_GetHeaderCompletedEventHandler F8902_GetHeaderCompleted;
        
        /// <remarks/>
        public event F8902_SaveHeaderCompletedEventHandler F8902_SaveHeaderCompleted;
        
        /// <remarks/>
        public event F8902_DeleteCompletedEventHandler F8902_DeleteCompleted;
        
        /// <remarks/>
        public event F8044_ListMaterialDetailsCompletedEventHandler F8044_ListMaterialDetailsCompleted;
        
        /// <remarks/>
        public event F8044_ListMaterialsResourceTypeCompletedEventHandler F8044_ListMaterialsResourceTypeCompleted;
        
        /// <remarks/>
        public event F8044_SaveMaterialDetailsCompletedEventHandler F8044_SaveMaterialDetailsCompleted;
        
        /// <remarks/>
        public event F8044_UpdateMaterialDetailsCompletedEventHandler F8044_UpdateMaterialDetailsCompleted;
        
        /// <remarks/>
        public event F8044_DeleteMaterialItemCompletedEventHandler F8044_DeleteMaterialItemCompleted;
        
        /// <remarks/>
        public event F1220_AccountNamesCompletedEventHandler F1220_AccountNamesCompleted;
        
        /// <remarks/>
        public event F1220_GetReconciledDetailsCompletedEventHandler F1220_GetReconciledDetailsCompleted;
        
        /// <remarks/>
        public event F1220_ListAccountRegisterCompletedEventHandler F1220_ListAccountRegisterCompleted;
        
        /// <remarks/>
        public event F1220_GetAccountRegisterDetailsCompletedEventHandler F1220_GetAccountRegisterDetailsCompleted;
        
        /// <remarks/>
        public event F8904_GetEventGridDetailsCompletedEventHandler F8904_GetEventGridDetailsCompleted;
        
        /// <remarks/>
        public event F9002_GetUserDetailsCompletedEventHandler F9002_GetUserDetailsCompleted;
        
        /// <remarks/>
        public event F1224_AccountNamesCompletedEventHandler F1224_AccountNamesCompleted;
        
        /// <remarks/>
        public event F1224_GetCheckNumberCompletedEventHandler F1224_GetCheckNumberCompleted;
        
        /// <remarks/>
        public event F1224_ListUnPrintedChecksCompletedEventHandler F1224_ListUnPrintedChecksCompleted;
        
        /// <remarks/>
        public event F1224_CreateChecksCompletedEventHandler F1224_CreateChecksCompleted;
        
        /// <remarks/>
        public event F1502_GetAccountElementMgmtCompletedEventHandler F1502_GetAccountElementMgmtCompleted;
        
        /// <remarks/>
        public event F1502_SaveAccountElementMgmtCompletedEventHandler F1502_SaveAccountElementMgmtCompleted;
        
        /// <remarks/>
        public event F1502_DeleteAccountElementMgmtCompletedEventHandler F1502_DeleteAccountElementMgmtCompleted;
        
        /// <remarks/>
        public event F9600_ListSearchresultCompletedEventHandler F9600_ListSearchresultCompleted;
        
        /// <remarks/>
        public event F9600_ListSortResultCompletedEventHandler F9600_ListSortResultCompleted;
        
        /// <remarks/>
        public event F1530_GetInstitutionDetailCompletedEventHandler F1530_GetInstitutionDetailCompleted;
        
        /// <remarks/>
        public event F1530_SaveInstitutionCompletedEventHandler F1530_SaveInstitutionCompleted;
        
        /// <remarks/>
        public event F1531_GetCashAccountDetailCompletedEventHandler F1531_GetCashAccountDetailCompleted;
        
        /// <remarks/>
        public event F1531_SaveCashAccountCompletedEventHandler F1531_SaveCashAccountCompleted;
        
        /// <remarks/>
        public event F1532_GetInstitutionContactDetailCompletedEventHandler F1532_GetInstitutionContactDetailCompleted;
        
        /// <remarks/>
        public event F1532_SaveInstitutionContactCompletedEventHandler F1532_SaveInstitutionContactCompleted;
        
        /// <remarks/>
        public event F1030_ListDistrictDefinitionTypeCompletedEventHandler F1030_ListDistrictDefinitionTypeCompleted;
        
        /// <remarks/>
        public event F1030_GetDistrictDefinitionDetailsCompletedEventHandler F1030_GetDistrictDefinitionDetailsCompleted;
        
        /// <remarks/>
        public event F1030_DeleteDistrictDefinitionCompletedEventHandler F1030_DeleteDistrictDefinitionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1030_DeleteDistrictDefinitionRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F1030_DeleteDistrictDefinitionRate(int specialDistrictRateItemID) {
            this.Invoke("F1030_DeleteDistrictDefinitionRate", new object[] {
                        specialDistrictRateItemID});
        }
        
        /// <remarks/>
        public void F1030_DeleteDistrictDefinitionRateAsync(int specialDistrictRateItemID) {
            this.F1030_DeleteDistrictDefinitionRateAsync(specialDistrictRateItemID, null);
        }
        
        /// <remarks/>
        public void F1030_DeleteDistrictDefinitionRateAsync(int specialDistrictRateItemID, object userState) {
            if ((this.F1030_DeleteDistrictDefinitionRateOperationCompleted == null)) {
                this.F1030_DeleteDistrictDefinitionRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1030_DeleteDistrictDefinitionRateOperationCompleted);
            }
            this.InvokeAsync("F1030_DeleteDistrictDefinitionRate", new object[] {
                        specialDistrictRateItemID}, this.F1030_DeleteDistrictDefinitionRateOperationCompleted, userState);
        }
        
        private void OnF1030_DeleteDistrictDefinitionRateOperationCompleted(object arg) {
            if ((this.F1030_DeleteDistrictDefinitionRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1030_DeleteDistrictDefinitionRateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1030_SaveDistrictDefinition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1030_SaveDistrictDefinition(int districtNo, string districtItem, string rateItem, string distributionItem, bool flagOverride) {
            object[] results = this.Invoke("F1030_SaveDistrictDefinition", new object[] {
                        districtNo,
                        districtItem,
                        rateItem,
                        distributionItem,
                        flagOverride});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1030_SaveDistrictDefinitionAsync(int districtNo, string districtItem, string rateItem, string distributionItem, bool flagOverride) {
            this.F1030_SaveDistrictDefinitionAsync(districtNo, districtItem, rateItem, distributionItem, flagOverride, null);
        }
        
        /// <remarks/>
        public void F1030_SaveDistrictDefinitionAsync(int districtNo, string districtItem, string rateItem, string distributionItem, bool flagOverride, object userState) {
            if ((this.F1030_SaveDistrictDefinitionOperationCompleted == null)) {
                this.F1030_SaveDistrictDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1030_SaveDistrictDefinitionOperationCompleted);
            }
            this.InvokeAsync("F1030_SaveDistrictDefinition", new object[] {
                        districtNo,
                        districtItem,
                        rateItem,
                        distributionItem,
                        flagOverride}, this.F1030_SaveDistrictDefinitionOperationCompleted, userState);
        }
        
        private void OnF1030_SaveDistrictDefinitionOperationCompleted(object arg) {
            if ((this.F1030_SaveDistrictDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1030_SaveDistrictDefinitionCompleted(this, new F1030_SaveDistrictDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1033_ListPostTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1033_ListPostTypes([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> form) {
            object[] results = this.Invoke("F1033_ListPostTypes", new object[] {
                        form});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1033_ListPostTypesAsync(System.Nullable<int> form) {
            this.F1033_ListPostTypesAsync(form, null);
        }
        
        /// <remarks/>
        public void F1033_ListPostTypesAsync(System.Nullable<int> form, object userState) {
            if ((this.F1033_ListPostTypesOperationCompleted == null)) {
                this.F1033_ListPostTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1033_ListPostTypesOperationCompleted);
            }
            this.InvokeAsync("F1033_ListPostTypes", new object[] {
                        form}, this.F1033_ListPostTypesOperationCompleted, userState);
        }
        
        private void OnF1033_ListPostTypesOperationCompleted(object arg) {
            if ((this.F1033_ListPostTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1033_ListPostTypesCompleted(this, new F1033_ListPostTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1033_ListSpecialDistricts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1033_ListSpecialDistricts([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> district, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> rollYear, string description, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> postTypeID) {
            object[] results = this.Invoke("F1033_ListSpecialDistricts", new object[] {
                        district,
                        rollYear,
                        description,
                        postTypeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1033_ListSpecialDistrictsAsync(System.Nullable<int> district, System.Nullable<int> rollYear, string description, System.Nullable<int> postTypeID) {
            this.F1033_ListSpecialDistrictsAsync(district, rollYear, description, postTypeID, null);
        }
        
        /// <remarks/>
        public void F1033_ListSpecialDistrictsAsync(System.Nullable<int> district, System.Nullable<int> rollYear, string description, System.Nullable<int> postTypeID, object userState) {
            if ((this.F1033_ListSpecialDistrictsOperationCompleted == null)) {
                this.F1033_ListSpecialDistrictsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1033_ListSpecialDistrictsOperationCompleted);
            }
            this.InvokeAsync("F1033_ListSpecialDistricts", new object[] {
                        district,
                        rollYear,
                        description,
                        postTypeID}, this.F1033_ListSpecialDistrictsOperationCompleted, userState);
        }
        
        private void OnF1033_ListSpecialDistrictsOperationCompleted(object arg) {
            if ((this.F1033_ListSpecialDistrictsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1033_ListSpecialDistrictsCompleted(this, new F1033_ListSpecialDistrictsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1500_GetDescription", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1500_GetDescription(string keyID, string elementName) {
            object[] results = this.Invoke("F1500_GetDescription", new object[] {
                        keyID,
                        elementName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1500_GetDescriptionAsync(string keyID, string elementName) {
            this.F1500_GetDescriptionAsync(keyID, elementName, null);
        }
        
        /// <remarks/>
        public void F1500_GetDescriptionAsync(string keyID, string elementName, object userState) {
            if ((this.F1500_GetDescriptionOperationCompleted == null)) {
                this.F1500_GetDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1500_GetDescriptionOperationCompleted);
            }
            this.InvokeAsync("F1500_GetDescription", new object[] {
                        keyID,
                        elementName}, this.F1500_GetDescriptionOperationCompleted, userState);
        }
        
        private void OnF1500_GetDescriptionOperationCompleted(object arg) {
            if ((this.F1500_GetDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1500_GetDescriptionCompleted(this, new F1500_GetDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1500_GetSubFundItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1500_GetSubFundItems(string subFund, short rollYear) {
            object[] results = this.Invoke("F1500_GetSubFundItems", new object[] {
                        subFund,
                        rollYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1500_GetSubFundItemsAsync(string subFund, short rollYear) {
            this.F1500_GetSubFundItemsAsync(subFund, rollYear, null);
        }
        
        /// <remarks/>
        public void F1500_GetSubFundItemsAsync(string subFund, short rollYear, object userState) {
            if ((this.F1500_GetSubFundItemsOperationCompleted == null)) {
                this.F1500_GetSubFundItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1500_GetSubFundItemsOperationCompleted);
            }
            this.InvokeAsync("F1500_GetSubFundItems", new object[] {
                        subFund,
                        rollYear}, this.F1500_GetSubFundItemsOperationCompleted, userState);
        }
        
        private void OnF1500_GetSubFundItemsOperationCompleted(object arg) {
            if ((this.F1500_GetSubFundItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1500_GetSubFundItemsCompleted(this, new F1500_GetSubFundItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1500_GetFunctionItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1500_GetFunctionItems(string function) {
            object[] results = this.Invoke("F1500_GetFunctionItems", new object[] {
                        function});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1500_GetFunctionItemsAsync(string function) {
            this.F1500_GetFunctionItemsAsync(function, null);
        }
        
        /// <remarks/>
        public void F1500_GetFunctionItemsAsync(string function, object userState) {
            if ((this.F1500_GetFunctionItemsOperationCompleted == null)) {
                this.F1500_GetFunctionItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1500_GetFunctionItemsOperationCompleted);
            }
            this.InvokeAsync("F1500_GetFunctionItems", new object[] {
                        function}, this.F1500_GetFunctionItemsOperationCompleted, userState);
        }
        
        private void OnF1500_GetFunctionItemsOperationCompleted(object arg) {
            if ((this.F1500_GetFunctionItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1500_GetFunctionItemsCompleted(this, new F1500_GetFunctionItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1500_ListAccountDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1500_ListAccountDetails(int accountID) {
            object[] results = this.Invoke("F1500_ListAccountDetails", new object[] {
                        accountID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1500_ListAccountDetailsAsync(int accountID) {
            this.F1500_ListAccountDetailsAsync(accountID, null);
        }
        
        /// <remarks/>
        public void F1500_ListAccountDetailsAsync(int accountID, object userState) {
            if ((this.F1500_ListAccountDetailsOperationCompleted == null)) {
                this.F1500_ListAccountDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1500_ListAccountDetailsOperationCompleted);
            }
            this.InvokeAsync("F1500_ListAccountDetails", new object[] {
                        accountID}, this.F1500_ListAccountDetailsOperationCompleted, userState);
        }
        
        private void OnF1500_ListAccountDetailsOperationCompleted(object arg) {
            if ((this.F1500_ListAccountDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1500_ListAccountDetailsCompleted(this, new F1500_ListAccountDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1500_CreateOrEditAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1500_CreateOrEditAccount(int accountID, string acctEmelemts) {
            object[] results = this.Invoke("F1500_CreateOrEditAccount", new object[] {
                        accountID,
                        acctEmelemts});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1500_CreateOrEditAccountAsync(int accountID, string acctEmelemts) {
            this.F1500_CreateOrEditAccountAsync(accountID, acctEmelemts, null);
        }
        
        /// <remarks/>
        public void F1500_CreateOrEditAccountAsync(int accountID, string acctEmelemts, object userState) {
            if ((this.F1500_CreateOrEditAccountOperationCompleted == null)) {
                this.F1500_CreateOrEditAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1500_CreateOrEditAccountOperationCompleted);
            }
            this.InvokeAsync("F1500_CreateOrEditAccount", new object[] {
                        accountID,
                        acctEmelemts}, this.F1500_CreateOrEditAccountOperationCompleted, userState);
        }
        
        private void OnF1500_CreateOrEditAccountOperationCompleted(object arg) {
            if ((this.F1500_CreateOrEditAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1500_CreateOrEditAccountCompleted(this, new F1500_CreateOrEditAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1500_ListRegisterType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1500_ListRegisterType() {
            object[] results = this.Invoke("F1500_ListRegisterType", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1500_ListRegisterTypeAsync() {
            this.F1500_ListRegisterTypeAsync(null);
        }
        
        /// <remarks/>
        public void F1500_ListRegisterTypeAsync(object userState) {
            if ((this.F1500_ListRegisterTypeOperationCompleted == null)) {
                this.F1500_ListRegisterTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1500_ListRegisterTypeOperationCompleted);
            }
            this.InvokeAsync("F1500_ListRegisterType", new object[0], this.F1500_ListRegisterTypeOperationCompleted, userState);
        }
        
        private void OnF1500_ListRegisterTypeOperationCompleted(object arg) {
            if ((this.F1500_ListRegisterTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1500_ListRegisterTypeCompleted(this, new F1500_ListRegisterTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1500_GetConfigurationValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1500_GetConfigurationValue(string cfgName) {
            object[] results = this.Invoke("F1500_GetConfigurationValue", new object[] {
                        cfgName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1500_GetConfigurationValueAsync(string cfgName) {
            this.F1500_GetConfigurationValueAsync(cfgName, null);
        }
        
        /// <remarks/>
        public void F1500_GetConfigurationValueAsync(string cfgName, object userState) {
            if ((this.F1500_GetConfigurationValueOperationCompleted == null)) {
                this.F1500_GetConfigurationValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1500_GetConfigurationValueOperationCompleted);
            }
            this.InvokeAsync("F1500_GetConfigurationValue", new object[] {
                        cfgName}, this.F1500_GetConfigurationValueOperationCompleted, userState);
        }
        
        private void OnF1500_GetConfigurationValueOperationCompleted(object arg) {
            if ((this.F1500_GetConfigurationValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1500_GetConfigurationValueCompleted(this, new F1500_GetConfigurationValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1503_GetGenericElementMgmt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1503_GetGenericElementMgmt(string keyValue, string description, string formName) {
            object[] results = this.Invoke("F1503_GetGenericElementMgmt", new object[] {
                        keyValue,
                        description,
                        formName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1503_GetGenericElementMgmtAsync(string keyValue, string description, string formName) {
            this.F1503_GetGenericElementMgmtAsync(keyValue, description, formName, null);
        }
        
        /// <remarks/>
        public void F1503_GetGenericElementMgmtAsync(string keyValue, string description, string formName, object userState) {
            if ((this.F1503_GetGenericElementMgmtOperationCompleted == null)) {
                this.F1503_GetGenericElementMgmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1503_GetGenericElementMgmtOperationCompleted);
            }
            this.InvokeAsync("F1503_GetGenericElementMgmt", new object[] {
                        keyValue,
                        description,
                        formName}, this.F1503_GetGenericElementMgmtOperationCompleted, userState);
        }
        
        private void OnF1503_GetGenericElementMgmtOperationCompleted(object arg) {
            if ((this.F1503_GetGenericElementMgmtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1503_GetGenericElementMgmtCompleted(this, new F1503_GetGenericElementMgmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1503_SaveGenericElementMgmt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1503_SaveGenericElementMgmt(string functionElemnts, string formName) {
            object[] results = this.Invoke("F1503_SaveGenericElementMgmt", new object[] {
                        functionElemnts,
                        formName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1503_SaveGenericElementMgmtAsync(string functionElemnts, string formName) {
            this.F1503_SaveGenericElementMgmtAsync(functionElemnts, formName, null);
        }
        
        /// <remarks/>
        public void F1503_SaveGenericElementMgmtAsync(string functionElemnts, string formName, object userState) {
            if ((this.F1503_SaveGenericElementMgmtOperationCompleted == null)) {
                this.F1503_SaveGenericElementMgmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1503_SaveGenericElementMgmtOperationCompleted);
            }
            this.InvokeAsync("F1503_SaveGenericElementMgmt", new object[] {
                        functionElemnts,
                        formName}, this.F1503_SaveGenericElementMgmtOperationCompleted, userState);
        }
        
        private void OnF1503_SaveGenericElementMgmtOperationCompleted(object arg) {
            if ((this.F1503_SaveGenericElementMgmtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1503_SaveGenericElementMgmtCompleted(this, new F1503_SaveGenericElementMgmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1503_DeleteGenericElementMgmt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F1503_DeleteGenericElementMgmt(string elementId, string formName) {
            this.Invoke("F1503_DeleteGenericElementMgmt", new object[] {
                        elementId,
                        formName});
        }
        
        /// <remarks/>
        public void F1503_DeleteGenericElementMgmtAsync(string elementId, string formName) {
            this.F1503_DeleteGenericElementMgmtAsync(elementId, formName, null);
        }
        
        /// <remarks/>
        public void F1503_DeleteGenericElementMgmtAsync(string elementId, string formName, object userState) {
            if ((this.F1503_DeleteGenericElementMgmtOperationCompleted == null)) {
                this.F1503_DeleteGenericElementMgmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1503_DeleteGenericElementMgmtOperationCompleted);
            }
            this.InvokeAsync("F1503_DeleteGenericElementMgmt", new object[] {
                        elementId,
                        formName}, this.F1503_DeleteGenericElementMgmtOperationCompleted, userState);
        }
        
        private void OnF1503_DeleteGenericElementMgmtOperationCompleted(object arg) {
            if ((this.F1503_DeleteGenericElementMgmtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1503_DeleteGenericElementMgmtCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1515_GetSubFundSelection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1515_GetSubFundSelection(string subFund, string description, int rollYear, int iscash) {
            object[] results = this.Invoke("F1515_GetSubFundSelection", new object[] {
                        subFund,
                        description,
                        rollYear,
                        iscash});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1515_GetSubFundSelectionAsync(string subFund, string description, int rollYear, int iscash) {
            this.F1515_GetSubFundSelectionAsync(subFund, description, rollYear, iscash, null);
        }
        
        /// <remarks/>
        public void F1515_GetSubFundSelectionAsync(string subFund, string description, int rollYear, int iscash, object userState) {
            if ((this.F1515_GetSubFundSelectionOperationCompleted == null)) {
                this.F1515_GetSubFundSelectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1515_GetSubFundSelectionOperationCompleted);
            }
            this.InvokeAsync("F1515_GetSubFundSelection", new object[] {
                        subFund,
                        description,
                        rollYear,
                        iscash}, this.F1515_GetSubFundSelectionOperationCompleted, userState);
        }
        
        private void OnF1515_GetSubFundSelectionOperationCompleted(object arg) {
            if ((this.F1515_GetSubFundSelectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1515_GetSubFundSelectionCompleted(this, new F1515_GetSubFundSelectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1513_GetFundSelection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1513_GetFundSelection(string fund, string description) {
            object[] results = this.Invoke("F1513_GetFundSelection", new object[] {
                        fund,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1513_GetFundSelectionAsync(string fund, string description) {
            this.F1513_GetFundSelectionAsync(fund, description, null);
        }
        
        /// <remarks/>
        public void F1513_GetFundSelectionAsync(string fund, string description, object userState) {
            if ((this.F1513_GetFundSelectionOperationCompleted == null)) {
                this.F1513_GetFundSelectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1513_GetFundSelectionOperationCompleted);
            }
            this.InvokeAsync("F1513_GetFundSelection", new object[] {
                        fund,
                        description}, this.F1513_GetFundSelectionOperationCompleted, userState);
        }
        
        private void OnF1513_GetFundSelectionOperationCompleted(object arg) {
            if ((this.F1513_GetFundSelectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1513_GetFundSelectionCompleted(this, new F1513_GetFundSelectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1031_ListDistrictAssessmentDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1031_ListDistrictAssessmentDetails(int statementId) {
            object[] results = this.Invoke("F1031_ListDistrictAssessmentDetails", new object[] {
                        statementId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1031_ListDistrictAssessmentDetailsAsync(int statementId) {
            this.F1031_ListDistrictAssessmentDetailsAsync(statementId, null);
        }
        
        /// <remarks/>
        public void F1031_ListDistrictAssessmentDetailsAsync(int statementId, object userState) {
            if ((this.F1031_ListDistrictAssessmentDetailsOperationCompleted == null)) {
                this.F1031_ListDistrictAssessmentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1031_ListDistrictAssessmentDetailsOperationCompleted);
            }
            this.InvokeAsync("F1031_ListDistrictAssessmentDetails", new object[] {
                        statementId}, this.F1031_ListDistrictAssessmentDetailsOperationCompleted, userState);
        }
        
        private void OnF1031_ListDistrictAssessmentDetailsOperationCompleted(object arg) {
            if ((this.F1031_ListDistrictAssessmentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1031_ListDistrictAssessmentDetailsCompleted(this, new F1031_ListDistrictAssessmentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1031_ListDistrictAssessmentIDs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1031_ListDistrictAssessmentIDs() {
            object[] results = this.Invoke("F1031_ListDistrictAssessmentIDs", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1031_ListDistrictAssessmentIDsAsync() {
            this.F1031_ListDistrictAssessmentIDsAsync(null);
        }
        
        /// <remarks/>
        public void F1031_ListDistrictAssessmentIDsAsync(object userState) {
            if ((this.F1031_ListDistrictAssessmentIDsOperationCompleted == null)) {
                this.F1031_ListDistrictAssessmentIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1031_ListDistrictAssessmentIDsOperationCompleted);
            }
            this.InvokeAsync("F1031_ListDistrictAssessmentIDs", new object[0], this.F1031_ListDistrictAssessmentIDsOperationCompleted, userState);
        }
        
        private void OnF1031_ListDistrictAssessmentIDsOperationCompleted(object arg) {
            if ((this.F1031_ListDistrictAssessmentIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1031_ListDistrictAssessmentIDsCompleted(this, new F1031_ListDistrictAssessmentIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1031_GetDistrictAssessmentParcelID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1031_GetDistrictAssessmentParcelID(string parcelNumber, int parcelId) {
            object[] results = this.Invoke("F1031_GetDistrictAssessmentParcelID", new object[] {
                        parcelNumber,
                        parcelId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1031_GetDistrictAssessmentParcelIDAsync(string parcelNumber, int parcelId) {
            this.F1031_GetDistrictAssessmentParcelIDAsync(parcelNumber, parcelId, null);
        }
        
        /// <remarks/>
        public void F1031_GetDistrictAssessmentParcelIDAsync(string parcelNumber, int parcelId, object userState) {
            if ((this.F1031_GetDistrictAssessmentParcelIDOperationCompleted == null)) {
                this.F1031_GetDistrictAssessmentParcelIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1031_GetDistrictAssessmentParcelIDOperationCompleted);
            }
            this.InvokeAsync("F1031_GetDistrictAssessmentParcelID", new object[] {
                        parcelNumber,
                        parcelId}, this.F1031_GetDistrictAssessmentParcelIDOperationCompleted, userState);
        }
        
        private void OnF1031_GetDistrictAssessmentParcelIDOperationCompleted(object arg) {
            if ((this.F1031_GetDistrictAssessmentParcelIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1031_GetDistrictAssessmentParcelIDCompleted(this, new F1031_GetDistrictAssessmentParcelIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1031_ListDistrictAssessment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1031_ListDistrictAssessment(int districtId) {
            object[] results = this.Invoke("F1031_ListDistrictAssessment", new object[] {
                        districtId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1031_ListDistrictAssessmentAsync(int districtId) {
            this.F1031_ListDistrictAssessmentAsync(districtId, null);
        }
        
        /// <remarks/>
        public void F1031_ListDistrictAssessmentAsync(int districtId, object userState) {
            if ((this.F1031_ListDistrictAssessmentOperationCompleted == null)) {
                this.F1031_ListDistrictAssessmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1031_ListDistrictAssessmentOperationCompleted);
            }
            this.InvokeAsync("F1031_ListDistrictAssessment", new object[] {
                        districtId}, this.F1031_ListDistrictAssessmentOperationCompleted, userState);
        }
        
        private void OnF1031_ListDistrictAssessmentOperationCompleted(object arg) {
            if ((this.F1031_ListDistrictAssessmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1031_ListDistrictAssessmentCompleted(this, new F1031_ListDistrictAssessmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1031_SaveDistrictAssessmentDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1031_SaveDistrictAssessmentDetails(string districtProperty, string districtRates, bool overrideStatus, bool ownerRide) {
            object[] results = this.Invoke("F1031_SaveDistrictAssessmentDetails", new object[] {
                        districtProperty,
                        districtRates,
                        overrideStatus,
                        ownerRide});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1031_SaveDistrictAssessmentDetailsAsync(string districtProperty, string districtRates, bool overrideStatus, bool ownerRide) {
            this.F1031_SaveDistrictAssessmentDetailsAsync(districtProperty, districtRates, overrideStatus, ownerRide, null);
        }
        
        /// <remarks/>
        public void F1031_SaveDistrictAssessmentDetailsAsync(string districtProperty, string districtRates, bool overrideStatus, bool ownerRide, object userState) {
            if ((this.F1031_SaveDistrictAssessmentDetailsOperationCompleted == null)) {
                this.F1031_SaveDistrictAssessmentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1031_SaveDistrictAssessmentDetailsOperationCompleted);
            }
            this.InvokeAsync("F1031_SaveDistrictAssessmentDetails", new object[] {
                        districtProperty,
                        districtRates,
                        overrideStatus,
                        ownerRide}, this.F1031_SaveDistrictAssessmentDetailsOperationCompleted, userState);
        }
        
        private void OnF1031_SaveDistrictAssessmentDetailsOperationCompleted(object arg) {
            if ((this.F1031_SaveDistrictAssessmentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1031_SaveDistrictAssessmentDetailsCompleted(this, new F1031_SaveDistrictAssessmentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1031_DeleteDistrictAssessment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1031_DeleteDistrictAssessment(int statementId) {
            object[] results = this.Invoke("F1031_DeleteDistrictAssessment", new object[] {
                        statementId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1031_DeleteDistrictAssessmentAsync(int statementId) {
            this.F1031_DeleteDistrictAssessmentAsync(statementId, null);
        }
        
        /// <remarks/>
        public void F1031_DeleteDistrictAssessmentAsync(int statementId, object userState) {
            if ((this.F1031_DeleteDistrictAssessmentOperationCompleted == null)) {
                this.F1031_DeleteDistrictAssessmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1031_DeleteDistrictAssessmentOperationCompleted);
            }
            this.InvokeAsync("F1031_DeleteDistrictAssessment", new object[] {
                        statementId}, this.F1031_DeleteDistrictAssessmentOperationCompleted, userState);
        }
        
        private void OnF1031_DeleteDistrictAssessmentOperationCompleted(object arg) {
            if ((this.F1031_DeleteDistrictAssessmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1031_DeleteDistrictAssessmentCompleted(this, new F1031_DeleteDistrictAssessmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9503_GetSubFundManagementDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F9503_GetSubFundManagementDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> subFundId) {
            object[] results = this.Invoke("F9503_GetSubFundManagementDetails", new object[] {
                        subFundId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F9503_GetSubFundManagementDetailsAsync(System.Nullable<int> subFundId) {
            this.F9503_GetSubFundManagementDetailsAsync(subFundId, null);
        }
        
        /// <remarks/>
        public void F9503_GetSubFundManagementDetailsAsync(System.Nullable<int> subFundId, object userState) {
            if ((this.F9503_GetSubFundManagementDetailsOperationCompleted == null)) {
                this.F9503_GetSubFundManagementDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9503_GetSubFundManagementDetailsOperationCompleted);
            }
            this.InvokeAsync("F9503_GetSubFundManagementDetails", new object[] {
                        subFundId}, this.F9503_GetSubFundManagementDetailsOperationCompleted, userState);
        }
        
        private void OnF9503_GetSubFundManagementDetailsOperationCompleted(object arg) {
            if ((this.F9503_GetSubFundManagementDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9503_GetSubFundManagementDetailsCompleted(this, new F9503_GetSubFundManagementDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9503_GetSubFundItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F9503_GetSubFundItems(string subFund, short rollYear) {
            object[] results = this.Invoke("F9503_GetSubFundItems", new object[] {
                        subFund,
                        rollYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F9503_GetSubFundItemsAsync(string subFund, short rollYear) {
            this.F9503_GetSubFundItemsAsync(subFund, rollYear, null);
        }
        
        /// <remarks/>
        public void F9503_GetSubFundItemsAsync(string subFund, short rollYear, object userState) {
            if ((this.F9503_GetSubFundItemsOperationCompleted == null)) {
                this.F9503_GetSubFundItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9503_GetSubFundItemsOperationCompleted);
            }
            this.InvokeAsync("F9503_GetSubFundItems", new object[] {
                        subFund,
                        rollYear}, this.F9503_GetSubFundItemsOperationCompleted, userState);
        }
        
        private void OnF9503_GetSubFundItemsOperationCompleted(object arg) {
            if ((this.F9503_GetSubFundItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9503_GetSubFundItemsCompleted(this, new F9503_GetSubFundItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15005_CheckSubFund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F15005_CheckSubFund([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> subFundId, string subFund, int rollYear) {
            object[] results = this.Invoke("F15005_CheckSubFund", new object[] {
                        subFundId,
                        subFund,
                        rollYear});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F15005_CheckSubFundAsync(System.Nullable<int> subFundId, string subFund, int rollYear) {
            this.F15005_CheckSubFundAsync(subFundId, subFund, rollYear, null);
        }
        
        /// <remarks/>
        public void F15005_CheckSubFundAsync(System.Nullable<int> subFundId, string subFund, int rollYear, object userState) {
            if ((this.F15005_CheckSubFundOperationCompleted == null)) {
                this.F15005_CheckSubFundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15005_CheckSubFundOperationCompleted);
            }
            this.InvokeAsync("F15005_CheckSubFund", new object[] {
                        subFundId,
                        subFund,
                        rollYear}, this.F15005_CheckSubFundOperationCompleted, userState);
        }
        
        private void OnF15005_CheckSubFundOperationCompleted(object arg) {
            if ((this.F15005_CheckSubFundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15005_CheckSubFundCompleted(this, new F15005_CheckSubFundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9503_CreateOrEditSubFund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F9503_CreateOrEditSubFund([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> subFundId, string subFundElments) {
            object[] results = this.Invoke("F9503_CreateOrEditSubFund", new object[] {
                        subFundId,
                        subFundElments});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F9503_CreateOrEditSubFundAsync(System.Nullable<int> subFundId, string subFundElments) {
            this.F9503_CreateOrEditSubFundAsync(subFundId, subFundElments, null);
        }
        
        /// <remarks/>
        public void F9503_CreateOrEditSubFundAsync(System.Nullable<int> subFundId, string subFundElments, object userState) {
            if ((this.F9503_CreateOrEditSubFundOperationCompleted == null)) {
                this.F9503_CreateOrEditSubFundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9503_CreateOrEditSubFundOperationCompleted);
            }
            this.InvokeAsync("F9503_CreateOrEditSubFund", new object[] {
                        subFundId,
                        subFundElments}, this.F9503_CreateOrEditSubFundOperationCompleted, userState);
        }
        
        private void OnF9503_CreateOrEditSubFundOperationCompleted(object arg) {
            if ((this.F9503_CreateOrEditSubFundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9503_CreateOrEditSubFundCompleted(this, new F9503_CreateOrEditSubFundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1501_ListRollYear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1501_ListRollYear() {
            object[] results = this.Invoke("F1501_ListRollYear", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1501_ListRollYearAsync() {
            this.F1501_ListRollYearAsync(null);
        }
        
        /// <remarks/>
        public void F1501_ListRollYearAsync(object userState) {
            if ((this.F1501_ListRollYearOperationCompleted == null)) {
                this.F1501_ListRollYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1501_ListRollYearOperationCompleted);
            }
            this.InvokeAsync("F1501_ListRollYear", new object[0], this.F1501_ListRollYearOperationCompleted, userState);
        }
        
        private void OnF1501_ListRollYearOperationCompleted(object arg) {
            if ((this.F1501_ListRollYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1501_ListRollYearCompleted(this, new F1501_ListRollYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1501_ListGLConfigDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1501_ListGLConfigDetails(int rollYear) {
            object[] results = this.Invoke("F1501_ListGLConfigDetails", new object[] {
                        rollYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1501_ListGLConfigDetailsAsync(int rollYear) {
            this.F1501_ListGLConfigDetailsAsync(rollYear, null);
        }
        
        /// <remarks/>
        public void F1501_ListGLConfigDetailsAsync(int rollYear, object userState) {
            if ((this.F1501_ListGLConfigDetailsOperationCompleted == null)) {
                this.F1501_ListGLConfigDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1501_ListGLConfigDetailsOperationCompleted);
            }
            this.InvokeAsync("F1501_ListGLConfigDetails", new object[] {
                        rollYear}, this.F1501_ListGLConfigDetailsOperationCompleted, userState);
        }
        
        private void OnF1501_ListGLConfigDetailsOperationCompleted(object arg) {
            if ((this.F1501_ListGLConfigDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1501_ListGLConfigDetailsCompleted(this, new F1501_ListGLConfigDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1501_GetGLConfigDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1501_GetGLConfigDetails(int configID) {
            object[] results = this.Invoke("F1501_GetGLConfigDetails", new object[] {
                        configID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1501_GetGLConfigDetailsAsync(int configID) {
            this.F1501_GetGLConfigDetailsAsync(configID, null);
        }
        
        /// <remarks/>
        public void F1501_GetGLConfigDetailsAsync(int configID, object userState) {
            if ((this.F1501_GetGLConfigDetailsOperationCompleted == null)) {
                this.F1501_GetGLConfigDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1501_GetGLConfigDetailsOperationCompleted);
            }
            this.InvokeAsync("F1501_GetGLConfigDetails", new object[] {
                        configID}, this.F1501_GetGLConfigDetailsOperationCompleted, userState);
        }
        
        private void OnF1501_GetGLConfigDetailsOperationCompleted(object arg) {
            if ((this.F1501_GetGLConfigDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1501_GetGLConfigDetailsCompleted(this, new F1501_GetGLConfigDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1501_CreateOrEditGLConfigDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1501_CreateOrEditGLConfigDetails(int configID, string configElements) {
            object[] results = this.Invoke("F1501_CreateOrEditGLConfigDetails", new object[] {
                        configID,
                        configElements});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1501_CreateOrEditGLConfigDetailsAsync(int configID, string configElements) {
            this.F1501_CreateOrEditGLConfigDetailsAsync(configID, configElements, null);
        }
        
        /// <remarks/>
        public void F1501_CreateOrEditGLConfigDetailsAsync(int configID, string configElements, object userState) {
            if ((this.F1501_CreateOrEditGLConfigDetailsOperationCompleted == null)) {
                this.F1501_CreateOrEditGLConfigDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1501_CreateOrEditGLConfigDetailsOperationCompleted);
            }
            this.InvokeAsync("F1501_CreateOrEditGLConfigDetails", new object[] {
                        configID,
                        configElements}, this.F1501_CreateOrEditGLConfigDetailsOperationCompleted, userState);
        }
        
        private void OnF1501_CreateOrEditGLConfigDetailsOperationCompleted(object arg) {
            if ((this.F1501_CreateOrEditGLConfigDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1501_CreateOrEditGLConfigDetailsCompleted(this, new F1501_CreateOrEditGLConfigDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1410_GetOwnerReceipting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1410_GetOwnerReceipting(string interestDate, int ownerId) {
            object[] results = this.Invoke("F1410_GetOwnerReceipting", new object[] {
                        interestDate,
                        ownerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1410_GetOwnerReceiptingAsync(string interestDate, int ownerId) {
            this.F1410_GetOwnerReceiptingAsync(interestDate, ownerId, null);
        }
        
        /// <remarks/>
        public void F1410_GetOwnerReceiptingAsync(string interestDate, int ownerId, object userState) {
            if ((this.F1410_GetOwnerReceiptingOperationCompleted == null)) {
                this.F1410_GetOwnerReceiptingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1410_GetOwnerReceiptingOperationCompleted);
            }
            this.InvokeAsync("F1410_GetOwnerReceipting", new object[] {
                        interestDate,
                        ownerId}, this.F1410_GetOwnerReceiptingOperationCompleted, userState);
        }
        
        private void OnF1410_GetOwnerReceiptingOperationCompleted(object arg) {
            if ((this.F1410_GetOwnerReceiptingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1410_GetOwnerReceiptingCompleted(this, new F1410_GetOwnerReceiptingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1410_ListOwnerReceipting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1410_ListOwnerReceipting(string interestDate, string statementXml) {
            object[] results = this.Invoke("F1410_ListOwnerReceipting", new object[] {
                        interestDate,
                        statementXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1410_ListOwnerReceiptingAsync(string interestDate, string statementXml) {
            this.F1410_ListOwnerReceiptingAsync(interestDate, statementXml, null);
        }
        
        /// <remarks/>
        public void F1410_ListOwnerReceiptingAsync(string interestDate, string statementXml, object userState) {
            if ((this.F1410_ListOwnerReceiptingOperationCompleted == null)) {
                this.F1410_ListOwnerReceiptingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1410_ListOwnerReceiptingOperationCompleted);
            }
            this.InvokeAsync("F1410_ListOwnerReceipting", new object[] {
                        interestDate,
                        statementXml}, this.F1410_ListOwnerReceiptingOperationCompleted, userState);
        }
        
        private void OnF1410_ListOwnerReceiptingOperationCompleted(object arg) {
            if ((this.F1410_ListOwnerReceiptingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1410_ListOwnerReceiptingCompleted(this, new F1410_ListOwnerReceiptingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1410_DeleteOwnerReceipting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1410_DeleteOwnerReceipting(int ownerId, string ownerXml, string statementXml) {
            object[] results = this.Invoke("F1410_DeleteOwnerReceipting", new object[] {
                        ownerId,
                        ownerXml,
                        statementXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1410_DeleteOwnerReceiptingAsync(int ownerId, string ownerXml, string statementXml) {
            this.F1410_DeleteOwnerReceiptingAsync(ownerId, ownerXml, statementXml, null);
        }
        
        /// <remarks/>
        public void F1410_DeleteOwnerReceiptingAsync(int ownerId, string ownerXml, string statementXml, object userState) {
            if ((this.F1410_DeleteOwnerReceiptingOperationCompleted == null)) {
                this.F1410_DeleteOwnerReceiptingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1410_DeleteOwnerReceiptingOperationCompleted);
            }
            this.InvokeAsync("F1410_DeleteOwnerReceipting", new object[] {
                        ownerId,
                        ownerXml,
                        statementXml}, this.F1410_DeleteOwnerReceiptingOperationCompleted, userState);
        }
        
        private void OnF1410_DeleteOwnerReceiptingOperationCompleted(object arg) {
            if ((this.F1410_DeleteOwnerReceiptingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1410_DeleteOwnerReceiptingCompleted(this, new F1410_DeleteOwnerReceiptingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1410_SaveOwnerReceipting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1410_SaveOwnerReceipting(int userId, string receiptDate, string interestDate, int ppaymentId, int paymentOption, string statementXml) {
            object[] results = this.Invoke("F1410_SaveOwnerReceipting", new object[] {
                        userId,
                        receiptDate,
                        interestDate,
                        ppaymentId,
                        paymentOption,
                        statementXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1410_SaveOwnerReceiptingAsync(int userId, string receiptDate, string interestDate, int ppaymentId, int paymentOption, string statementXml) {
            this.F1410_SaveOwnerReceiptingAsync(userId, receiptDate, interestDate, ppaymentId, paymentOption, statementXml, null);
        }
        
        /// <remarks/>
        public void F1410_SaveOwnerReceiptingAsync(int userId, string receiptDate, string interestDate, int ppaymentId, int paymentOption, string statementXml, object userState) {
            if ((this.F1410_SaveOwnerReceiptingOperationCompleted == null)) {
                this.F1410_SaveOwnerReceiptingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1410_SaveOwnerReceiptingOperationCompleted);
            }
            this.InvokeAsync("F1410_SaveOwnerReceipting", new object[] {
                        userId,
                        receiptDate,
                        interestDate,
                        ppaymentId,
                        paymentOption,
                        statementXml}, this.F1410_SaveOwnerReceiptingOperationCompleted, userState);
        }
        
        private void OnF1410_SaveOwnerReceiptingOperationCompleted(object arg) {
            if ((this.F1410_SaveOwnerReceiptingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1410_SaveOwnerReceiptingCompleted(this, new F1410_SaveOwnerReceiptingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8000_GetGDocBusiness", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8000_GetGDocBusiness() {
            object[] results = this.Invoke("F8000_GetGDocBusiness", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8000_GetGDocBusinessAsync() {
            this.F8000_GetGDocBusinessAsync(null);
        }
        
        /// <remarks/>
        public void F8000_GetGDocBusinessAsync(object userState) {
            if ((this.F8000_GetGDocBusinessOperationCompleted == null)) {
                this.F8000_GetGDocBusinessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8000_GetGDocBusinessOperationCompleted);
            }
            this.InvokeAsync("F8000_GetGDocBusiness", new object[0], this.F8000_GetGDocBusinessOperationCompleted, userState);
        }
        
        private void OnF8000_GetGDocBusinessOperationCompleted(object arg) {
            if ((this.F8000_GetGDocBusinessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8000_GetGDocBusinessCompleted(this, new F8000_GetGDocBusinessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8000_GetGDocDiameter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8000_GetGDocDiameter(int featureClassId) {
            object[] results = this.Invoke("F8000_GetGDocDiameter", new object[] {
                        featureClassId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8000_GetGDocDiameterAsync(int featureClassId) {
            this.F8000_GetGDocDiameterAsync(featureClassId, null);
        }
        
        /// <remarks/>
        public void F8000_GetGDocDiameterAsync(int featureClassId, object userState) {
            if ((this.F8000_GetGDocDiameterOperationCompleted == null)) {
                this.F8000_GetGDocDiameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8000_GetGDocDiameterOperationCompleted);
            }
            this.InvokeAsync("F8000_GetGDocDiameter", new object[] {
                        featureClassId}, this.F8000_GetGDocDiameterOperationCompleted, userState);
        }
        
        private void OnF8000_GetGDocDiameterOperationCompleted(object arg) {
            if ((this.F8000_GetGDocDiameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8000_GetGDocDiameterCompleted(this, new F8000_GetGDocDiameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8000_GetGDocPropertyReference", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8000_GetGDocPropertyReference(int featureClassId, string refField) {
            object[] results = this.Invoke("F8000_GetGDocPropertyReference", new object[] {
                        featureClassId,
                        refField});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8000_GetGDocPropertyReferenceAsync(int featureClassId, string refField) {
            this.F8000_GetGDocPropertyReferenceAsync(featureClassId, refField, null);
        }
        
        /// <remarks/>
        public void F8000_GetGDocPropertyReferenceAsync(int featureClassId, string refField, object userState) {
            if ((this.F8000_GetGDocPropertyReferenceOperationCompleted == null)) {
                this.F8000_GetGDocPropertyReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8000_GetGDocPropertyReferenceOperationCompleted);
            }
            this.InvokeAsync("F8000_GetGDocPropertyReference", new object[] {
                        featureClassId,
                        refField}, this.F8000_GetGDocPropertyReferenceOperationCompleted, userState);
        }
        
        private void OnF8000_GetGDocPropertyReferenceOperationCompleted(object arg) {
            if ((this.F8000_GetGDocPropertyReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8000_GetGDocPropertyReferenceCompleted(this, new F8000_GetGDocPropertyReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wListStreets", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wListStreets() {
            object[] results = this.Invoke("wListStreets", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wListStreetsAsync() {
            this.wListStreetsAsync(null);
        }
        
        /// <remarks/>
        public void wListStreetsAsync(object userState) {
            if ((this.wListStreetsOperationCompleted == null)) {
                this.wListStreetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwListStreetsOperationCompleted);
            }
            this.InvokeAsync("wListStreets", new object[0], this.wListStreetsOperationCompleted, userState);
        }
        
        private void OnwListStreetsOperationCompleted(object arg) {
            if ((this.wListStreetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wListStreetsCompleted(this, new wListStreetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8000_GetGDocUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8000_GetGDocUser() {
            object[] results = this.Invoke("F8000_GetGDocUser", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8000_GetGDocUserAsync() {
            this.F8000_GetGDocUserAsync(null);
        }
        
        /// <remarks/>
        public void F8000_GetGDocUserAsync(object userState) {
            if ((this.F8000_GetGDocUserOperationCompleted == null)) {
                this.F8000_GetGDocUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8000_GetGDocUserOperationCompleted);
            }
            this.InvokeAsync("F8000_GetGDocUser", new object[0], this.F8000_GetGDocUserOperationCompleted, userState);
        }
        
        private void OnF8000_GetGDocUserOperationCompleted(object arg) {
            if ((this.F8000_GetGDocUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8000_GetGDocUserCompleted(this, new F8000_GetGDocUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84121_GetSanitaryManholeProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F84121_GetSanitaryManholeProperties(int manholeId) {
            object[] results = this.Invoke("F84121_GetSanitaryManholeProperties", new object[] {
                        manholeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F84121_GetSanitaryManholePropertiesAsync(int manholeId) {
            this.F84121_GetSanitaryManholePropertiesAsync(manholeId, null);
        }
        
        /// <remarks/>
        public void F84121_GetSanitaryManholePropertiesAsync(int manholeId, object userState) {
            if ((this.F84121_GetSanitaryManholePropertiesOperationCompleted == null)) {
                this.F84121_GetSanitaryManholePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84121_GetSanitaryManholePropertiesOperationCompleted);
            }
            this.InvokeAsync("F84121_GetSanitaryManholeProperties", new object[] {
                        manholeId}, this.F84121_GetSanitaryManholePropertiesOperationCompleted, userState);
        }
        
        private void OnF84121_GetSanitaryManholePropertiesOperationCompleted(object arg) {
            if ((this.F84121_GetSanitaryManholePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84121_GetSanitaryManholePropertiesCompleted(this, new F84121_GetSanitaryManholePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84121_SaveSanitaryManholeProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F84121_SaveSanitaryManholeProperties(int manholeId, string sanitaryManholeProperties) {
            object[] results = this.Invoke("F84121_SaveSanitaryManholeProperties", new object[] {
                        manholeId,
                        sanitaryManholeProperties});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F84121_SaveSanitaryManholePropertiesAsync(int manholeId, string sanitaryManholeProperties) {
            this.F84121_SaveSanitaryManholePropertiesAsync(manholeId, sanitaryManholeProperties, null);
        }
        
        /// <remarks/>
        public void F84121_SaveSanitaryManholePropertiesAsync(int manholeId, string sanitaryManholeProperties, object userState) {
            if ((this.F84121_SaveSanitaryManholePropertiesOperationCompleted == null)) {
                this.F84121_SaveSanitaryManholePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84121_SaveSanitaryManholePropertiesOperationCompleted);
            }
            this.InvokeAsync("F84121_SaveSanitaryManholeProperties", new object[] {
                        manholeId,
                        sanitaryManholeProperties}, this.F84121_SaveSanitaryManholePropertiesOperationCompleted, userState);
        }
        
        private void OnF84121_SaveSanitaryManholePropertiesOperationCompleted(object arg) {
            if ((this.F84121_SaveSanitaryManholePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84121_SaveSanitaryManholePropertiesCompleted(this, new F84121_SaveSanitaryManholePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84121_DeleteSanitaryManholeProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F84121_DeleteSanitaryManholeProperties(int manholeId) {
            this.Invoke("F84121_DeleteSanitaryManholeProperties", new object[] {
                        manholeId});
        }
        
        /// <remarks/>
        public void F84121_DeleteSanitaryManholePropertiesAsync(int manholeId) {
            this.F84121_DeleteSanitaryManholePropertiesAsync(manholeId, null);
        }
        
        /// <remarks/>
        public void F84121_DeleteSanitaryManholePropertiesAsync(int manholeId, object userState) {
            if ((this.F84121_DeleteSanitaryManholePropertiesOperationCompleted == null)) {
                this.F84121_DeleteSanitaryManholePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84121_DeleteSanitaryManholePropertiesOperationCompleted);
            }
            this.InvokeAsync("F84121_DeleteSanitaryManholeProperties", new object[] {
                        manholeId}, this.F84121_DeleteSanitaryManholePropertiesOperationCompleted, userState);
        }
        
        private void OnF84121_DeleteSanitaryManholePropertiesOperationCompleted(object arg) {
            if ((this.F84121_DeleteSanitaryManholePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84121_DeleteSanitaryManholePropertiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84122_GetSanitaryManholeLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F84122_GetSanitaryManholeLocation(int keyId) {
            object[] results = this.Invoke("F84122_GetSanitaryManholeLocation", new object[] {
                        keyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F84122_GetSanitaryManholeLocationAsync(int keyId) {
            this.F84122_GetSanitaryManholeLocationAsync(keyId, null);
        }
        
        /// <remarks/>
        public void F84122_GetSanitaryManholeLocationAsync(int keyId, object userState) {
            if ((this.F84122_GetSanitaryManholeLocationOperationCompleted == null)) {
                this.F84122_GetSanitaryManholeLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84122_GetSanitaryManholeLocationOperationCompleted);
            }
            this.InvokeAsync("F84122_GetSanitaryManholeLocation", new object[] {
                        keyId}, this.F84122_GetSanitaryManholeLocationOperationCompleted, userState);
        }
        
        private void OnF84122_GetSanitaryManholeLocationOperationCompleted(object arg) {
            if ((this.F84122_GetSanitaryManholeLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84122_GetSanitaryManholeLocationCompleted(this, new F84122_GetSanitaryManholeLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84122_SaveSanitaryManholeLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F84122_SaveSanitaryManholeLocation(int keyId, string sanitaryManholeLocation) {
            object[] results = this.Invoke("F84122_SaveSanitaryManholeLocation", new object[] {
                        keyId,
                        sanitaryManholeLocation});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F84122_SaveSanitaryManholeLocationAsync(int keyId, string sanitaryManholeLocation) {
            this.F84122_SaveSanitaryManholeLocationAsync(keyId, sanitaryManholeLocation, null);
        }
        
        /// <remarks/>
        public void F84122_SaveSanitaryManholeLocationAsync(int keyId, string sanitaryManholeLocation, object userState) {
            if ((this.F84122_SaveSanitaryManholeLocationOperationCompleted == null)) {
                this.F84122_SaveSanitaryManholeLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84122_SaveSanitaryManholeLocationOperationCompleted);
            }
            this.InvokeAsync("F84122_SaveSanitaryManholeLocation", new object[] {
                        keyId,
                        sanitaryManholeLocation}, this.F84122_SaveSanitaryManholeLocationOperationCompleted, userState);
        }
        
        private void OnF84122_SaveSanitaryManholeLocationOperationCompleted(object arg) {
            if ((this.F84122_SaveSanitaryManholeLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84122_SaveSanitaryManholeLocationCompleted(this, new F84122_SaveSanitaryManholeLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84721_GetWaterValveProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F84721_GetWaterValveProperties(int valveId) {
            object[] results = this.Invoke("F84721_GetWaterValveProperties", new object[] {
                        valveId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F84721_GetWaterValvePropertiesAsync(int valveId) {
            this.F84721_GetWaterValvePropertiesAsync(valveId, null);
        }
        
        /// <remarks/>
        public void F84721_GetWaterValvePropertiesAsync(int valveId, object userState) {
            if ((this.F84721_GetWaterValvePropertiesOperationCompleted == null)) {
                this.F84721_GetWaterValvePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84721_GetWaterValvePropertiesOperationCompleted);
            }
            this.InvokeAsync("F84721_GetWaterValveProperties", new object[] {
                        valveId}, this.F84721_GetWaterValvePropertiesOperationCompleted, userState);
        }
        
        private void OnF84721_GetWaterValvePropertiesOperationCompleted(object arg) {
            if ((this.F84721_GetWaterValvePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84721_GetWaterValvePropertiesCompleted(this, new F84721_GetWaterValvePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84721_SaveWaterValveProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F84721_SaveWaterValveProperties(int valveId, string waterValveProperties) {
            object[] results = this.Invoke("F84721_SaveWaterValveProperties", new object[] {
                        valveId,
                        waterValveProperties});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F84721_SaveWaterValvePropertiesAsync(int valveId, string waterValveProperties) {
            this.F84721_SaveWaterValvePropertiesAsync(valveId, waterValveProperties, null);
        }
        
        /// <remarks/>
        public void F84721_SaveWaterValvePropertiesAsync(int valveId, string waterValveProperties, object userState) {
            if ((this.F84721_SaveWaterValvePropertiesOperationCompleted == null)) {
                this.F84721_SaveWaterValvePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84721_SaveWaterValvePropertiesOperationCompleted);
            }
            this.InvokeAsync("F84721_SaveWaterValveProperties", new object[] {
                        valveId,
                        waterValveProperties}, this.F84721_SaveWaterValvePropertiesOperationCompleted, userState);
        }
        
        private void OnF84721_SaveWaterValvePropertiesOperationCompleted(object arg) {
            if ((this.F84721_SaveWaterValvePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84721_SaveWaterValvePropertiesCompleted(this, new F84721_SaveWaterValvePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84721_DeleteWaterValveProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F84721_DeleteWaterValveProperties(int valveId) {
            this.Invoke("F84721_DeleteWaterValveProperties", new object[] {
                        valveId});
        }
        
        /// <remarks/>
        public void F84721_DeleteWaterValvePropertiesAsync(int valveId) {
            this.F84721_DeleteWaterValvePropertiesAsync(valveId, null);
        }
        
        /// <remarks/>
        public void F84721_DeleteWaterValvePropertiesAsync(int valveId, object userState) {
            if ((this.F84721_DeleteWaterValvePropertiesOperationCompleted == null)) {
                this.F84721_DeleteWaterValvePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84721_DeleteWaterValvePropertiesOperationCompleted);
            }
            this.InvokeAsync("F84721_DeleteWaterValveProperties", new object[] {
                        valveId}, this.F84721_DeleteWaterValvePropertiesOperationCompleted, userState);
        }
        
        private void OnF84721_DeleteWaterValvePropertiesOperationCompleted(object arg) {
            if ((this.F84721_DeleteWaterValvePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84721_DeleteWaterValvePropertiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9033_ListQueryView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F9033_ListQueryView(int formId) {
            object[] results = this.Invoke("F9033_ListQueryView", new object[] {
                        formId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F9033_ListQueryViewAsync(int formId) {
            this.F9033_ListQueryViewAsync(formId, null);
        }
        
        /// <remarks/>
        public void F9033_ListQueryViewAsync(int formId, object userState) {
            if ((this.F9033_ListQueryViewOperationCompleted == null)) {
                this.F9033_ListQueryViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9033_ListQueryViewOperationCompleted);
            }
            this.InvokeAsync("F9033_ListQueryView", new object[] {
                        formId}, this.F9033_ListQueryViewOperationCompleted, userState);
        }
        
        private void OnF9033_ListQueryViewOperationCompleted(object arg) {
            if ((this.F9033_ListQueryViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9033_ListQueryViewCompleted(this, new F9033_ListQueryViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9033_GetDefaultLayout", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F9033_GetDefaultLayout(int queryViewId) {
            object[] results = this.Invoke("F9033_GetDefaultLayout", new object[] {
                        queryViewId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F9033_GetDefaultLayoutAsync(int queryViewId) {
            this.F9033_GetDefaultLayoutAsync(queryViewId, null);
        }
        
        /// <remarks/>
        public void F9033_GetDefaultLayoutAsync(int queryViewId, object userState) {
            if ((this.F9033_GetDefaultLayoutOperationCompleted == null)) {
                this.F9033_GetDefaultLayoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9033_GetDefaultLayoutOperationCompleted);
            }
            this.InvokeAsync("F9033_GetDefaultLayout", new object[] {
                        queryViewId}, this.F9033_GetDefaultLayoutOperationCompleted, userState);
        }
        
        private void OnF9033_GetDefaultLayoutOperationCompleted(object arg) {
            if ((this.F9033_GetDefaultLayoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9033_GetDefaultLayoutCompleted(this, new F9033_GetDefaultLayoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9033_QueryEngine", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet F9033_QueryEngine(int queryViewId) {
            object[] results = this.Invoke("F9033_QueryEngine", new object[] {
                        queryViewId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void F9033_QueryEngineAsync(int queryViewId) {
            this.F9033_QueryEngineAsync(queryViewId, null);
        }
        
        /// <remarks/>
        public void F9033_QueryEngineAsync(int queryViewId, object userState) {
            if ((this.F9033_QueryEngineOperationCompleted == null)) {
                this.F9033_QueryEngineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9033_QueryEngineOperationCompleted);
            }
            this.InvokeAsync("F9033_QueryEngine", new object[] {
                        queryViewId}, this.F9033_QueryEngineOperationCompleted, userState);
        }
        
        private void OnF9033_QueryEngineOperationCompleted(object arg) {
            if ((this.F9033_QueryEngineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9033_QueryEngineCompleted(this, new F9033_QueryEngineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84722_GetWaterValveLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F84722_GetWaterValveLocation(int keyId, int formId) {
            object[] results = this.Invoke("F84722_GetWaterValveLocation", new object[] {
                        keyId,
                        formId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F84722_GetWaterValveLocationAsync(int keyId, int formId) {
            this.F84722_GetWaterValveLocationAsync(keyId, formId, null);
        }
        
        /// <remarks/>
        public void F84722_GetWaterValveLocationAsync(int keyId, int formId, object userState) {
            if ((this.F84722_GetWaterValveLocationOperationCompleted == null)) {
                this.F84722_GetWaterValveLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84722_GetWaterValveLocationOperationCompleted);
            }
            this.InvokeAsync("F84722_GetWaterValveLocation", new object[] {
                        keyId,
                        formId}, this.F84722_GetWaterValveLocationOperationCompleted, userState);
        }
        
        private void OnF84722_GetWaterValveLocationOperationCompleted(object arg) {
            if ((this.F84722_GetWaterValveLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84722_GetWaterValveLocationCompleted(this, new F84722_GetWaterValveLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84722_SaveWaterValveLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F84722_SaveWaterValveLocation(int keyId, string waterValveLocation, int formId) {
            object[] results = this.Invoke("F84722_SaveWaterValveLocation", new object[] {
                        keyId,
                        waterValveLocation,
                        formId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F84722_SaveWaterValveLocationAsync(int keyId, string waterValveLocation, int formId) {
            this.F84722_SaveWaterValveLocationAsync(keyId, waterValveLocation, formId, null);
        }
        
        /// <remarks/>
        public void F84722_SaveWaterValveLocationAsync(int keyId, string waterValveLocation, int formId, object userState) {
            if ((this.F84722_SaveWaterValveLocationOperationCompleted == null)) {
                this.F84722_SaveWaterValveLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84722_SaveWaterValveLocationOperationCompleted);
            }
            this.InvokeAsync("F84722_SaveWaterValveLocation", new object[] {
                        keyId,
                        waterValveLocation,
                        formId}, this.F84722_SaveWaterValveLocationOperationCompleted, userState);
        }
        
        private void OnF84722_SaveWaterValveLocationOperationCompleted(object arg) {
            if ((this.F84722_SaveWaterValveLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84722_SaveWaterValveLocationCompleted(this, new F84722_SaveWaterValveLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84723_GetWaterHydrantProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F84723_GetWaterHydrantProperties(int hydrantId) {
            object[] results = this.Invoke("F84723_GetWaterHydrantProperties", new object[] {
                        hydrantId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F84723_GetWaterHydrantPropertiesAsync(int hydrantId) {
            this.F84723_GetWaterHydrantPropertiesAsync(hydrantId, null);
        }
        
        /// <remarks/>
        public void F84723_GetWaterHydrantPropertiesAsync(int hydrantId, object userState) {
            if ((this.F84723_GetWaterHydrantPropertiesOperationCompleted == null)) {
                this.F84723_GetWaterHydrantPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84723_GetWaterHydrantPropertiesOperationCompleted);
            }
            this.InvokeAsync("F84723_GetWaterHydrantProperties", new object[] {
                        hydrantId}, this.F84723_GetWaterHydrantPropertiesOperationCompleted, userState);
        }
        
        private void OnF84723_GetWaterHydrantPropertiesOperationCompleted(object arg) {
            if ((this.F84723_GetWaterHydrantPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84723_GetWaterHydrantPropertiesCompleted(this, new F84723_GetWaterHydrantPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84723_CheckMainValveId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F84723_CheckMainValveId(int mainValveId) {
            object[] results = this.Invoke("F84723_CheckMainValveId", new object[] {
                        mainValveId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F84723_CheckMainValveIdAsync(int mainValveId) {
            this.F84723_CheckMainValveIdAsync(mainValveId, null);
        }
        
        /// <remarks/>
        public void F84723_CheckMainValveIdAsync(int mainValveId, object userState) {
            if ((this.F84723_CheckMainValveIdOperationCompleted == null)) {
                this.F84723_CheckMainValveIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84723_CheckMainValveIdOperationCompleted);
            }
            this.InvokeAsync("F84723_CheckMainValveId", new object[] {
                        mainValveId}, this.F84723_CheckMainValveIdOperationCompleted, userState);
        }
        
        private void OnF84723_CheckMainValveIdOperationCompleted(object arg) {
            if ((this.F84723_CheckMainValveIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84723_CheckMainValveIdCompleted(this, new F84723_CheckMainValveIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84723_SaveWaterHydrantProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F84723_SaveWaterHydrantProperties(int hydrantId, string waterHydrantPropties) {
            object[] results = this.Invoke("F84723_SaveWaterHydrantProperties", new object[] {
                        hydrantId,
                        waterHydrantPropties});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F84723_SaveWaterHydrantPropertiesAsync(int hydrantId, string waterHydrantPropties) {
            this.F84723_SaveWaterHydrantPropertiesAsync(hydrantId, waterHydrantPropties, null);
        }
        
        /// <remarks/>
        public void F84723_SaveWaterHydrantPropertiesAsync(int hydrantId, string waterHydrantPropties, object userState) {
            if ((this.F84723_SaveWaterHydrantPropertiesOperationCompleted == null)) {
                this.F84723_SaveWaterHydrantPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84723_SaveWaterHydrantPropertiesOperationCompleted);
            }
            this.InvokeAsync("F84723_SaveWaterHydrantProperties", new object[] {
                        hydrantId,
                        waterHydrantPropties}, this.F84723_SaveWaterHydrantPropertiesOperationCompleted, userState);
        }
        
        private void OnF84723_SaveWaterHydrantPropertiesOperationCompleted(object arg) {
            if ((this.F84723_SaveWaterHydrantPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84723_SaveWaterHydrantPropertiesCompleted(this, new F84723_SaveWaterHydrantPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84723_DeleteWaterHydrantProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F84723_DeleteWaterHydrantProperties(int hydrantId) {
            this.Invoke("F84723_DeleteWaterHydrantProperties", new object[] {
                        hydrantId});
        }
        
        /// <remarks/>
        public void F84723_DeleteWaterHydrantPropertiesAsync(int hydrantId) {
            this.F84723_DeleteWaterHydrantPropertiesAsync(hydrantId, null);
        }
        
        /// <remarks/>
        public void F84723_DeleteWaterHydrantPropertiesAsync(int hydrantId, object userState) {
            if ((this.F84723_DeleteWaterHydrantPropertiesOperationCompleted == null)) {
                this.F84723_DeleteWaterHydrantPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84723_DeleteWaterHydrantPropertiesOperationCompleted);
            }
            this.InvokeAsync("F84723_DeleteWaterHydrantProperties", new object[] {
                        hydrantId}, this.F84723_DeleteWaterHydrantPropertiesOperationCompleted, userState);
        }
        
        private void OnF84723_DeleteWaterHydrantPropertiesOperationCompleted(object arg) {
            if ((this.F84723_DeleteWaterHydrantPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84723_DeleteWaterHydrantPropertiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84725_GetWaterPipeProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F84725_GetWaterPipeProperties(int pipeId) {
            object[] results = this.Invoke("F84725_GetWaterPipeProperties", new object[] {
                        pipeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F84725_GetWaterPipePropertiesAsync(int pipeId) {
            this.F84725_GetWaterPipePropertiesAsync(pipeId, null);
        }
        
        /// <remarks/>
        public void F84725_GetWaterPipePropertiesAsync(int pipeId, object userState) {
            if ((this.F84725_GetWaterPipePropertiesOperationCompleted == null)) {
                this.F84725_GetWaterPipePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84725_GetWaterPipePropertiesOperationCompleted);
            }
            this.InvokeAsync("F84725_GetWaterPipeProperties", new object[] {
                        pipeId}, this.F84725_GetWaterPipePropertiesOperationCompleted, userState);
        }
        
        private void OnF84725_GetWaterPipePropertiesOperationCompleted(object arg) {
            if ((this.F84725_GetWaterPipePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84725_GetWaterPipePropertiesCompleted(this, new F84725_GetWaterPipePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84725_SaveWaterPipeProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F84725_SaveWaterPipeProperties(int pipeId, string waterPipeProperties) {
            object[] results = this.Invoke("F84725_SaveWaterPipeProperties", new object[] {
                        pipeId,
                        waterPipeProperties});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F84725_SaveWaterPipePropertiesAsync(int pipeId, string waterPipeProperties) {
            this.F84725_SaveWaterPipePropertiesAsync(pipeId, waterPipeProperties, null);
        }
        
        /// <remarks/>
        public void F84725_SaveWaterPipePropertiesAsync(int pipeId, string waterPipeProperties, object userState) {
            if ((this.F84725_SaveWaterPipePropertiesOperationCompleted == null)) {
                this.F84725_SaveWaterPipePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84725_SaveWaterPipePropertiesOperationCompleted);
            }
            this.InvokeAsync("F84725_SaveWaterPipeProperties", new object[] {
                        pipeId,
                        waterPipeProperties}, this.F84725_SaveWaterPipePropertiesOperationCompleted, userState);
        }
        
        private void OnF84725_SaveWaterPipePropertiesOperationCompleted(object arg) {
            if ((this.F84725_SaveWaterPipePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84725_SaveWaterPipePropertiesCompleted(this, new F84725_SaveWaterPipePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84725_DeleteWaterPipeProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F84725_DeleteWaterPipeProperties(int pipeId) {
            this.Invoke("F84725_DeleteWaterPipeProperties", new object[] {
                        pipeId});
        }
        
        /// <remarks/>
        public void F84725_DeleteWaterPipePropertiesAsync(int pipeId) {
            this.F84725_DeleteWaterPipePropertiesAsync(pipeId, null);
        }
        
        /// <remarks/>
        public void F84725_DeleteWaterPipePropertiesAsync(int pipeId, object userState) {
            if ((this.F84725_DeleteWaterPipePropertiesOperationCompleted == null)) {
                this.F84725_DeleteWaterPipePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84725_DeleteWaterPipePropertiesOperationCompleted);
            }
            this.InvokeAsync("F84725_DeleteWaterPipeProperties", new object[] {
                        pipeId}, this.F84725_DeleteWaterPipePropertiesOperationCompleted, userState);
        }
        
        private void OnF84725_DeleteWaterPipePropertiesOperationCompleted(object arg) {
            if ((this.F84725_DeleteWaterPipePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84725_DeleteWaterPipePropertiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84726_GetWaterPipeLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F84726_GetWaterPipeLocation(int pipeId) {
            object[] results = this.Invoke("F84726_GetWaterPipeLocation", new object[] {
                        pipeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F84726_GetWaterPipeLocationAsync(int pipeId) {
            this.F84726_GetWaterPipeLocationAsync(pipeId, null);
        }
        
        /// <remarks/>
        public void F84726_GetWaterPipeLocationAsync(int pipeId, object userState) {
            if ((this.F84726_GetWaterPipeLocationOperationCompleted == null)) {
                this.F84726_GetWaterPipeLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84726_GetWaterPipeLocationOperationCompleted);
            }
            this.InvokeAsync("F84726_GetWaterPipeLocation", new object[] {
                        pipeId}, this.F84726_GetWaterPipeLocationOperationCompleted, userState);
        }
        
        private void OnF84726_GetWaterPipeLocationOperationCompleted(object arg) {
            if ((this.F84726_GetWaterPipeLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84726_GetWaterPipeLocationCompleted(this, new F84726_GetWaterPipeLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84726_SaveWaterPipeLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F84726_SaveWaterPipeLocation(int pipeId, string waterPipeLocation) {
            object[] results = this.Invoke("F84726_SaveWaterPipeLocation", new object[] {
                        pipeId,
                        waterPipeLocation});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F84726_SaveWaterPipeLocationAsync(int pipeId, string waterPipeLocation) {
            this.F84726_SaveWaterPipeLocationAsync(pipeId, waterPipeLocation, null);
        }
        
        /// <remarks/>
        public void F84726_SaveWaterPipeLocationAsync(int pipeId, string waterPipeLocation, object userState) {
            if ((this.F84726_SaveWaterPipeLocationOperationCompleted == null)) {
                this.F84726_SaveWaterPipeLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84726_SaveWaterPipeLocationOperationCompleted);
            }
            this.InvokeAsync("F84726_SaveWaterPipeLocation", new object[] {
                        pipeId,
                        waterPipeLocation}, this.F84726_SaveWaterPipeLocationOperationCompleted, userState);
        }
        
        private void OnF84726_SaveWaterPipeLocationOperationCompleted(object arg) {
            if ((this.F84726_SaveWaterPipeLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84726_SaveWaterPipeLocationCompleted(this, new F84726_SaveWaterPipeLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15002_GetDistirctFundDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15002_GetDistirctFundDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> districtId) {
            object[] results = this.Invoke("F15002_GetDistirctFundDetails", new object[] {
                        districtId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15002_GetDistirctFundDetailsAsync(System.Nullable<int> districtId) {
            this.F15002_GetDistirctFundDetailsAsync(districtId, null);
        }
        
        /// <remarks/>
        public void F15002_GetDistirctFundDetailsAsync(System.Nullable<int> districtId, object userState) {
            if ((this.F15002_GetDistirctFundDetailsOperationCompleted == null)) {
                this.F15002_GetDistirctFundDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15002_GetDistirctFundDetailsOperationCompleted);
            }
            this.InvokeAsync("F15002_GetDistirctFundDetails", new object[] {
                        districtId}, this.F15002_GetDistirctFundDetailsOperationCompleted, userState);
        }
        
        private void OnF15002_GetDistirctFundDetailsOperationCompleted(object arg) {
            if ((this.F15002_GetDistirctFundDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15002_GetDistirctFundDetailsCompleted(this, new F15002_GetDistirctFundDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15002_ListAllFunds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15002_ListAllFunds([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fundId, string fund, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> rollYear) {
            object[] results = this.Invoke("F15002_ListAllFunds", new object[] {
                        fundId,
                        fund,
                        rollYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15002_ListAllFundsAsync(System.Nullable<int> fundId, string fund, System.Nullable<int> rollYear) {
            this.F15002_ListAllFundsAsync(fundId, fund, rollYear, null);
        }
        
        /// <remarks/>
        public void F15002_ListAllFundsAsync(System.Nullable<int> fundId, string fund, System.Nullable<int> rollYear, object userState) {
            if ((this.F15002_ListAllFundsOperationCompleted == null)) {
                this.F15002_ListAllFundsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15002_ListAllFundsOperationCompleted);
            }
            this.InvokeAsync("F15002_ListAllFunds", new object[] {
                        fundId,
                        fund,
                        rollYear}, this.F15002_ListAllFundsOperationCompleted, userState);
        }
        
        private void OnF15002_ListAllFundsOperationCompleted(object arg) {
            if ((this.F15002_ListAllFundsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15002_ListAllFundsCompleted(this, new F15002_ListAllFundsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15002_CheckDistrict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F15002_CheckDistrict([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> districtId, int district, int rollYear) {
            object[] results = this.Invoke("F15002_CheckDistrict", new object[] {
                        districtId,
                        district,
                        rollYear});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F15002_CheckDistrictAsync(System.Nullable<int> districtId, int district, int rollYear) {
            this.F15002_CheckDistrictAsync(districtId, district, rollYear, null);
        }
        
        /// <remarks/>
        public void F15002_CheckDistrictAsync(System.Nullable<int> districtId, int district, int rollYear, object userState) {
            if ((this.F15002_CheckDistrictOperationCompleted == null)) {
                this.F15002_CheckDistrictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15002_CheckDistrictOperationCompleted);
            }
            this.InvokeAsync("F15002_CheckDistrict", new object[] {
                        districtId,
                        district,
                        rollYear}, this.F15002_CheckDistrictOperationCompleted, userState);
        }
        
        private void OnF15002_CheckDistrictOperationCompleted(object arg) {
            if ((this.F15002_CheckDistrictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15002_CheckDistrictCompleted(this, new F15002_CheckDistrictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15002_CreateOrEditDistrictMgmt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F15002_CreateOrEditDistrictMgmt([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> districtId, int district, string description, int rollYear, int activeStatus, string districtFundItems) {
            object[] results = this.Invoke("F15002_CreateOrEditDistrictMgmt", new object[] {
                        districtId,
                        district,
                        description,
                        rollYear,
                        activeStatus,
                        districtFundItems});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F15002_CreateOrEditDistrictMgmtAsync(System.Nullable<int> districtId, int district, string description, int rollYear, int activeStatus, string districtFundItems) {
            this.F15002_CreateOrEditDistrictMgmtAsync(districtId, district, description, rollYear, activeStatus, districtFundItems, null);
        }
        
        /// <remarks/>
        public void F15002_CreateOrEditDistrictMgmtAsync(System.Nullable<int> districtId, int district, string description, int rollYear, int activeStatus, string districtFundItems, object userState) {
            if ((this.F15002_CreateOrEditDistrictMgmtOperationCompleted == null)) {
                this.F15002_CreateOrEditDistrictMgmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15002_CreateOrEditDistrictMgmtOperationCompleted);
            }
            this.InvokeAsync("F15002_CreateOrEditDistrictMgmt", new object[] {
                        districtId,
                        district,
                        description,
                        rollYear,
                        activeStatus,
                        districtFundItems}, this.F15002_CreateOrEditDistrictMgmtOperationCompleted, userState);
        }
        
        private void OnF15002_CreateOrEditDistrictMgmtOperationCompleted(object arg) {
            if ((this.F15002_CreateOrEditDistrictMgmtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15002_CreateOrEditDistrictMgmtCompleted(this, new F15002_CreateOrEditDistrictMgmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84123_GetSanitaryPipeProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F84123_GetSanitaryPipeProperties(int pipeId) {
            object[] results = this.Invoke("F84123_GetSanitaryPipeProperties", new object[] {
                        pipeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F84123_GetSanitaryPipePropertiesAsync(int pipeId) {
            this.F84123_GetSanitaryPipePropertiesAsync(pipeId, null);
        }
        
        /// <remarks/>
        public void F84123_GetSanitaryPipePropertiesAsync(int pipeId, object userState) {
            if ((this.F84123_GetSanitaryPipePropertiesOperationCompleted == null)) {
                this.F84123_GetSanitaryPipePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84123_GetSanitaryPipePropertiesOperationCompleted);
            }
            this.InvokeAsync("F84123_GetSanitaryPipeProperties", new object[] {
                        pipeId}, this.F84123_GetSanitaryPipePropertiesOperationCompleted, userState);
        }
        
        private void OnF84123_GetSanitaryPipePropertiesOperationCompleted(object arg) {
            if ((this.F84123_GetSanitaryPipePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84123_GetSanitaryPipePropertiesCompleted(this, new F84123_GetSanitaryPipePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84123_SaveSanitaryPipeProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F84123_SaveSanitaryPipeProperties(int pipeId, string sanitaryPipeProperties) {
            object[] results = this.Invoke("F84123_SaveSanitaryPipeProperties", new object[] {
                        pipeId,
                        sanitaryPipeProperties});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F84123_SaveSanitaryPipePropertiesAsync(int pipeId, string sanitaryPipeProperties) {
            this.F84123_SaveSanitaryPipePropertiesAsync(pipeId, sanitaryPipeProperties, null);
        }
        
        /// <remarks/>
        public void F84123_SaveSanitaryPipePropertiesAsync(int pipeId, string sanitaryPipeProperties, object userState) {
            if ((this.F84123_SaveSanitaryPipePropertiesOperationCompleted == null)) {
                this.F84123_SaveSanitaryPipePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84123_SaveSanitaryPipePropertiesOperationCompleted);
            }
            this.InvokeAsync("F84123_SaveSanitaryPipeProperties", new object[] {
                        pipeId,
                        sanitaryPipeProperties}, this.F84123_SaveSanitaryPipePropertiesOperationCompleted, userState);
        }
        
        private void OnF84123_SaveSanitaryPipePropertiesOperationCompleted(object arg) {
            if ((this.F84123_SaveSanitaryPipePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84123_SaveSanitaryPipePropertiesCompleted(this, new F84123_SaveSanitaryPipePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84123_DeleteSanitaryPipeProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F84123_DeleteSanitaryPipeProperties(int pipeId) {
            this.Invoke("F84123_DeleteSanitaryPipeProperties", new object[] {
                        pipeId});
        }
        
        /// <remarks/>
        public void F84123_DeleteSanitaryPipePropertiesAsync(int pipeId) {
            this.F84123_DeleteSanitaryPipePropertiesAsync(pipeId, null);
        }
        
        /// <remarks/>
        public void F84123_DeleteSanitaryPipePropertiesAsync(int pipeId, object userState) {
            if ((this.F84123_DeleteSanitaryPipePropertiesOperationCompleted == null)) {
                this.F84123_DeleteSanitaryPipePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84123_DeleteSanitaryPipePropertiesOperationCompleted);
            }
            this.InvokeAsync("F84123_DeleteSanitaryPipeProperties", new object[] {
                        pipeId}, this.F84123_DeleteSanitaryPipePropertiesOperationCompleted, userState);
        }
        
        private void OnF84123_DeleteSanitaryPipePropertiesOperationCompleted(object arg) {
            if ((this.F84123_DeleteSanitaryPipePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84123_DeleteSanitaryPipePropertiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84124_GetSanitaryPipeLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F84124_GetSanitaryPipeLocation(int keyId, int formId) {
            object[] results = this.Invoke("F84124_GetSanitaryPipeLocation", new object[] {
                        keyId,
                        formId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F84124_GetSanitaryPipeLocationAsync(int keyId, int formId) {
            this.F84124_GetSanitaryPipeLocationAsync(keyId, formId, null);
        }
        
        /// <remarks/>
        public void F84124_GetSanitaryPipeLocationAsync(int keyId, int formId, object userState) {
            if ((this.F84124_GetSanitaryPipeLocationOperationCompleted == null)) {
                this.F84124_GetSanitaryPipeLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84124_GetSanitaryPipeLocationOperationCompleted);
            }
            this.InvokeAsync("F84124_GetSanitaryPipeLocation", new object[] {
                        keyId,
                        formId}, this.F84124_GetSanitaryPipeLocationOperationCompleted, userState);
        }
        
        private void OnF84124_GetSanitaryPipeLocationOperationCompleted(object arg) {
            if ((this.F84124_GetSanitaryPipeLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84124_GetSanitaryPipeLocationCompleted(this, new F84124_GetSanitaryPipeLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F84124_SaveSanitaryPipeLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F84124_SaveSanitaryPipeLocation(int keyId, string sanitaryPipeLocation) {
            object[] results = this.Invoke("F84124_SaveSanitaryPipeLocation", new object[] {
                        keyId,
                        sanitaryPipeLocation});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F84124_SaveSanitaryPipeLocationAsync(int keyId, string sanitaryPipeLocation) {
            this.F84124_SaveSanitaryPipeLocationAsync(keyId, sanitaryPipeLocation, null);
        }
        
        /// <remarks/>
        public void F84124_SaveSanitaryPipeLocationAsync(int keyId, string sanitaryPipeLocation, object userState) {
            if ((this.F84124_SaveSanitaryPipeLocationOperationCompleted == null)) {
                this.F84124_SaveSanitaryPipeLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF84124_SaveSanitaryPipeLocationOperationCompleted);
            }
            this.InvokeAsync("F84124_SaveSanitaryPipeLocation", new object[] {
                        keyId,
                        sanitaryPipeLocation}, this.F84124_SaveSanitaryPipeLocationOperationCompleted, userState);
        }
        
        private void OnF84124_SaveSanitaryPipeLocationOperationCompleted(object arg) {
            if ((this.F84124_SaveSanitaryPipeLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F84124_SaveSanitaryPipeLocationCompleted(this, new F84124_SaveSanitaryPipeLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F11020_GetRealPropertyStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F11020_GetRealPropertyStatement(int statementId) {
            object[] results = this.Invoke("F11020_GetRealPropertyStatement", new object[] {
                        statementId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F11020_GetRealPropertyStatementAsync(int statementId) {
            this.F11020_GetRealPropertyStatementAsync(statementId, null);
        }
        
        /// <remarks/>
        public void F11020_GetRealPropertyStatementAsync(int statementId, object userState) {
            if ((this.F11020_GetRealPropertyStatementOperationCompleted == null)) {
                this.F11020_GetRealPropertyStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF11020_GetRealPropertyStatementOperationCompleted);
            }
            this.InvokeAsync("F11020_GetRealPropertyStatement", new object[] {
                        statementId}, this.F11020_GetRealPropertyStatementOperationCompleted, userState);
        }
        
        private void OnF11020_GetRealPropertyStatementOperationCompleted(object arg) {
            if ((this.F11020_GetRealPropertyStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F11020_GetRealPropertyStatementCompleted(this, new F11020_GetRealPropertyStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1423_UpdateRealPropertyStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F1423_UpdateRealPropertyStatement(int statementId, string statementItems) {
            this.Invoke("F1423_UpdateRealPropertyStatement", new object[] {
                        statementId,
                        statementItems});
        }
        
        /// <remarks/>
        public void F1423_UpdateRealPropertyStatementAsync(int statementId, string statementItems) {
            this.F1423_UpdateRealPropertyStatementAsync(statementId, statementItems, null);
        }
        
        /// <remarks/>
        public void F1423_UpdateRealPropertyStatementAsync(int statementId, string statementItems, object userState) {
            if ((this.F1423_UpdateRealPropertyStatementOperationCompleted == null)) {
                this.F1423_UpdateRealPropertyStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1423_UpdateRealPropertyStatementOperationCompleted);
            }
            this.InvokeAsync("F1423_UpdateRealPropertyStatement", new object[] {
                        statementId,
                        statementItems}, this.F1423_UpdateRealPropertyStatementOperationCompleted, userState);
        }
        
        private void OnF1423_UpdateRealPropertyStatementOperationCompleted(object arg) {
            if ((this.F1423_UpdateRealPropertyStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1423_UpdateRealPropertyStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1423_ListMortgageName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1423_ListMortgageName() {
            object[] results = this.Invoke("F1423_ListMortgageName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1423_ListMortgageNameAsync() {
            this.F1423_ListMortgageNameAsync(null);
        }
        
        /// <remarks/>
        public void F1423_ListMortgageNameAsync(object userState) {
            if ((this.F1423_ListMortgageNameOperationCompleted == null)) {
                this.F1423_ListMortgageNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1423_ListMortgageNameOperationCompleted);
            }
            this.InvokeAsync("F1423_ListMortgageName", new object[0], this.F1423_ListMortgageNameOperationCompleted, userState);
        }
        
        private void OnF1423_ListMortgageNameOperationCompleted(object arg) {
            if ((this.F1423_ListMortgageNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1423_ListMortgageNameCompleted(this, new F1423_ListMortgageNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15020_ListHistoryGrid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15020_ListHistoryGrid(int statementId) {
            object[] results = this.Invoke("F15020_ListHistoryGrid", new object[] {
                        statementId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15020_ListHistoryGridAsync(int statementId) {
            this.F15020_ListHistoryGridAsync(statementId, null);
        }
        
        /// <remarks/>
        public void F15020_ListHistoryGridAsync(int statementId, object userState) {
            if ((this.F15020_ListHistoryGridOperationCompleted == null)) {
                this.F15020_ListHistoryGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15020_ListHistoryGridOperationCompleted);
            }
            this.InvokeAsync("F15020_ListHistoryGrid", new object[] {
                        statementId}, this.F15020_ListHistoryGridOperationCompleted, userState);
        }
        
        private void OnF15020_ListHistoryGridOperationCompleted(object arg) {
            if ((this.F15020_ListHistoryGridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15020_ListHistoryGridCompleted(this, new F15020_ListHistoryGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15020_GetReceiptDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15020_GetReceiptDetails(int receiptId) {
            object[] results = this.Invoke("F15020_GetReceiptDetails", new object[] {
                        receiptId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15020_GetReceiptDetailsAsync(int receiptId) {
            this.F15020_GetReceiptDetailsAsync(receiptId, null);
        }
        
        /// <remarks/>
        public void F15020_GetReceiptDetailsAsync(int receiptId, object userState) {
            if ((this.F15020_GetReceiptDetailsOperationCompleted == null)) {
                this.F15020_GetReceiptDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15020_GetReceiptDetailsOperationCompleted);
            }
            this.InvokeAsync("F15020_GetReceiptDetails", new object[] {
                        receiptId}, this.F15020_GetReceiptDetailsOperationCompleted, userState);
        }
        
        private void OnF15020_GetReceiptDetailsOperationCompleted(object arg) {
            if ((this.F15020_GetReceiptDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15020_GetReceiptDetailsCompleted(this, new F15020_GetReceiptDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1003_GetMinTaxDue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal F1003_GetMinTaxDue(int statmentId, string interestDate) {
            object[] results = this.Invoke("F1003_GetMinTaxDue", new object[] {
                        statmentId,
                        interestDate});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void F1003_GetMinTaxDueAsync(int statmentId, string interestDate) {
            this.F1003_GetMinTaxDueAsync(statmentId, interestDate, null);
        }
        
        /// <remarks/>
        public void F1003_GetMinTaxDueAsync(int statmentId, string interestDate, object userState) {
            if ((this.F1003_GetMinTaxDueOperationCompleted == null)) {
                this.F1003_GetMinTaxDueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1003_GetMinTaxDueOperationCompleted);
            }
            this.InvokeAsync("F1003_GetMinTaxDue", new object[] {
                        statmentId,
                        interestDate}, this.F1003_GetMinTaxDueOperationCompleted, userState);
        }
        
        private void OnF1003_GetMinTaxDueOperationCompleted(object arg) {
            if ((this.F1003_GetMinTaxDueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1003_GetMinTaxDueCompleted(this, new F1003_GetMinTaxDueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1004_GetInterestAmount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal F1004_GetInterestAmount(int statmentId, string interestDate, decimal taxDueAmount) {
            object[] results = this.Invoke("F1004_GetInterestAmount", new object[] {
                        statmentId,
                        interestDate,
                        taxDueAmount});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void F1004_GetInterestAmountAsync(int statmentId, string interestDate, decimal taxDueAmount) {
            this.F1004_GetInterestAmountAsync(statmentId, interestDate, taxDueAmount, null);
        }
        
        /// <remarks/>
        public void F1004_GetInterestAmountAsync(int statmentId, string interestDate, decimal taxDueAmount, object userState) {
            if ((this.F1004_GetInterestAmountOperationCompleted == null)) {
                this.F1004_GetInterestAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1004_GetInterestAmountOperationCompleted);
            }
            this.InvokeAsync("F1004_GetInterestAmount", new object[] {
                        statmentId,
                        interestDate,
                        taxDueAmount}, this.F1004_GetInterestAmountOperationCompleted, userState);
        }
        
        private void OnF1004_GetInterestAmountOperationCompleted(object arg) {
            if ((this.F1004_GetInterestAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1004_GetInterestAmountCompleted(this, new F1004_GetInterestAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1009_GetValidReceiptTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1009_GetValidReceiptTest(int statementId, System.DateTime receiptDate) {
            object[] results = this.Invoke("F1009_GetValidReceiptTest", new object[] {
                        statementId,
                        receiptDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1009_GetValidReceiptTestAsync(int statementId, System.DateTime receiptDate) {
            this.F1009_GetValidReceiptTestAsync(statementId, receiptDate, null);
        }
        
        /// <remarks/>
        public void F1009_GetValidReceiptTestAsync(int statementId, System.DateTime receiptDate, object userState) {
            if ((this.F1009_GetValidReceiptTestOperationCompleted == null)) {
                this.F1009_GetValidReceiptTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1009_GetValidReceiptTestOperationCompleted);
            }
            this.InvokeAsync("F1009_GetValidReceiptTest", new object[] {
                        statementId,
                        receiptDate}, this.F1009_GetValidReceiptTestOperationCompleted, userState);
        }
        
        private void OnF1009_GetValidReceiptTestOperationCompleted(object arg) {
            if ((this.F1009_GetValidReceiptTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1009_GetValidReceiptTestCompleted(this, new F1009_GetValidReceiptTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1405_SaveMasterReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1405_SaveMasterReceipt(int statementId, int receiptSourceId, string otherParameterInfo) {
            object[] results = this.Invoke("F1405_SaveMasterReceipt", new object[] {
                        statementId,
                        receiptSourceId,
                        otherParameterInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1405_SaveMasterReceiptAsync(int statementId, int receiptSourceId, string otherParameterInfo) {
            this.F1405_SaveMasterReceiptAsync(statementId, receiptSourceId, otherParameterInfo, null);
        }
        
        /// <remarks/>
        public void F1405_SaveMasterReceiptAsync(int statementId, int receiptSourceId, string otherParameterInfo, object userState) {
            if ((this.F1405_SaveMasterReceiptOperationCompleted == null)) {
                this.F1405_SaveMasterReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1405_SaveMasterReceiptOperationCompleted);
            }
            this.InvokeAsync("F1405_SaveMasterReceipt", new object[] {
                        statementId,
                        receiptSourceId,
                        otherParameterInfo}, this.F1405_SaveMasterReceiptOperationCompleted, userState);
        }
        
        private void OnF1405_SaveMasterReceiptOperationCompleted(object arg) {
            if ((this.F1405_SaveMasterReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1405_SaveMasterReceiptCompleted(this, new F1405_SaveMasterReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15104_GetReceiptPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15104_GetReceiptPayment(int receiptId) {
            object[] results = this.Invoke("F15104_GetReceiptPayment", new object[] {
                        receiptId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15104_GetReceiptPaymentAsync(int receiptId) {
            this.F15104_GetReceiptPaymentAsync(receiptId, null);
        }
        
        /// <remarks/>
        public void F15104_GetReceiptPaymentAsync(int receiptId, object userState) {
            if ((this.F15104_GetReceiptPaymentOperationCompleted == null)) {
                this.F15104_GetReceiptPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15104_GetReceiptPaymentOperationCompleted);
            }
            this.InvokeAsync("F15104_GetReceiptPayment", new object[] {
                        receiptId}, this.F15104_GetReceiptPaymentOperationCompleted, userState);
        }
        
        private void OnF15104_GetReceiptPaymentOperationCompleted(object arg) {
            if ((this.F15104_GetReceiptPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15104_GetReceiptPaymentCompleted(this, new F15104_GetReceiptPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15104_UpdateReceiptPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F15104_UpdateReceiptPayment(string receiptPayment) {
            this.Invoke("F15104_UpdateReceiptPayment", new object[] {
                        receiptPayment});
        }
        
        /// <remarks/>
        public void F15104_UpdateReceiptPaymentAsync(string receiptPayment) {
            this.F15104_UpdateReceiptPaymentAsync(receiptPayment, null);
        }
        
        /// <remarks/>
        public void F15104_UpdateReceiptPaymentAsync(string receiptPayment, object userState) {
            if ((this.F15104_UpdateReceiptPaymentOperationCompleted == null)) {
                this.F15104_UpdateReceiptPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15104_UpdateReceiptPaymentOperationCompleted);
            }
            this.InvokeAsync("F15104_UpdateReceiptPayment", new object[] {
                        receiptPayment}, this.F15104_UpdateReceiptPaymentOperationCompleted, userState);
        }
        
        private void OnF15104_UpdateReceiptPaymentOperationCompleted(object arg) {
            if ((this.F15104_UpdateReceiptPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15104_UpdateReceiptPaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15004_GetAgencyDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15004_GetAgencyDetails(int agencyID) {
            object[] results = this.Invoke("F15004_GetAgencyDetails", new object[] {
                        agencyID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15004_GetAgencyDetailsAsync(int agencyID) {
            this.F15004_GetAgencyDetailsAsync(agencyID, null);
        }
        
        /// <remarks/>
        public void F15004_GetAgencyDetailsAsync(int agencyID, object userState) {
            if ((this.F15004_GetAgencyDetailsOperationCompleted == null)) {
                this.F15004_GetAgencyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15004_GetAgencyDetailsOperationCompleted);
            }
            this.InvokeAsync("F15004_GetAgencyDetails", new object[] {
                        agencyID}, this.F15004_GetAgencyDetailsOperationCompleted, userState);
        }
        
        private void OnF15004_GetAgencyDetailsOperationCompleted(object arg) {
            if ((this.F15004_GetAgencyDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15004_GetAgencyDetailsCompleted(this, new F15004_GetAgencyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15004_CheckDuplicateAgency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F15004_CheckDuplicateAgency(int agencyID, string agencyName) {
            object[] results = this.Invoke("F15004_CheckDuplicateAgency", new object[] {
                        agencyID,
                        agencyName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F15004_CheckDuplicateAgencyAsync(int agencyID, string agencyName) {
            this.F15004_CheckDuplicateAgencyAsync(agencyID, agencyName, null);
        }
        
        /// <remarks/>
        public void F15004_CheckDuplicateAgencyAsync(int agencyID, string agencyName, object userState) {
            if ((this.F15004_CheckDuplicateAgencyOperationCompleted == null)) {
                this.F15004_CheckDuplicateAgencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15004_CheckDuplicateAgencyOperationCompleted);
            }
            this.InvokeAsync("F15004_CheckDuplicateAgency", new object[] {
                        agencyID,
                        agencyName}, this.F15004_CheckDuplicateAgencyOperationCompleted, userState);
        }
        
        private void OnF15004_CheckDuplicateAgencyOperationCompleted(object arg) {
            if ((this.F15004_CheckDuplicateAgencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15004_CheckDuplicateAgencyCompleted(this, new F15004_CheckDuplicateAgencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15004_CreateOrEditAgencyDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F15004_CreateOrEditAgencyDetails(int agencyID, string acctEmelemts) {
            object[] results = this.Invoke("F15004_CreateOrEditAgencyDetails", new object[] {
                        agencyID,
                        acctEmelemts});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F15004_CreateOrEditAgencyDetailsAsync(int agencyID, string acctEmelemts) {
            this.F15004_CreateOrEditAgencyDetailsAsync(agencyID, acctEmelemts, null);
        }
        
        /// <remarks/>
        public void F15004_CreateOrEditAgencyDetailsAsync(int agencyID, string acctEmelemts, object userState) {
            if ((this.F15004_CreateOrEditAgencyDetailsOperationCompleted == null)) {
                this.F15004_CreateOrEditAgencyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15004_CreateOrEditAgencyDetailsOperationCompleted);
            }
            this.InvokeAsync("F15004_CreateOrEditAgencyDetails", new object[] {
                        agencyID,
                        acctEmelemts}, this.F15004_CreateOrEditAgencyDetailsOperationCompleted, userState);
        }
        
        private void OnF15004_CreateOrEditAgencyDetailsOperationCompleted(object arg) {
            if ((this.F15004_CreateOrEditAgencyDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15004_CreateOrEditAgencyDetailsCompleted(this, new F15004_CreateOrEditAgencyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15007_CheckDuplicateAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F15007_CheckDuplicateAccount(int accountId, string acctEmelemts) {
            object[] results = this.Invoke("F15007_CheckDuplicateAccount", new object[] {
                        accountId,
                        acctEmelemts});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F15007_CheckDuplicateAccountAsync(int accountId, string acctEmelemts) {
            this.F15007_CheckDuplicateAccountAsync(accountId, acctEmelemts, null);
        }
        
        /// <remarks/>
        public void F15007_CheckDuplicateAccountAsync(int accountId, string acctEmelemts, object userState) {
            if ((this.F15007_CheckDuplicateAccountOperationCompleted == null)) {
                this.F15007_CheckDuplicateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15007_CheckDuplicateAccountOperationCompleted);
            }
            this.InvokeAsync("F15007_CheckDuplicateAccount", new object[] {
                        accountId,
                        acctEmelemts}, this.F15007_CheckDuplicateAccountOperationCompleted, userState);
        }
        
        private void OnF15007_CheckDuplicateAccountOperationCompleted(object arg) {
            if ((this.F15007_CheckDuplicateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15007_CheckDuplicateAccountCompleted(this, new F15007_CheckDuplicateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9038_LoadLayoutInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F9038_LoadLayoutInformation(int queryViewID, int userID) {
            object[] results = this.Invoke("F9038_LoadLayoutInformation", new object[] {
                        queryViewID,
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F9038_LoadLayoutInformationAsync(int queryViewID, int userID) {
            this.F9038_LoadLayoutInformationAsync(queryViewID, userID, null);
        }
        
        /// <remarks/>
        public void F9038_LoadLayoutInformationAsync(int queryViewID, int userID, object userState) {
            if ((this.F9038_LoadLayoutInformationOperationCompleted == null)) {
                this.F9038_LoadLayoutInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9038_LoadLayoutInformationOperationCompleted);
            }
            this.InvokeAsync("F9038_LoadLayoutInformation", new object[] {
                        queryViewID,
                        userID}, this.F9038_LoadLayoutInformationOperationCompleted, userState);
        }
        
        private void OnF9038_LoadLayoutInformationOperationCompleted(object arg) {
            if ((this.F9038_LoadLayoutInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9038_LoadLayoutInformationCompleted(this, new F9038_LoadLayoutInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9038_DeleteLayoutInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F9038_DeleteLayoutInformation(int queryLayoutID) {
            this.Invoke("F9038_DeleteLayoutInformation", new object[] {
                        queryLayoutID});
        }
        
        /// <remarks/>
        public void F9038_DeleteLayoutInformationAsync(int queryLayoutID) {
            this.F9038_DeleteLayoutInformationAsync(queryLayoutID, null);
        }
        
        /// <remarks/>
        public void F9038_DeleteLayoutInformationAsync(int queryLayoutID, object userState) {
            if ((this.F9038_DeleteLayoutInformationOperationCompleted == null)) {
                this.F9038_DeleteLayoutInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9038_DeleteLayoutInformationOperationCompleted);
            }
            this.InvokeAsync("F9038_DeleteLayoutInformation", new object[] {
                        queryLayoutID}, this.F9038_DeleteLayoutInformationOperationCompleted, userState);
        }
        
        private void OnF9038_DeleteLayoutInformationOperationCompleted(object arg) {
            if ((this.F9038_DeleteLayoutInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9038_DeleteLayoutInformationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9038_SaveLayoutInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F9038_SaveLayoutInformation(int queryLayoutID, string layoutManagement, string layoutXML) {
            object[] results = this.Invoke("F9038_SaveLayoutInformation", new object[] {
                        queryLayoutID,
                        layoutManagement,
                        layoutXML});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F9038_SaveLayoutInformationAsync(int queryLayoutID, string layoutManagement, string layoutXML) {
            this.F9038_SaveLayoutInformationAsync(queryLayoutID, layoutManagement, layoutXML, null);
        }
        
        /// <remarks/>
        public void F9038_SaveLayoutInformationAsync(int queryLayoutID, string layoutManagement, string layoutXML, object userState) {
            if ((this.F9038_SaveLayoutInformationOperationCompleted == null)) {
                this.F9038_SaveLayoutInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9038_SaveLayoutInformationOperationCompleted);
            }
            this.InvokeAsync("F9038_SaveLayoutInformation", new object[] {
                        queryLayoutID,
                        layoutManagement,
                        layoutXML}, this.F9038_SaveLayoutInformationOperationCompleted, userState);
        }
        
        private void OnF9038_SaveLayoutInformationOperationCompleted(object arg) {
            if ((this.F9038_SaveLayoutInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9038_SaveLayoutInformationCompleted(this, new F9038_SaveLayoutInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9001_GetNextWorkingDay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime F9001_GetNextWorkingDay() {
            object[] results = this.Invoke("F9001_GetNextWorkingDay", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void F9001_GetNextWorkingDayAsync() {
            this.F9001_GetNextWorkingDayAsync(null);
        }
        
        /// <remarks/>
        public void F9001_GetNextWorkingDayAsync(object userState) {
            if ((this.F9001_GetNextWorkingDayOperationCompleted == null)) {
                this.F9001_GetNextWorkingDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9001_GetNextWorkingDayOperationCompleted);
            }
            this.InvokeAsync("F9001_GetNextWorkingDay", new object[0], this.F9001_GetNextWorkingDayOperationCompleted, userState);
        }
        
        private void OnF9001_GetNextWorkingDayOperationCompleted(object arg) {
            if ((this.F9001_GetNextWorkingDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9001_GetNextWorkingDayCompleted(this, new F9001_GetNextWorkingDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15003_GetFundSubFundDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15003_GetFundSubFundDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fundId) {
            object[] results = this.Invoke("F15003_GetFundSubFundDetails", new object[] {
                        fundId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15003_GetFundSubFundDetailsAsync(System.Nullable<int> fundId) {
            this.F15003_GetFundSubFundDetailsAsync(fundId, null);
        }
        
        /// <remarks/>
        public void F15003_GetFundSubFundDetailsAsync(System.Nullable<int> fundId, object userState) {
            if ((this.F15003_GetFundSubFundDetailsOperationCompleted == null)) {
                this.F15003_GetFundSubFundDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15003_GetFundSubFundDetailsOperationCompleted);
            }
            this.InvokeAsync("F15003_GetFundSubFundDetails", new object[] {
                        fundId}, this.F15003_GetFundSubFundDetailsOperationCompleted, userState);
        }
        
        private void OnF15003_GetFundSubFundDetailsOperationCompleted(object arg) {
            if ((this.F15003_GetFundSubFundDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15003_GetFundSubFundDetailsCompleted(this, new F15003_GetFundSubFundDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15003_ListAvailableSubFunds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15003_ListAvailableSubFunds(string subFund, string description, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> rollYear, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fundId) {
            object[] results = this.Invoke("F15003_ListAvailableSubFunds", new object[] {
                        subFund,
                        description,
                        rollYear,
                        fundId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15003_ListAvailableSubFundsAsync(string subFund, string description, System.Nullable<int> rollYear, System.Nullable<int> fundId) {
            this.F15003_ListAvailableSubFundsAsync(subFund, description, rollYear, fundId, null);
        }
        
        /// <remarks/>
        public void F15003_ListAvailableSubFundsAsync(string subFund, string description, System.Nullable<int> rollYear, System.Nullable<int> fundId, object userState) {
            if ((this.F15003_ListAvailableSubFundsOperationCompleted == null)) {
                this.F15003_ListAvailableSubFundsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15003_ListAvailableSubFundsOperationCompleted);
            }
            this.InvokeAsync("F15003_ListAvailableSubFunds", new object[] {
                        subFund,
                        description,
                        rollYear,
                        fundId}, this.F15003_ListAvailableSubFundsOperationCompleted, userState);
        }
        
        private void OnF15003_ListAvailableSubFundsOperationCompleted(object arg) {
            if ((this.F15003_ListAvailableSubFundsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15003_ListAvailableSubFundsCompleted(this, new F15003_ListAvailableSubFundsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15003_ListFundType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15003_ListFundType() {
            object[] results = this.Invoke("F15003_ListFundType", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15003_ListFundTypeAsync() {
            this.F15003_ListFundTypeAsync(null);
        }
        
        /// <remarks/>
        public void F15003_ListFundTypeAsync(object userState) {
            if ((this.F15003_ListFundTypeOperationCompleted == null)) {
                this.F15003_ListFundTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15003_ListFundTypeOperationCompleted);
            }
            this.InvokeAsync("F15003_ListFundType", new object[0], this.F15003_ListFundTypeOperationCompleted, userState);
        }
        
        private void OnF15003_ListFundTypeOperationCompleted(object arg) {
            if ((this.F15003_ListFundTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15003_ListFundTypeCompleted(this, new F15003_ListFundTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15003_CheckFund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F15003_CheckFund([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fundId, string fund, int rollYear) {
            object[] results = this.Invoke("F15003_CheckFund", new object[] {
                        fundId,
                        fund,
                        rollYear});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F15003_CheckFundAsync(System.Nullable<int> fundId, string fund, int rollYear) {
            this.F15003_CheckFundAsync(fundId, fund, rollYear, null);
        }
        
        /// <remarks/>
        public void F15003_CheckFundAsync(System.Nullable<int> fundId, string fund, int rollYear, object userState) {
            if ((this.F15003_CheckFundOperationCompleted == null)) {
                this.F15003_CheckFundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15003_CheckFundOperationCompleted);
            }
            this.InvokeAsync("F15003_CheckFund", new object[] {
                        fundId,
                        fund,
                        rollYear}, this.F15003_CheckFundOperationCompleted, userState);
        }
        
        private void OnF15003_CheckFundOperationCompleted(object arg) {
            if ((this.F15003_CheckFundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15003_CheckFundCompleted(this, new F15003_CheckFundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15003_CreateOrEditFundMgmt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F15003_CreateOrEditFundMgmt([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fundId, string fund, int rollYear, string description, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fundGroupId, string fundItems) {
            object[] results = this.Invoke("F15003_CreateOrEditFundMgmt", new object[] {
                        fundId,
                        fund,
                        rollYear,
                        description,
                        fundGroupId,
                        fundItems});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F15003_CreateOrEditFundMgmtAsync(System.Nullable<int> fundId, string fund, int rollYear, string description, System.Nullable<int> fundGroupId, string fundItems) {
            this.F15003_CreateOrEditFundMgmtAsync(fundId, fund, rollYear, description, fundGroupId, fundItems, null);
        }
        
        /// <remarks/>
        public void F15003_CreateOrEditFundMgmtAsync(System.Nullable<int> fundId, string fund, int rollYear, string description, System.Nullable<int> fundGroupId, string fundItems, object userState) {
            if ((this.F15003_CreateOrEditFundMgmtOperationCompleted == null)) {
                this.F15003_CreateOrEditFundMgmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15003_CreateOrEditFundMgmtOperationCompleted);
            }
            this.InvokeAsync("F15003_CreateOrEditFundMgmt", new object[] {
                        fundId,
                        fund,
                        rollYear,
                        description,
                        fundGroupId,
                        fundItems}, this.F15003_CreateOrEditFundMgmtOperationCompleted, userState);
        }
        
        private void OnF15003_CreateOrEditFundMgmtOperationCompleted(object arg) {
            if ((this.F15003_CreateOrEditFundMgmtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15003_CreateOrEditFundMgmtCompleted(this, new F15003_CreateOrEditFundMgmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15012_GetExciseReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15012_GetExciseReceipt(int statementId) {
            object[] results = this.Invoke("F15012_GetExciseReceipt", new object[] {
                        statementId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15012_GetExciseReceiptAsync(int statementId) {
            this.F15012_GetExciseReceiptAsync(statementId, null);
        }
        
        /// <remarks/>
        public void F15012_GetExciseReceiptAsync(int statementId, object userState) {
            if ((this.F15012_GetExciseReceiptOperationCompleted == null)) {
                this.F15012_GetExciseReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15012_GetExciseReceiptOperationCompleted);
            }
            this.InvokeAsync("F15012_GetExciseReceipt", new object[] {
                        statementId}, this.F15012_GetExciseReceiptOperationCompleted, userState);
        }
        
        private void OnF15012_GetExciseReceiptOperationCompleted(object arg) {
            if ((this.F15012_GetExciseReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15012_GetExciseReceiptCompleted(this, new F15012_GetExciseReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15011_GetExciseStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15011_GetExciseStatement(int statementId) {
            object[] results = this.Invoke("F15011_GetExciseStatement", new object[] {
                        statementId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15011_GetExciseStatementAsync(int statementId) {
            this.F15011_GetExciseStatementAsync(statementId, null);
        }
        
        /// <remarks/>
        public void F15011_GetExciseStatementAsync(int statementId, object userState) {
            if ((this.F15011_GetExciseStatementOperationCompleted == null)) {
                this.F15011_GetExciseStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15011_GetExciseStatementOperationCompleted);
            }
            this.InvokeAsync("F15011_GetExciseStatement", new object[] {
                        statementId}, this.F15011_GetExciseStatementOperationCompleted, userState);
        }
        
        private void OnF15011_GetExciseStatementOperationCompleted(object arg) {
            if ((this.F15011_GetExciseStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15011_GetExciseStatementCompleted(this, new F15011_GetExciseStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15011_SaveExciseStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F15011_SaveExciseStatement(int statementId, System.DateTime interestDate, System.DateTime receiptDate) {
            this.Invoke("F15011_SaveExciseStatement", new object[] {
                        statementId,
                        interestDate,
                        receiptDate});
        }
        
        /// <remarks/>
        public void F15011_SaveExciseStatementAsync(int statementId, System.DateTime interestDate, System.DateTime receiptDate) {
            this.F15011_SaveExciseStatementAsync(statementId, interestDate, receiptDate, null);
        }
        
        /// <remarks/>
        public void F15011_SaveExciseStatementAsync(int statementId, System.DateTime interestDate, System.DateTime receiptDate, object userState) {
            if ((this.F15011_SaveExciseStatementOperationCompleted == null)) {
                this.F15011_SaveExciseStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15011_SaveExciseStatementOperationCompleted);
            }
            this.InvokeAsync("F15011_SaveExciseStatement", new object[] {
                        statementId,
                        interestDate,
                        receiptDate}, this.F15011_SaveExciseStatementOperationCompleted, userState);
        }
        
        private void OnF15011_SaveExciseStatementOperationCompleted(object arg) {
            if ((this.F15011_SaveExciseStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15011_SaveExciseStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15010_GetExciseIndividualType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15010_GetExciseIndividualType() {
            object[] results = this.Invoke("F15010_GetExciseIndividualType", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15010_GetExciseIndividualTypeAsync() {
            this.F15010_GetExciseIndividualTypeAsync(null);
        }
        
        /// <remarks/>
        public void F15010_GetExciseIndividualTypeAsync(object userState) {
            if ((this.F15010_GetExciseIndividualTypeOperationCompleted == null)) {
                this.F15010_GetExciseIndividualTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15010_GetExciseIndividualTypeOperationCompleted);
            }
            this.InvokeAsync("F15010_GetExciseIndividualType", new object[0], this.F15010_GetExciseIndividualTypeOperationCompleted, userState);
        }
        
        private void OnF15010_GetExciseIndividualTypeOperationCompleted(object arg) {
            if ((this.F15010_GetExciseIndividualTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15010_GetExciseIndividualTypeCompleted(this, new F15010_GetExciseIndividualTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15010_GetExciseTaxAffidavitDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15010_GetExciseTaxAffidavitDetails(int statementID) {
            object[] results = this.Invoke("F15010_GetExciseTaxAffidavitDetails", new object[] {
                        statementID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15010_GetExciseTaxAffidavitDetailsAsync(int statementID) {
            this.F15010_GetExciseTaxAffidavitDetailsAsync(statementID, null);
        }
        
        /// <remarks/>
        public void F15010_GetExciseTaxAffidavitDetailsAsync(int statementID, object userState) {
            if ((this.F15010_GetExciseTaxAffidavitDetailsOperationCompleted == null)) {
                this.F15010_GetExciseTaxAffidavitDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15010_GetExciseTaxAffidavitDetailsOperationCompleted);
            }
            this.InvokeAsync("F15010_GetExciseTaxAffidavitDetails", new object[] {
                        statementID}, this.F15010_GetExciseTaxAffidavitDetailsOperationCompleted, userState);
        }
        
        private void OnF15010_GetExciseTaxAffidavitDetailsOperationCompleted(object arg) {
            if ((this.F15010_GetExciseTaxAffidavitDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15010_GetExciseTaxAffidavitDetailsCompleted(this, new F15010_GetExciseTaxAffidavitDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15010_GetExciseTaxAffidavitCalulateAmountDue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15010_GetExciseTaxAffidavitCalulateAmountDue(System.DateTime saleDate, System.DateTime paymentDate, int exciseRateID, int taxCode, double taxableSaleAmount) {
            object[] results = this.Invoke("F15010_GetExciseTaxAffidavitCalulateAmountDue", new object[] {
                        saleDate,
                        paymentDate,
                        exciseRateID,
                        taxCode,
                        taxableSaleAmount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15010_GetExciseTaxAffidavitCalulateAmountDueAsync(System.DateTime saleDate, System.DateTime paymentDate, int exciseRateID, int taxCode, double taxableSaleAmount) {
            this.F15010_GetExciseTaxAffidavitCalulateAmountDueAsync(saleDate, paymentDate, exciseRateID, taxCode, taxableSaleAmount, null);
        }
        
        /// <remarks/>
        public void F15010_GetExciseTaxAffidavitCalulateAmountDueAsync(System.DateTime saleDate, System.DateTime paymentDate, int exciseRateID, int taxCode, double taxableSaleAmount, object userState) {
            if ((this.F15010_GetExciseTaxAffidavitCalulateAmountDueOperationCompleted == null)) {
                this.F15010_GetExciseTaxAffidavitCalulateAmountDueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15010_GetExciseTaxAffidavitCalulateAmountDueOperationCompleted);
            }
            this.InvokeAsync("F15010_GetExciseTaxAffidavitCalulateAmountDue", new object[] {
                        saleDate,
                        paymentDate,
                        exciseRateID,
                        taxCode,
                        taxableSaleAmount}, this.F15010_GetExciseTaxAffidavitCalulateAmountDueOperationCompleted, userState);
        }
        
        private void OnF15010_GetExciseTaxAffidavitCalulateAmountDueOperationCompleted(object arg) {
            if ((this.F15010_GetExciseTaxAffidavitCalulateAmountDueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15010_GetExciseTaxAffidavitCalulateAmountDueCompleted(this, new F15010_GetExciseTaxAffidavitCalulateAmountDueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15010_GetAffidavitStatementId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15010_GetAffidavitStatementId(int formId, string orderField, string orderBy) {
            object[] results = this.Invoke("F15010_GetAffidavitStatementId", new object[] {
                        formId,
                        orderField,
                        orderBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15010_GetAffidavitStatementIdAsync(int formId, string orderField, string orderBy) {
            this.F15010_GetAffidavitStatementIdAsync(formId, orderField, orderBy, null);
        }
        
        /// <remarks/>
        public void F15010_GetAffidavitStatementIdAsync(int formId, string orderField, string orderBy, object userState) {
            if ((this.F15010_GetAffidavitStatementIdOperationCompleted == null)) {
                this.F15010_GetAffidavitStatementIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15010_GetAffidavitStatementIdOperationCompleted);
            }
            this.InvokeAsync("F15010_GetAffidavitStatementId", new object[] {
                        formId,
                        orderField,
                        orderBy}, this.F15010_GetAffidavitStatementIdOperationCompleted, userState);
        }
        
        private void OnF15010_GetAffidavitStatementIdOperationCompleted(object arg) {
            if ((this.F15010_GetAffidavitStatementIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15010_GetAffidavitStatementIdCompleted(this, new F15010_GetAffidavitStatementIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15010_SaveAffiDavitDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F15010_SaveAffiDavitDetails(int statementId, string partiesAddress, string parcelDetails, string exciseAffidavitDetails) {
            object[] results = this.Invoke("F15010_SaveAffiDavitDetails", new object[] {
                        statementId,
                        partiesAddress,
                        parcelDetails,
                        exciseAffidavitDetails});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F15010_SaveAffiDavitDetailsAsync(int statementId, string partiesAddress, string parcelDetails, string exciseAffidavitDetails) {
            this.F15010_SaveAffiDavitDetailsAsync(statementId, partiesAddress, parcelDetails, exciseAffidavitDetails, null);
        }
        
        /// <remarks/>
        public void F15010_SaveAffiDavitDetailsAsync(int statementId, string partiesAddress, string parcelDetails, string exciseAffidavitDetails, object userState) {
            if ((this.F15010_SaveAffiDavitDetailsOperationCompleted == null)) {
                this.F15010_SaveAffiDavitDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15010_SaveAffiDavitDetailsOperationCompleted);
            }
            this.InvokeAsync("F15010_SaveAffiDavitDetails", new object[] {
                        statementId,
                        partiesAddress,
                        parcelDetails,
                        exciseAffidavitDetails}, this.F15010_SaveAffiDavitDetailsOperationCompleted, userState);
        }
        
        private void OnF15010_SaveAffiDavitDetailsOperationCompleted(object arg) {
            if ((this.F15010_SaveAffiDavitDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15010_SaveAffiDavitDetailsCompleted(this, new F15010_SaveAffiDavitDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15010_GetOwnerDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15010_GetOwnerDetails(int ownerId) {
            object[] results = this.Invoke("F15010_GetOwnerDetails", new object[] {
                        ownerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15010_GetOwnerDetailsAsync(int ownerId) {
            this.F15010_GetOwnerDetailsAsync(ownerId, null);
        }
        
        /// <remarks/>
        public void F15010_GetOwnerDetailsAsync(int ownerId, object userState) {
            if ((this.F15010_GetOwnerDetailsOperationCompleted == null)) {
                this.F15010_GetOwnerDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15010_GetOwnerDetailsOperationCompleted);
            }
            this.InvokeAsync("F15010_GetOwnerDetails", new object[] {
                        ownerId}, this.F15010_GetOwnerDetailsOperationCompleted, userState);
        }
        
        private void OnF15010_GetOwnerDetailsOperationCompleted(object arg) {
            if ((this.F15010_GetOwnerDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15010_GetOwnerDetailsCompleted(this, new F15010_GetOwnerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15010_GetDistrictSelection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15010_GetDistrictSelection(int exciseRateId) {
            object[] results = this.Invoke("F15010_GetDistrictSelection", new object[] {
                        exciseRateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15010_GetDistrictSelectionAsync(int exciseRateId) {
            this.F15010_GetDistrictSelectionAsync(exciseRateId, null);
        }
        
        /// <remarks/>
        public void F15010_GetDistrictSelectionAsync(int exciseRateId, object userState) {
            if ((this.F15010_GetDistrictSelectionOperationCompleted == null)) {
                this.F15010_GetDistrictSelectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15010_GetDistrictSelectionOperationCompleted);
            }
            this.InvokeAsync("F15010_GetDistrictSelection", new object[] {
                        exciseRateId}, this.F15010_GetDistrictSelectionOperationCompleted, userState);
        }
        
        private void OnF15010_GetDistrictSelectionOperationCompleted(object arg) {
            if ((this.F15010_GetDistrictSelectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15010_GetDistrictSelectionCompleted(this, new F15010_GetDistrictSelectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15010_DeleteAffidavitDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F15010_DeleteAffidavitDetails(int statementID) {
            this.Invoke("F15010_DeleteAffidavitDetails", new object[] {
                        statementID});
        }
        
        /// <remarks/>
        public void F15010_DeleteAffidavitDetailsAsync(int statementID) {
            this.F15010_DeleteAffidavitDetailsAsync(statementID, null);
        }
        
        /// <remarks/>
        public void F15010_DeleteAffidavitDetailsAsync(int statementID, object userState) {
            if ((this.F15010_DeleteAffidavitDetailsOperationCompleted == null)) {
                this.F15010_DeleteAffidavitDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15010_DeleteAffidavitDetailsOperationCompleted);
            }
            this.InvokeAsync("F15010_DeleteAffidavitDetails", new object[] {
                        statementID}, this.F15010_DeleteAffidavitDetailsOperationCompleted, userState);
        }
        
        private void OnF15010_DeleteAffidavitDetailsOperationCompleted(object arg) {
            if ((this.F15010_DeleteAffidavitDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15010_DeleteAffidavitDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15013_GetExciseTaxRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15013_GetExciseTaxRate(int exciseRateId) {
            object[] results = this.Invoke("F15013_GetExciseTaxRate", new object[] {
                        exciseRateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15013_GetExciseTaxRateAsync(int exciseRateId) {
            this.F15013_GetExciseTaxRateAsync(exciseRateId, null);
        }
        
        /// <remarks/>
        public void F15013_GetExciseTaxRateAsync(int exciseRateId, object userState) {
            if ((this.F15013_GetExciseTaxRateOperationCompleted == null)) {
                this.F15013_GetExciseTaxRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15013_GetExciseTaxRateOperationCompleted);
            }
            this.InvokeAsync("F15013_GetExciseTaxRate", new object[] {
                        exciseRateId}, this.F15013_GetExciseTaxRateOperationCompleted, userState);
        }
        
        private void OnF15013_GetExciseTaxRateOperationCompleted(object arg) {
            if ((this.F15013_GetExciseTaxRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15013_GetExciseTaxRateCompleted(this, new F15013_GetExciseTaxRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15013_ListExciseTaxRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15013_ListExciseTaxRate() {
            object[] results = this.Invoke("F15013_ListExciseTaxRate", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15013_ListExciseTaxRateAsync() {
            this.F15013_ListExciseTaxRateAsync(null);
        }
        
        /// <remarks/>
        public void F15013_ListExciseTaxRateAsync(object userState) {
            if ((this.F15013_ListExciseTaxRateOperationCompleted == null)) {
                this.F15013_ListExciseTaxRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15013_ListExciseTaxRateOperationCompleted);
            }
            this.InvokeAsync("F15013_ListExciseTaxRate", new object[0], this.F15013_ListExciseTaxRateOperationCompleted, userState);
        }
        
        private void OnF15013_ListExciseTaxRateOperationCompleted(object arg) {
            if ((this.F15013_ListExciseTaxRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15013_ListExciseTaxRateCompleted(this, new F15013_ListExciseTaxRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15013_SaveExciseTaxRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F15013_SaveExciseTaxRate(int exciseRateId, string exciseTaxDetails) {
            object[] results = this.Invoke("F15013_SaveExciseTaxRate", new object[] {
                        exciseRateId,
                        exciseTaxDetails});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F15013_SaveExciseTaxRateAsync(int exciseRateId, string exciseTaxDetails) {
            this.F15013_SaveExciseTaxRateAsync(exciseRateId, exciseTaxDetails, null);
        }
        
        /// <remarks/>
        public void F15013_SaveExciseTaxRateAsync(int exciseRateId, string exciseTaxDetails, object userState) {
            if ((this.F15013_SaveExciseTaxRateOperationCompleted == null)) {
                this.F15013_SaveExciseTaxRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15013_SaveExciseTaxRateOperationCompleted);
            }
            this.InvokeAsync("F15013_SaveExciseTaxRate", new object[] {
                        exciseRateId,
                        exciseTaxDetails}, this.F15013_SaveExciseTaxRateOperationCompleted, userState);
        }
        
        private void OnF15013_SaveExciseTaxRateOperationCompleted(object arg) {
            if ((this.F15013_SaveExciseTaxRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15013_SaveExciseTaxRateCompleted(this, new F15013_SaveExciseTaxRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15013_DeleteExciseTaxRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F15013_DeleteExciseTaxRate(int exciseRateId) {
            object[] results = this.Invoke("F15013_DeleteExciseTaxRate", new object[] {
                        exciseRateId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F15013_DeleteExciseTaxRateAsync(int exciseRateId) {
            this.F15013_DeleteExciseTaxRateAsync(exciseRateId, null);
        }
        
        /// <remarks/>
        public void F15013_DeleteExciseTaxRateAsync(int exciseRateId, object userState) {
            if ((this.F15013_DeleteExciseTaxRateOperationCompleted == null)) {
                this.F15013_DeleteExciseTaxRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15013_DeleteExciseTaxRateOperationCompleted);
            }
            this.InvokeAsync("F15013_DeleteExciseTaxRate", new object[] {
                        exciseRateId}, this.F15013_DeleteExciseTaxRateOperationCompleted, userState);
        }
        
        private void OnF15013_DeleteExciseTaxRateOperationCompleted(object arg) {
            if ((this.F15013_DeleteExciseTaxRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15013_DeleteExciseTaxRateCompleted(this, new F15013_DeleteExciseTaxRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15013_GetDistrictName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15013_GetDistrictName(int districtId) {
            object[] results = this.Invoke("F15013_GetDistrictName", new object[] {
                        districtId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15013_GetDistrictNameAsync(int districtId) {
            this.F15013_GetDistrictNameAsync(districtId, null);
        }
        
        /// <remarks/>
        public void F15013_GetDistrictNameAsync(int districtId, object userState) {
            if ((this.F15013_GetDistrictNameOperationCompleted == null)) {
                this.F15013_GetDistrictNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15013_GetDistrictNameOperationCompleted);
            }
            this.InvokeAsync("F15013_GetDistrictName", new object[] {
                        districtId}, this.F15013_GetDistrictNameOperationCompleted, userState);
        }
        
        private void OnF15013_GetDistrictNameOperationCompleted(object arg) {
            if ((this.F15013_GetDistrictNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15013_GetDistrictNameCompleted(this, new F15013_GetDistrictNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15013_GetAccountName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15013_GetAccountName(int accountId) {
            object[] results = this.Invoke("F15013_GetAccountName", new object[] {
                        accountId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15013_GetAccountNameAsync(int accountId) {
            this.F15013_GetAccountNameAsync(accountId, null);
        }
        
        /// <remarks/>
        public void F15013_GetAccountNameAsync(int accountId, object userState) {
            if ((this.F15013_GetAccountNameOperationCompleted == null)) {
                this.F15013_GetAccountNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15013_GetAccountNameOperationCompleted);
            }
            this.InvokeAsync("F15013_GetAccountName", new object[] {
                        accountId}, this.F15013_GetAccountNameOperationCompleted, userState);
        }
        
        private void OnF15013_GetAccountNameOperationCompleted(object arg) {
            if ((this.F15013_GetAccountNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15013_GetAccountNameCompleted(this, new F15013_GetAccountNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJournalEntryDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetJournalEntryDetails(int receiptId) {
            object[] results = this.Invoke("GetJournalEntryDetails", new object[] {
                        receiptId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetJournalEntryDetailsAsync(int receiptId) {
            this.GetJournalEntryDetailsAsync(receiptId, null);
        }
        
        /// <remarks/>
        public void GetJournalEntryDetailsAsync(int receiptId, object userState) {
            if ((this.GetJournalEntryDetailsOperationCompleted == null)) {
                this.GetJournalEntryDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJournalEntryDetailsOperationCompleted);
            }
            this.InvokeAsync("GetJournalEntryDetails", new object[] {
                        receiptId}, this.GetJournalEntryDetailsOperationCompleted, userState);
        }
        
        private void OnGetJournalEntryDetailsOperationCompleted(object arg) {
            if ((this.GetJournalEntryDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJournalEntryDetailsCompleted(this, new GetJournalEntryDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateJournalEntryDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateJournalEntryDetails(int statementId, int receiptSourceId, string journalItems) {
            object[] results = this.Invoke("UpdateJournalEntryDetails", new object[] {
                        statementId,
                        receiptSourceId,
                        journalItems});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateJournalEntryDetailsAsync(int statementId, int receiptSourceId, string journalItems) {
            this.UpdateJournalEntryDetailsAsync(statementId, receiptSourceId, journalItems, null);
        }
        
        /// <remarks/>
        public void UpdateJournalEntryDetailsAsync(int statementId, int receiptSourceId, string journalItems, object userState) {
            if ((this.UpdateJournalEntryDetailsOperationCompleted == null)) {
                this.UpdateJournalEntryDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateJournalEntryDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateJournalEntryDetails", new object[] {
                        statementId,
                        receiptSourceId,
                        journalItems}, this.UpdateJournalEntryDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateJournalEntryDetailsOperationCompleted(object arg) {
            if ((this.UpdateJournalEntryDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateJournalEntryDetailsCompleted(this, new UpdateJournalEntryDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15019_CheckRollYear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F15019_CheckRollYear(int statementId, int receiptSourceId, string journalItems) {
            object[] results = this.Invoke("F15019_CheckRollYear", new object[] {
                        statementId,
                        receiptSourceId,
                        journalItems});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F15019_CheckRollYearAsync(int statementId, int receiptSourceId, string journalItems) {
            this.F15019_CheckRollYearAsync(statementId, receiptSourceId, journalItems, null);
        }
        
        /// <remarks/>
        public void F15019_CheckRollYearAsync(int statementId, int receiptSourceId, string journalItems, object userState) {
            if ((this.F15019_CheckRollYearOperationCompleted == null)) {
                this.F15019_CheckRollYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15019_CheckRollYearOperationCompleted);
            }
            this.InvokeAsync("F15019_CheckRollYear", new object[] {
                        statementId,
                        receiptSourceId,
                        journalItems}, this.F15019_CheckRollYearOperationCompleted, userState);
        }
        
        private void OnF15019_CheckRollYearOperationCompleted(object arg) {
            if ((this.F15019_CheckRollYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15019_CheckRollYearCompleted(this, new F15019_CheckRollYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9013_ListNextNumberConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F9013_ListNextNumberConfiguration(int rollYear, int userId) {
            object[] results = this.Invoke("F9013_ListNextNumberConfiguration", new object[] {
                        rollYear,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F9013_ListNextNumberConfigurationAsync(int rollYear, int userId) {
            this.F9013_ListNextNumberConfigurationAsync(rollYear, userId, null);
        }
        
        /// <remarks/>
        public void F9013_ListNextNumberConfigurationAsync(int rollYear, int userId, object userState) {
            if ((this.F9013_ListNextNumberConfigurationOperationCompleted == null)) {
                this.F9013_ListNextNumberConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9013_ListNextNumberConfigurationOperationCompleted);
            }
            this.InvokeAsync("F9013_ListNextNumberConfiguration", new object[] {
                        rollYear,
                        userId}, this.F9013_ListNextNumberConfigurationOperationCompleted, userState);
        }
        
        private void OnF9013_ListNextNumberConfigurationOperationCompleted(object arg) {
            if ((this.F9013_ListNextNumberConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9013_ListNextNumberConfigurationCompleted(this, new F9013_ListNextNumberConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9013_CheckNextNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet F9013_CheckNextNumber(int rollYear, int nextNum, string formula) {
            object[] results = this.Invoke("F9013_CheckNextNumber", new object[] {
                        rollYear,
                        nextNum,
                        formula});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void F9013_CheckNextNumberAsync(int rollYear, int nextNum, string formula) {
            this.F9013_CheckNextNumberAsync(rollYear, nextNum, formula, null);
        }
        
        /// <remarks/>
        public void F9013_CheckNextNumberAsync(int rollYear, int nextNum, string formula, object userState) {
            if ((this.F9013_CheckNextNumberOperationCompleted == null)) {
                this.F9013_CheckNextNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9013_CheckNextNumberOperationCompleted);
            }
            this.InvokeAsync("F9013_CheckNextNumber", new object[] {
                        rollYear,
                        nextNum,
                        formula}, this.F9013_CheckNextNumberOperationCompleted, userState);
        }
        
        private void OnF9013_CheckNextNumberOperationCompleted(object arg) {
            if ((this.F9013_CheckNextNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9013_CheckNextNumberCompleted(this, new F9013_CheckNextNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9013_UpdateNextNumberConfigDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F9013_UpdateNextNumberConfigDetails(int nextNumId, int nextNum, string formula) {
            this.Invoke("F9013_UpdateNextNumberConfigDetails", new object[] {
                        nextNumId,
                        nextNum,
                        formula});
        }
        
        /// <remarks/>
        public void F9013_UpdateNextNumberConfigDetailsAsync(int nextNumId, int nextNum, string formula) {
            this.F9013_UpdateNextNumberConfigDetailsAsync(nextNumId, nextNum, formula, null);
        }
        
        /// <remarks/>
        public void F9013_UpdateNextNumberConfigDetailsAsync(int nextNumId, int nextNum, string formula, object userState) {
            if ((this.F9013_UpdateNextNumberConfigDetailsOperationCompleted == null)) {
                this.F9013_UpdateNextNumberConfigDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9013_UpdateNextNumberConfigDetailsOperationCompleted);
            }
            this.InvokeAsync("F9013_UpdateNextNumberConfigDetails", new object[] {
                        nextNumId,
                        nextNum,
                        formula}, this.F9013_UpdateNextNumberConfigDetailsOperationCompleted, userState);
        }
        
        private void OnF9013_UpdateNextNumberConfigDetailsOperationCompleted(object arg) {
            if ((this.F9013_UpdateNextNumberConfigDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9013_UpdateNextNumberConfigDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9013_ListNextNumberRollYear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F9013_ListNextNumberRollYear(int userId) {
            object[] results = this.Invoke("F9013_ListNextNumberRollYear", new object[] {
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F9013_ListNextNumberRollYearAsync(int userId) {
            this.F9013_ListNextNumberRollYearAsync(userId, null);
        }
        
        /// <remarks/>
        public void F9013_ListNextNumberRollYearAsync(int userId, object userState) {
            if ((this.F9013_ListNextNumberRollYearOperationCompleted == null)) {
                this.F9013_ListNextNumberRollYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9013_ListNextNumberRollYearOperationCompleted);
            }
            this.InvokeAsync("F9013_ListNextNumberRollYear", new object[] {
                        userId}, this.F9013_ListNextNumberRollYearOperationCompleted, userState);
        }
        
        private void OnF9013_ListNextNumberRollYearOperationCompleted(object arg) {
            if ((this.F9013_ListNextNumberRollYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9013_ListNextNumberRollYearCompleted(this, new F9013_ListNextNumberRollYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15018_GetMiscReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15018_GetMiscReceipt(int receiptId) {
            object[] results = this.Invoke("F15018_GetMiscReceipt", new object[] {
                        receiptId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15018_GetMiscReceiptAsync(int receiptId) {
            this.F15018_GetMiscReceiptAsync(receiptId, null);
        }
        
        /// <remarks/>
        public void F15018_GetMiscReceiptAsync(int receiptId, object userState) {
            if ((this.F15018_GetMiscReceiptOperationCompleted == null)) {
                this.F15018_GetMiscReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15018_GetMiscReceiptOperationCompleted);
            }
            this.InvokeAsync("F15018_GetMiscReceipt", new object[] {
                        receiptId}, this.F15018_GetMiscReceiptOperationCompleted, userState);
        }
        
        private void OnF15018_GetMiscReceiptOperationCompleted(object arg) {
            if ((this.F15018_GetMiscReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15018_GetMiscReceiptCompleted(this, new F15018_GetMiscReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1021_GetMiscReceiptTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1021_GetMiscReceiptTemplate(int miscTemplateID) {
            object[] results = this.Invoke("F1021_GetMiscReceiptTemplate", new object[] {
                        miscTemplateID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1021_GetMiscReceiptTemplateAsync(int miscTemplateID) {
            this.F1021_GetMiscReceiptTemplateAsync(miscTemplateID, null);
        }
        
        /// <remarks/>
        public void F1021_GetMiscReceiptTemplateAsync(int miscTemplateID, object userState) {
            if ((this.F1021_GetMiscReceiptTemplateOperationCompleted == null)) {
                this.F1021_GetMiscReceiptTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1021_GetMiscReceiptTemplateOperationCompleted);
            }
            this.InvokeAsync("F1021_GetMiscReceiptTemplate", new object[] {
                        miscTemplateID}, this.F1021_GetMiscReceiptTemplateOperationCompleted, userState);
        }
        
        private void OnF1021_GetMiscReceiptTemplateOperationCompleted(object arg) {
            if ((this.F1021_GetMiscReceiptTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1021_GetMiscReceiptTemplateCompleted(this, new F1021_GetMiscReceiptTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1021_SaveMiscReceiptTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1021_SaveMiscReceiptTemplate(string miscTemplateDetails, string templateItems) {
            object[] results = this.Invoke("F1021_SaveMiscReceiptTemplate", new object[] {
                        miscTemplateDetails,
                        templateItems});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1021_SaveMiscReceiptTemplateAsync(string miscTemplateDetails, string templateItems) {
            this.F1021_SaveMiscReceiptTemplateAsync(miscTemplateDetails, templateItems, null);
        }
        
        /// <remarks/>
        public void F1021_SaveMiscReceiptTemplateAsync(string miscTemplateDetails, string templateItems, object userState) {
            if ((this.F1021_SaveMiscReceiptTemplateOperationCompleted == null)) {
                this.F1021_SaveMiscReceiptTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1021_SaveMiscReceiptTemplateOperationCompleted);
            }
            this.InvokeAsync("F1021_SaveMiscReceiptTemplate", new object[] {
                        miscTemplateDetails,
                        templateItems}, this.F1021_SaveMiscReceiptTemplateOperationCompleted, userState);
        }
        
        private void OnF1021_SaveMiscReceiptTemplateOperationCompleted(object arg) {
            if ((this.F1021_SaveMiscReceiptTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1021_SaveMiscReceiptTemplateCompleted(this, new F1021_SaveMiscReceiptTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1022_ListMiscReceiptTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1022_ListMiscReceiptTemplate() {
            object[] results = this.Invoke("F1022_ListMiscReceiptTemplate", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1022_ListMiscReceiptTemplateAsync() {
            this.F1022_ListMiscReceiptTemplateAsync(null);
        }
        
        /// <remarks/>
        public void F1022_ListMiscReceiptTemplateAsync(object userState) {
            if ((this.F1022_ListMiscReceiptTemplateOperationCompleted == null)) {
                this.F1022_ListMiscReceiptTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1022_ListMiscReceiptTemplateOperationCompleted);
            }
            this.InvokeAsync("F1022_ListMiscReceiptTemplate", new object[0], this.F1022_ListMiscReceiptTemplateOperationCompleted, userState);
        }
        
        private void OnF1022_ListMiscReceiptTemplateOperationCompleted(object arg) {
            if ((this.F1022_ListMiscReceiptTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1022_ListMiscReceiptTemplateCompleted(this, new F1022_ListMiscReceiptTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1022_DeleteMiscReceiptTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F1022_DeleteMiscReceiptTemplate(int miscTemplateID) {
            this.Invoke("F1022_DeleteMiscReceiptTemplate", new object[] {
                        miscTemplateID});
        }
        
        /// <remarks/>
        public void F1022_DeleteMiscReceiptTemplateAsync(int miscTemplateID) {
            this.F1022_DeleteMiscReceiptTemplateAsync(miscTemplateID, null);
        }
        
        /// <remarks/>
        public void F1022_DeleteMiscReceiptTemplateAsync(int miscTemplateID, object userState) {
            if ((this.F1022_DeleteMiscReceiptTemplateOperationCompleted == null)) {
                this.F1022_DeleteMiscReceiptTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1022_DeleteMiscReceiptTemplateOperationCompleted);
            }
            this.InvokeAsync("F1022_DeleteMiscReceiptTemplate", new object[] {
                        miscTemplateID}, this.F1022_DeleteMiscReceiptTemplateOperationCompleted, userState);
        }
        
        private void OnF1022_DeleteMiscReceiptTemplateOperationCompleted(object arg) {
            if ((this.F1022_DeleteMiscReceiptTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1022_DeleteMiscReceiptTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1025_ListRollYear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1025_ListRollYear() {
            object[] results = this.Invoke("F1025_ListRollYear", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1025_ListRollYearAsync() {
            this.F1025_ListRollYearAsync(null);
        }
        
        /// <remarks/>
        public void F1025_ListRollYearAsync(object userState) {
            if ((this.F1025_ListRollYearOperationCompleted == null)) {
                this.F1025_ListRollYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1025_ListRollYearOperationCompleted);
            }
            this.InvokeAsync("F1025_ListRollYear", new object[0], this.F1025_ListRollYearOperationCompleted, userState);
        }
        
        private void OnF1025_ListRollYearOperationCompleted(object arg) {
            if ((this.F1025_ListRollYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1025_ListRollYearCompleted(this, new F1025_ListRollYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1025_ListAutoFundTransferDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1025_ListAutoFundTransferDetails(int rollYear) {
            object[] results = this.Invoke("F1025_ListAutoFundTransferDetails", new object[] {
                        rollYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1025_ListAutoFundTransferDetailsAsync(int rollYear) {
            this.F1025_ListAutoFundTransferDetailsAsync(rollYear, null);
        }
        
        /// <remarks/>
        public void F1025_ListAutoFundTransferDetailsAsync(int rollYear, object userState) {
            if ((this.F1025_ListAutoFundTransferDetailsOperationCompleted == null)) {
                this.F1025_ListAutoFundTransferDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1025_ListAutoFundTransferDetailsOperationCompleted);
            }
            this.InvokeAsync("F1025_ListAutoFundTransferDetails", new object[] {
                        rollYear}, this.F1025_ListAutoFundTransferDetailsOperationCompleted, userState);
        }
        
        private void OnF1025_ListAutoFundTransferDetailsOperationCompleted(object arg) {
            if ((this.F1025_ListAutoFundTransferDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1025_ListAutoFundTransferDetailsCompleted(this, new F1025_ListAutoFundTransferDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1025_DeleteAutoFundTransferDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1025_DeleteAutoFundTransferDetails(int autoTransferID) {
            object[] results = this.Invoke("F1025_DeleteAutoFundTransferDetails", new object[] {
                        autoTransferID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1025_DeleteAutoFundTransferDetailsAsync(int autoTransferID) {
            this.F1025_DeleteAutoFundTransferDetailsAsync(autoTransferID, null);
        }
        
        /// <remarks/>
        public void F1025_DeleteAutoFundTransferDetailsAsync(int autoTransferID, object userState) {
            if ((this.F1025_DeleteAutoFundTransferDetailsOperationCompleted == null)) {
                this.F1025_DeleteAutoFundTransferDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1025_DeleteAutoFundTransferDetailsOperationCompleted);
            }
            this.InvokeAsync("F1025_DeleteAutoFundTransferDetails", new object[] {
                        autoTransferID}, this.F1025_DeleteAutoFundTransferDetailsOperationCompleted, userState);
        }
        
        private void OnF1025_DeleteAutoFundTransferDetailsOperationCompleted(object arg) {
            if ((this.F1025_DeleteAutoFundTransferDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1025_DeleteAutoFundTransferDetailsCompleted(this, new F1025_DeleteAutoFundTransferDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1025_UpdateAutoFundTransferDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1025_UpdateAutoFundTransferDetails(string autoFundItems) {
            object[] results = this.Invoke("F1025_UpdateAutoFundTransferDetails", new object[] {
                        autoFundItems});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1025_UpdateAutoFundTransferDetailsAsync(string autoFundItems) {
            this.F1025_UpdateAutoFundTransferDetailsAsync(autoFundItems, null);
        }
        
        /// <remarks/>
        public void F1025_UpdateAutoFundTransferDetailsAsync(string autoFundItems, object userState) {
            if ((this.F1025_UpdateAutoFundTransferDetailsOperationCompleted == null)) {
                this.F1025_UpdateAutoFundTransferDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1025_UpdateAutoFundTransferDetailsOperationCompleted);
            }
            this.InvokeAsync("F1025_UpdateAutoFundTransferDetails", new object[] {
                        autoFundItems}, this.F1025_UpdateAutoFundTransferDetailsOperationCompleted, userState);
        }
        
        private void OnF1025_UpdateAutoFundTransferDetailsOperationCompleted(object arg) {
            if ((this.F1025_UpdateAutoFundTransferDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1025_UpdateAutoFundTransferDetailsCompleted(this, new F1025_UpdateAutoFundTransferDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1025_CheckRollYear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1025_CheckRollYear(string autoFundItems) {
            object[] results = this.Invoke("F1025_CheckRollYear", new object[] {
                        autoFundItems});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1025_CheckRollYearAsync(string autoFundItems) {
            this.F1025_CheckRollYearAsync(autoFundItems, null);
        }
        
        /// <remarks/>
        public void F1025_CheckRollYearAsync(string autoFundItems, object userState) {
            if ((this.F1025_CheckRollYearOperationCompleted == null)) {
                this.F1025_CheckRollYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1025_CheckRollYearOperationCompleted);
            }
            this.InvokeAsync("F1025_CheckRollYear", new object[] {
                        autoFundItems}, this.F1025_CheckRollYearOperationCompleted, userState);
        }
        
        private void OnF1025_CheckRollYearOperationCompleted(object arg) {
            if ((this.F1025_CheckRollYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1025_CheckRollYearCompleted(this, new F1025_CheckRollYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RdlToCode_Get", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RdlToCode_Get(RdlToCodeData.ParameterDataDataTable parameterData, string formId) {
            object[] results = this.Invoke("RdlToCode_Get", new object[] {
                        parameterData,
                        formId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RdlToCode_GetAsync(RdlToCodeData.ParameterDataDataTable parameterData, string formId) {
            this.RdlToCode_GetAsync(parameterData, formId, null);
        }
        
        /// <remarks/>
        public void RdlToCode_GetAsync(RdlToCodeData.ParameterDataDataTable parameterData, string formId, object userState) {
            if ((this.RdlToCode_GetOperationCompleted == null)) {
                this.RdlToCode_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRdlToCode_GetOperationCompleted);
            }
            this.InvokeAsync("RdlToCode_Get", new object[] {
                        parameterData,
                        formId}, this.RdlToCode_GetOperationCompleted, userState);
        }
        
        private void OnRdlToCode_GetOperationCompleted(object arg) {
            if ((this.RdlToCode_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RdlToCode_GetCompleted(this, new RdlToCode_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RdlToCode_FillCombo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RdlToCode_FillCombo(RdlToCodeData.ParameterDataDataTable parameterData, string entityName) {
            object[] results = this.Invoke("RdlToCode_FillCombo", new object[] {
                        parameterData,
                        entityName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RdlToCode_FillComboAsync(RdlToCodeData.ParameterDataDataTable parameterData, string entityName) {
            this.RdlToCode_FillComboAsync(parameterData, entityName, null);
        }
        
        /// <remarks/>
        public void RdlToCode_FillComboAsync(RdlToCodeData.ParameterDataDataTable parameterData, string entityName, object userState) {
            if ((this.RdlToCode_FillComboOperationCompleted == null)) {
                this.RdlToCode_FillComboOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRdlToCode_FillComboOperationCompleted);
            }
            this.InvokeAsync("RdlToCode_FillCombo", new object[] {
                        parameterData,
                        entityName}, this.RdlToCode_FillComboOperationCompleted, userState);
        }
        
        private void OnRdlToCode_FillComboOperationCompleted(object arg) {
            if ((this.RdlToCode_FillComboCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RdlToCode_FillComboCompleted(this, new RdlToCode_FillComboCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RdlToCode_Save", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RdlToCode_Save(RdlToCodeData.ParameterDataDataTable parameterData, int formId) {
            this.Invoke("RdlToCode_Save", new object[] {
                        parameterData,
                        formId});
        }
        
        /// <remarks/>
        public void RdlToCode_SaveAsync(RdlToCodeData.ParameterDataDataTable parameterData, int formId) {
            this.RdlToCode_SaveAsync(parameterData, formId, null);
        }
        
        /// <remarks/>
        public void RdlToCode_SaveAsync(RdlToCodeData.ParameterDataDataTable parameterData, int formId, object userState) {
            if ((this.RdlToCode_SaveOperationCompleted == null)) {
                this.RdlToCode_SaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRdlToCode_SaveOperationCompleted);
            }
            this.InvokeAsync("RdlToCode_Save", new object[] {
                        parameterData,
                        formId}, this.RdlToCode_SaveOperationCompleted, userState);
        }
        
        private void OnRdlToCode_SaveOperationCompleted(object arg) {
            if ((this.RdlToCode_SaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RdlToCode_SaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RdlToCode_Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RdlToCode_Delete(RdlToCodeData.ParameterDataDataTable parameterData, int formId) {
            this.Invoke("RdlToCode_Delete", new object[] {
                        parameterData,
                        formId});
        }
        
        /// <remarks/>
        public void RdlToCode_DeleteAsync(RdlToCodeData.ParameterDataDataTable parameterData, int formId) {
            this.RdlToCode_DeleteAsync(parameterData, formId, null);
        }
        
        /// <remarks/>
        public void RdlToCode_DeleteAsync(RdlToCodeData.ParameterDataDataTable parameterData, int formId, object userState) {
            if ((this.RdlToCode_DeleteOperationCompleted == null)) {
                this.RdlToCode_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRdlToCode_DeleteOperationCompleted);
            }
            this.InvokeAsync("RdlToCode_Delete", new object[] {
                        parameterData,
                        formId}, this.RdlToCode_DeleteOperationCompleted, userState);
        }
        
        private void OnRdlToCode_DeleteOperationCompleted(object arg) {
            if ((this.RdlToCode_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RdlToCode_DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F27006_ListParcelOwnership", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F27006_ListParcelOwnership(int parcelId) {
            object[] results = this.Invoke("F27006_ListParcelOwnership", new object[] {
                        parcelId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F27006_ListParcelOwnershipAsync(int parcelId) {
            this.F27006_ListParcelOwnershipAsync(parcelId, null);
        }
        
        /// <remarks/>
        public void F27006_ListParcelOwnershipAsync(int parcelId, object userState) {
            if ((this.F27006_ListParcelOwnershipOperationCompleted == null)) {
                this.F27006_ListParcelOwnershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF27006_ListParcelOwnershipOperationCompleted);
            }
            this.InvokeAsync("F27006_ListParcelOwnership", new object[] {
                        parcelId}, this.F27006_ListParcelOwnershipOperationCompleted, userState);
        }
        
        private void OnF27006_ListParcelOwnershipOperationCompleted(object arg) {
            if ((this.F27006_ListParcelOwnershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F27006_ListParcelOwnershipCompleted(this, new F27006_ListParcelOwnershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F27006_ListALLOwnerDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F27006_ListALLOwnerDetails(string firstName, string lastName, string address1, string address2, string city) {
            object[] results = this.Invoke("F27006_ListALLOwnerDetails", new object[] {
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F27006_ListALLOwnerDetailsAsync(string firstName, string lastName, string address1, string address2, string city) {
            this.F27006_ListALLOwnerDetailsAsync(firstName, lastName, address1, address2, city, null);
        }
        
        /// <remarks/>
        public void F27006_ListALLOwnerDetailsAsync(string firstName, string lastName, string address1, string address2, string city, object userState) {
            if ((this.F27006_ListALLOwnerDetailsOperationCompleted == null)) {
                this.F27006_ListALLOwnerDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF27006_ListALLOwnerDetailsOperationCompleted);
            }
            this.InvokeAsync("F27006_ListALLOwnerDetails", new object[] {
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city}, this.F27006_ListALLOwnerDetailsOperationCompleted, userState);
        }
        
        private void OnF27006_ListALLOwnerDetailsOperationCompleted(object arg) {
            if ((this.F27006_ListALLOwnerDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F27006_ListALLOwnerDetailsCompleted(this, new F27006_ListALLOwnerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F27006_SaveParcelOwnership", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F27006_SaveParcelOwnership(string parcelOwnership, int parcelId) {
            this.Invoke("F27006_SaveParcelOwnership", new object[] {
                        parcelOwnership,
                        parcelId});
        }
        
        /// <remarks/>
        public void F27006_SaveParcelOwnershipAsync(string parcelOwnership, int parcelId) {
            this.F27006_SaveParcelOwnershipAsync(parcelOwnership, parcelId, null);
        }
        
        /// <remarks/>
        public void F27006_SaveParcelOwnershipAsync(string parcelOwnership, int parcelId, object userState) {
            if ((this.F27006_SaveParcelOwnershipOperationCompleted == null)) {
                this.F27006_SaveParcelOwnershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF27006_SaveParcelOwnershipOperationCompleted);
            }
            this.InvokeAsync("F27006_SaveParcelOwnership", new object[] {
                        parcelOwnership,
                        parcelId}, this.F27006_SaveParcelOwnershipOperationCompleted, userState);
        }
        
        private void OnF27006_SaveParcelOwnershipOperationCompleted(object arg) {
            if ((this.F27006_SaveParcelOwnershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F27006_SaveParcelOwnershipCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F27006_CheckOwnershipDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F27006_CheckOwnershipDetails(string ownershipDetails) {
            object[] results = this.Invoke("F27006_CheckOwnershipDetails", new object[] {
                        ownershipDetails});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F27006_CheckOwnershipDetailsAsync(string ownershipDetails) {
            this.F27006_CheckOwnershipDetailsAsync(ownershipDetails, null);
        }
        
        /// <remarks/>
        public void F27006_CheckOwnershipDetailsAsync(string ownershipDetails, object userState) {
            if ((this.F27006_CheckOwnershipDetailsOperationCompleted == null)) {
                this.F27006_CheckOwnershipDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF27006_CheckOwnershipDetailsOperationCompleted);
            }
            this.InvokeAsync("F27006_CheckOwnershipDetails", new object[] {
                        ownershipDetails}, this.F27006_CheckOwnershipDetailsOperationCompleted, userState);
        }
        
        private void OnF27006_CheckOwnershipDetailsOperationCompleted(object arg) {
            if ((this.F27006_CheckOwnershipDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F27006_CheckOwnershipDetailsCompleted(this, new F27006_CheckOwnershipDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F25000_GetParcelDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F25000_GetParcelDetails(int parcelId) {
            object[] results = this.Invoke("F25000_GetParcelDetails", new object[] {
                        parcelId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F25000_GetParcelDetailsAsync(int parcelId) {
            this.F25000_GetParcelDetailsAsync(parcelId, null);
        }
        
        /// <remarks/>
        public void F25000_GetParcelDetailsAsync(int parcelId, object userState) {
            if ((this.F25000_GetParcelDetailsOperationCompleted == null)) {
                this.F25000_GetParcelDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF25000_GetParcelDetailsOperationCompleted);
            }
            this.InvokeAsync("F25000_GetParcelDetails", new object[] {
                        parcelId}, this.F25000_GetParcelDetailsOperationCompleted, userState);
        }
        
        private void OnF25000_GetParcelDetailsOperationCompleted(object arg) {
            if ((this.F25000_GetParcelDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F25000_GetParcelDetailsCompleted(this, new F25000_GetParcelDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F35001_GetValueSliceHeader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F35001_GetValueSliceHeader(int valueSliceID) {
            object[] results = this.Invoke("F35001_GetValueSliceHeader", new object[] {
                        valueSliceID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F35001_GetValueSliceHeaderAsync(int valueSliceID) {
            this.F35001_GetValueSliceHeaderAsync(valueSliceID, null);
        }
        
        /// <remarks/>
        public void F35001_GetValueSliceHeaderAsync(int valueSliceID, object userState) {
            if ((this.F35001_GetValueSliceHeaderOperationCompleted == null)) {
                this.F35001_GetValueSliceHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF35001_GetValueSliceHeaderOperationCompleted);
            }
            this.InvokeAsync("F35001_GetValueSliceHeader", new object[] {
                        valueSliceID}, this.F35001_GetValueSliceHeaderOperationCompleted, userState);
        }
        
        private void OnF35001_GetValueSliceHeaderOperationCompleted(object arg) {
            if ((this.F35001_GetValueSliceHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F35001_GetValueSliceHeaderCompleted(this, new F35001_GetValueSliceHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F35001_GetAdjustmentSliceValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F35001_GetAdjustmentSliceValue(int valueSliceID, byte type, bool isvalue, decimal adjustmentValue) {
            object[] results = this.Invoke("F35001_GetAdjustmentSliceValue", new object[] {
                        valueSliceID,
                        type,
                        isvalue,
                        adjustmentValue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F35001_GetAdjustmentSliceValueAsync(int valueSliceID, byte type, bool isvalue, decimal adjustmentValue) {
            this.F35001_GetAdjustmentSliceValueAsync(valueSliceID, type, isvalue, adjustmentValue, null);
        }
        
        /// <remarks/>
        public void F35001_GetAdjustmentSliceValueAsync(int valueSliceID, byte type, bool isvalue, decimal adjustmentValue, object userState) {
            if ((this.F35001_GetAdjustmentSliceValueOperationCompleted == null)) {
                this.F35001_GetAdjustmentSliceValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF35001_GetAdjustmentSliceValueOperationCompleted);
            }
            this.InvokeAsync("F35001_GetAdjustmentSliceValue", new object[] {
                        valueSliceID,
                        type,
                        isvalue,
                        adjustmentValue}, this.F35001_GetAdjustmentSliceValueOperationCompleted, userState);
        }
        
        private void OnF35001_GetAdjustmentSliceValueOperationCompleted(object arg) {
            if ((this.F35001_GetAdjustmentSliceValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F35001_GetAdjustmentSliceValueCompleted(this, new F35001_GetAdjustmentSliceValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F35002_ListAdjustmentType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F35002_ListAdjustmentType() {
            object[] results = this.Invoke("F35002_ListAdjustmentType", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F35002_ListAdjustmentTypeAsync() {
            this.F35002_ListAdjustmentTypeAsync(null);
        }
        
        /// <remarks/>
        public void F35002_ListAdjustmentTypeAsync(object userState) {
            if ((this.F35002_ListAdjustmentTypeOperationCompleted == null)) {
                this.F35002_ListAdjustmentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF35002_ListAdjustmentTypeOperationCompleted);
            }
            this.InvokeAsync("F35002_ListAdjustmentType", new object[0], this.F35002_ListAdjustmentTypeOperationCompleted, userState);
        }
        
        private void OnF35002_ListAdjustmentTypeOperationCompleted(object arg) {
            if ((this.F35002_ListAdjustmentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F35002_ListAdjustmentTypeCompleted(this, new F35002_ListAdjustmentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F35001_DeleteValueSlice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F35001_DeleteValueSlice(int valueSliceID) {
            this.Invoke("F35001_DeleteValueSlice", new object[] {
                        valueSliceID});
        }
        
        /// <remarks/>
        public void F35001_DeleteValueSliceAsync(int valueSliceID) {
            this.F35001_DeleteValueSliceAsync(valueSliceID, null);
        }
        
        /// <remarks/>
        public void F35001_DeleteValueSliceAsync(int valueSliceID, object userState) {
            if ((this.F35001_DeleteValueSliceOperationCompleted == null)) {
                this.F35001_DeleteValueSliceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF35001_DeleteValueSliceOperationCompleted);
            }
            this.InvokeAsync("F35001_DeleteValueSlice", new object[] {
                        valueSliceID}, this.F35001_DeleteValueSliceOperationCompleted, userState);
        }
        
        private void OnF35001_DeleteValueSliceOperationCompleted(object arg) {
            if ((this.F35001_DeleteValueSliceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F35001_DeleteValueSliceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F35000_InsertOrUpdateValueSlice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F35000_InsertOrUpdateValueSlice([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> valueSliceID, string valueSliceHeaderItems) {
            object[] results = this.Invoke("F35000_InsertOrUpdateValueSlice", new object[] {
                        valueSliceID,
                        valueSliceHeaderItems});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F35000_InsertOrUpdateValueSliceAsync(System.Nullable<int> valueSliceID, string valueSliceHeaderItems) {
            this.F35000_InsertOrUpdateValueSliceAsync(valueSliceID, valueSliceHeaderItems, null);
        }
        
        /// <remarks/>
        public void F35000_InsertOrUpdateValueSliceAsync(System.Nullable<int> valueSliceID, string valueSliceHeaderItems, object userState) {
            if ((this.F35000_InsertOrUpdateValueSliceOperationCompleted == null)) {
                this.F35000_InsertOrUpdateValueSliceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF35000_InsertOrUpdateValueSliceOperationCompleted);
            }
            this.InvokeAsync("F35000_InsertOrUpdateValueSlice", new object[] {
                        valueSliceID,
                        valueSliceHeaderItems}, this.F35000_InsertOrUpdateValueSliceOperationCompleted, userState);
        }
        
        private void OnF35000_InsertOrUpdateValueSliceOperationCompleted(object arg) {
            if ((this.F35000_InsertOrUpdateValueSliceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F35000_InsertOrUpdateValueSliceCompleted(this, new F35000_InsertOrUpdateValueSliceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F35000_GetAppraisalSummaryObjects", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F35000_GetAppraisalSummaryObjects(int parcelId) {
            object[] results = this.Invoke("F35000_GetAppraisalSummaryObjects", new object[] {
                        parcelId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F35000_GetAppraisalSummaryObjectsAsync(int parcelId) {
            this.F35000_GetAppraisalSummaryObjectsAsync(parcelId, null);
        }
        
        /// <remarks/>
        public void F35000_GetAppraisalSummaryObjectsAsync(int parcelId, object userState) {
            if ((this.F35000_GetAppraisalSummaryObjectsOperationCompleted == null)) {
                this.F35000_GetAppraisalSummaryObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF35000_GetAppraisalSummaryObjectsOperationCompleted);
            }
            this.InvokeAsync("F35000_GetAppraisalSummaryObjects", new object[] {
                        parcelId}, this.F35000_GetAppraisalSummaryObjectsOperationCompleted, userState);
        }
        
        private void OnF35000_GetAppraisalSummaryObjectsOperationCompleted(object arg) {
            if ((this.F35000_GetAppraisalSummaryObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F35000_GetAppraisalSummaryObjectsCompleted(this, new F35000_GetAppraisalSummaryObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F35000_InsertObject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F35000_InsertObject(int parcelID, short objectTypeID, string description) {
            object[] results = this.Invoke("F35000_InsertObject", new object[] {
                        parcelID,
                        objectTypeID,
                        description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F35000_InsertObjectAsync(int parcelID, short objectTypeID, string description) {
            this.F35000_InsertObjectAsync(parcelID, objectTypeID, description, null);
        }
        
        /// <remarks/>
        public void F35000_InsertObjectAsync(int parcelID, short objectTypeID, string description, object userState) {
            if ((this.F35000_InsertObjectOperationCompleted == null)) {
                this.F35000_InsertObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF35000_InsertObjectOperationCompleted);
            }
            this.InvokeAsync("F35000_InsertObject", new object[] {
                        parcelID,
                        objectTypeID,
                        description}, this.F35000_InsertObjectOperationCompleted, userState);
        }
        
        private void OnF35000_InsertObjectOperationCompleted(object arg) {
            if ((this.F35000_InsertObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F35000_InsertObjectCompleted(this, new F35000_InsertObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F35000_ListObjectSliceTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F35000_ListObjectSliceTypes() {
            object[] results = this.Invoke("F35000_ListObjectSliceTypes", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F35000_ListObjectSliceTypesAsync() {
            this.F35000_ListObjectSliceTypesAsync(null);
        }
        
        /// <remarks/>
        public void F35000_ListObjectSliceTypesAsync(object userState) {
            if ((this.F35000_ListObjectSliceTypesOperationCompleted == null)) {
                this.F35000_ListObjectSliceTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF35000_ListObjectSliceTypesOperationCompleted);
            }
            this.InvokeAsync("F35000_ListObjectSliceTypes", new object[0], this.F35000_ListObjectSliceTypesOperationCompleted, userState);
        }
        
        private void OnF35000_ListObjectSliceTypesOperationCompleted(object arg) {
            if ((this.F35000_ListObjectSliceTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F35000_ListObjectSliceTypesCompleted(this, new F35000_ListObjectSliceTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F27000_GetMiscAssessment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F27000_GetMiscAssessment(int madistrictId) {
            object[] results = this.Invoke("F27000_GetMiscAssessment", new object[] {
                        madistrictId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F27000_GetMiscAssessmentAsync(int madistrictId) {
            this.F27000_GetMiscAssessmentAsync(madistrictId, null);
        }
        
        /// <remarks/>
        public void F27000_GetMiscAssessmentAsync(int madistrictId, object userState) {
            if ((this.F27000_GetMiscAssessmentOperationCompleted == null)) {
                this.F27000_GetMiscAssessmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF27000_GetMiscAssessmentOperationCompleted);
            }
            this.InvokeAsync("F27000_GetMiscAssessment", new object[] {
                        madistrictId}, this.F27000_GetMiscAssessmentOperationCompleted, userState);
        }
        
        private void OnF27000_GetMiscAssessmentOperationCompleted(object arg) {
            if ((this.F27000_GetMiscAssessmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F27000_GetMiscAssessmentCompleted(this, new F27000_GetMiscAssessmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F27000_ListMADistrictType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F27000_ListMADistrictType() {
            object[] results = this.Invoke("F27000_ListMADistrictType", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F27000_ListMADistrictTypeAsync() {
            this.F27000_ListMADistrictTypeAsync(null);
        }
        
        /// <remarks/>
        public void F27000_ListMADistrictTypeAsync(object userState) {
            if ((this.F27000_ListMADistrictTypeOperationCompleted == null)) {
                this.F27000_ListMADistrictTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF27000_ListMADistrictTypeOperationCompleted);
            }
            this.InvokeAsync("F27000_ListMADistrictType", new object[0], this.F27000_ListMADistrictTypeOperationCompleted, userState);
        }
        
        private void OnF27000_ListMADistrictTypeOperationCompleted(object arg) {
            if ((this.F27000_ListMADistrictTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F27000_ListMADistrictTypeCompleted(this, new F27000_ListMADistrictTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F27000_ListMADistrictItemType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F27000_ListMADistrictItemType(int madistrictTypeId) {
            object[] results = this.Invoke("F27000_ListMADistrictItemType", new object[] {
                        madistrictTypeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F27000_ListMADistrictItemTypeAsync(int madistrictTypeId) {
            this.F27000_ListMADistrictItemTypeAsync(madistrictTypeId, null);
        }
        
        /// <remarks/>
        public void F27000_ListMADistrictItemTypeAsync(int madistrictTypeId, object userState) {
            if ((this.F27000_ListMADistrictItemTypeOperationCompleted == null)) {
                this.F27000_ListMADistrictItemTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF27000_ListMADistrictItemTypeOperationCompleted);
            }
            this.InvokeAsync("F27000_ListMADistrictItemType", new object[] {
                        madistrictTypeId}, this.F27000_ListMADistrictItemTypeOperationCompleted, userState);
        }
        
        private void OnF27000_ListMADistrictItemTypeOperationCompleted(object arg) {
            if ((this.F27000_ListMADistrictItemTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F27000_ListMADistrictItemTypeCompleted(this, new F27000_ListMADistrictItemTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F27000_SaveMADetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F27000_SaveMADetails(string distributionItems, string subHeaderItems) {
            object[] results = this.Invoke("F27000_SaveMADetails", new object[] {
                        distributionItems,
                        subHeaderItems});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F27000_SaveMADetailsAsync(string distributionItems, string subHeaderItems) {
            this.F27000_SaveMADetailsAsync(distributionItems, subHeaderItems, null);
        }
        
        /// <remarks/>
        public void F27000_SaveMADetailsAsync(string distributionItems, string subHeaderItems, object userState) {
            if ((this.F27000_SaveMADetailsOperationCompleted == null)) {
                this.F27000_SaveMADetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF27000_SaveMADetailsOperationCompleted);
            }
            this.InvokeAsync("F27000_SaveMADetails", new object[] {
                        distributionItems,
                        subHeaderItems}, this.F27000_SaveMADetailsOperationCompleted, userState);
        }
        
        private void OnF27000_SaveMADetailsOperationCompleted(object arg) {
            if ((this.F27000_SaveMADetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F27000_SaveMADetailsCompleted(this, new F27000_SaveMADetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15015_ListStatementOwnership", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15015_ListStatementOwnership(int statementId) {
            object[] results = this.Invoke("F15015_ListStatementOwnership", new object[] {
                        statementId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15015_ListStatementOwnershipAsync(int statementId) {
            this.F15015_ListStatementOwnershipAsync(statementId, null);
        }
        
        /// <remarks/>
        public void F15015_ListStatementOwnershipAsync(int statementId, object userState) {
            if ((this.F15015_ListStatementOwnershipOperationCompleted == null)) {
                this.F15015_ListStatementOwnershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15015_ListStatementOwnershipOperationCompleted);
            }
            this.InvokeAsync("F15015_ListStatementOwnership", new object[] {
                        statementId}, this.F15015_ListStatementOwnershipOperationCompleted, userState);
        }
        
        private void OnF15015_ListStatementOwnershipOperationCompleted(object arg) {
            if ((this.F15015_ListStatementOwnershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15015_ListStatementOwnershipCompleted(this, new F15015_ListStatementOwnershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15015_SaveStatementOwnership", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F15015_SaveStatementOwnership(int statementId, string statementOwner) {
            this.Invoke("F15015_SaveStatementOwnership", new object[] {
                        statementId,
                        statementOwner});
        }
        
        /// <remarks/>
        public void F15015_SaveStatementOwnershipAsync(int statementId, string statementOwner) {
            this.F15015_SaveStatementOwnershipAsync(statementId, statementOwner, null);
        }
        
        /// <remarks/>
        public void F15015_SaveStatementOwnershipAsync(int statementId, string statementOwner, object userState) {
            if ((this.F15015_SaveStatementOwnershipOperationCompleted == null)) {
                this.F15015_SaveStatementOwnershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15015_SaveStatementOwnershipOperationCompleted);
            }
            this.InvokeAsync("F15015_SaveStatementOwnership", new object[] {
                        statementId,
                        statementOwner}, this.F15015_SaveStatementOwnershipOperationCompleted, userState);
        }
        
        private void OnF15015_SaveStatementOwnershipOperationCompleted(object arg) {
            if ((this.F15015_SaveStatementOwnershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15015_SaveStatementOwnershipCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9060_ListAuditingTables", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F9060_ListAuditingTables(string tableType) {
            object[] results = this.Invoke("F9060_ListAuditingTables", new object[] {
                        tableType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F9060_ListAuditingTablesAsync(string tableType) {
            this.F9060_ListAuditingTablesAsync(tableType, null);
        }
        
        /// <remarks/>
        public void F9060_ListAuditingTablesAsync(string tableType, object userState) {
            if ((this.F9060_ListAuditingTablesOperationCompleted == null)) {
                this.F9060_ListAuditingTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9060_ListAuditingTablesOperationCompleted);
            }
            this.InvokeAsync("F9060_ListAuditingTables", new object[] {
                        tableType}, this.F9060_ListAuditingTablesOperationCompleted, userState);
        }
        
        private void OnF9060_ListAuditingTablesOperationCompleted(object arg) {
            if ((this.F9060_ListAuditingTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9060_ListAuditingTablesCompleted(this, new F9060_ListAuditingTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9060_ListAuditingColumns", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F9060_ListAuditingColumns(string tableName) {
            object[] results = this.Invoke("F9060_ListAuditingColumns", new object[] {
                        tableName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F9060_ListAuditingColumnsAsync(string tableName) {
            this.F9060_ListAuditingColumnsAsync(tableName, null);
        }
        
        /// <remarks/>
        public void F9060_ListAuditingColumnsAsync(string tableName, object userState) {
            if ((this.F9060_ListAuditingColumnsOperationCompleted == null)) {
                this.F9060_ListAuditingColumnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9060_ListAuditingColumnsOperationCompleted);
            }
            this.InvokeAsync("F9060_ListAuditingColumns", new object[] {
                        tableName}, this.F9060_ListAuditingColumnsOperationCompleted, userState);
        }
        
        private void OnF9060_ListAuditingColumnsOperationCompleted(object arg) {
            if ((this.F9060_ListAuditingColumnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9060_ListAuditingColumnsCompleted(this, new F9060_ListAuditingColumnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9060_SaveAuditConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F9060_SaveAuditConfiguration(string tableName, string auditColumns) {
            this.Invoke("F9060_SaveAuditConfiguration", new object[] {
                        tableName,
                        auditColumns});
        }
        
        /// <remarks/>
        public void F9060_SaveAuditConfigurationAsync(string tableName, string auditColumns) {
            this.F9060_SaveAuditConfigurationAsync(tableName, auditColumns, null);
        }
        
        /// <remarks/>
        public void F9060_SaveAuditConfigurationAsync(string tableName, string auditColumns, object userState) {
            if ((this.F9060_SaveAuditConfigurationOperationCompleted == null)) {
                this.F9060_SaveAuditConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9060_SaveAuditConfigurationOperationCompleted);
            }
            this.InvokeAsync("F9060_SaveAuditConfiguration", new object[] {
                        tableName,
                        auditColumns}, this.F9060_SaveAuditConfigurationOperationCompleted, userState);
        }
        
        private void OnF9060_SaveAuditConfigurationOperationCompleted(object arg) {
            if ((this.F9060_SaveAuditConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9060_SaveAuditConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9060_DeleteAuditConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F9060_DeleteAuditConfiguration(int auditTableID) {
            this.Invoke("F9060_DeleteAuditConfiguration", new object[] {
                        auditTableID});
        }
        
        /// <remarks/>
        public void F9060_DeleteAuditConfigurationAsync(int auditTableID) {
            this.F9060_DeleteAuditConfigurationAsync(auditTableID, null);
        }
        
        /// <remarks/>
        public void F9060_DeleteAuditConfigurationAsync(int auditTableID, object userState) {
            if ((this.F9060_DeleteAuditConfigurationOperationCompleted == null)) {
                this.F9060_DeleteAuditConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9060_DeleteAuditConfigurationOperationCompleted);
            }
            this.InvokeAsync("F9060_DeleteAuditConfiguration", new object[] {
                        auditTableID}, this.F9060_DeleteAuditConfigurationOperationCompleted, userState);
        }
        
        private void OnF9060_DeleteAuditConfigurationOperationCompleted(object arg) {
            if ((this.F9060_DeleteAuditConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9060_DeleteAuditConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckInstallation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckInstallation(string test) {
            object[] results = this.Invoke("CheckInstallation", new object[] {
                        test});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckInstallationAsync(string test) {
            this.CheckInstallationAsync(test, null);
        }
        
        /// <remarks/>
        public void CheckInstallationAsync(string test, object userState) {
            if ((this.CheckInstallationOperationCompleted == null)) {
                this.CheckInstallationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckInstallationOperationCompleted);
            }
            this.InvokeAsync("CheckInstallation", new object[] {
                        test}, this.CheckInstallationOperationCompleted, userState);
        }
        
        private void OnCheckInstallationOperationCompleted(object arg) {
            if ((this.CheckInstallationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckInstallationCompleted(this, new CheckInstallationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListHistoryGrid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListHistoryGrid(int statementId) {
            object[] results = this.Invoke("ListHistoryGrid", new object[] {
                        statementId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListHistoryGridAsync(int statementId) {
            this.ListHistoryGridAsync(statementId, null);
        }
        
        /// <remarks/>
        public void ListHistoryGridAsync(int statementId, object userState) {
            if ((this.ListHistoryGridOperationCompleted == null)) {
                this.ListHistoryGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListHistoryGridOperationCompleted);
            }
            this.InvokeAsync("ListHistoryGrid", new object[] {
                        statementId}, this.ListHistoryGridOperationCompleted, userState);
        }
        
        private void OnListHistoryGridOperationCompleted(object arg) {
            if ((this.ListHistoryGridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListHistoryGridCompleted(this, new ListHistoryGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReceiptDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReceiptDetails(int receiptId) {
            object[] results = this.Invoke("GetReceiptDetails", new object[] {
                        receiptId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceiptDetailsAsync(int receiptId) {
            this.GetReceiptDetailsAsync(receiptId, null);
        }
        
        /// <remarks/>
        public void GetReceiptDetailsAsync(int receiptId, object userState) {
            if ((this.GetReceiptDetailsOperationCompleted == null)) {
                this.GetReceiptDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceiptDetailsOperationCompleted);
            }
            this.InvokeAsync("GetReceiptDetails", new object[] {
                        receiptId}, this.GetReceiptDetailsOperationCompleted, userState);
        }
        
        private void OnGetReceiptDetailsOperationCompleted(object arg) {
            if ((this.GetReceiptDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceiptDetailsCompleted(this, new GetReceiptDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListTenderType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListTenderType(bool allowOverUnder) {
            object[] results = this.Invoke("ListTenderType", new object[] {
                        allowOverUnder});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListTenderTypeAsync(bool allowOverUnder) {
            this.ListTenderTypeAsync(allowOverUnder, null);
        }
        
        /// <remarks/>
        public void ListTenderTypeAsync(bool allowOverUnder, object userState) {
            if ((this.ListTenderTypeOperationCompleted == null)) {
                this.ListTenderTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListTenderTypeOperationCompleted);
            }
            this.InvokeAsync("ListTenderType", new object[] {
                        allowOverUnder}, this.ListTenderTypeOperationCompleted, userState);
        }
        
        private void OnListTenderTypeOperationCompleted(object arg) {
            if ((this.ListTenderTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListTenderTypeCompleted(this, new ListTenderTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetValidReceiptTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetValidReceiptTest(int statementId, System.DateTime receiptDate) {
            object[] results = this.Invoke("GetValidReceiptTest", new object[] {
                        statementId,
                        receiptDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetValidReceiptTestAsync(int statementId, System.DateTime receiptDate) {
            this.GetValidReceiptTestAsync(statementId, receiptDate, null);
        }
        
        /// <remarks/>
        public void GetValidReceiptTestAsync(int statementId, System.DateTime receiptDate, object userState) {
            if ((this.GetValidReceiptTestOperationCompleted == null)) {
                this.GetValidReceiptTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValidReceiptTestOperationCompleted);
            }
            this.InvokeAsync("GetValidReceiptTest", new object[] {
                        statementId,
                        receiptDate}, this.GetValidReceiptTestOperationCompleted, userState);
        }
        
        private void OnGetValidReceiptTestOperationCompleted(object arg) {
            if ((this.GetValidReceiptTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValidReceiptTestCompleted(this, new GetValidReceiptTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveReceipt(string receiptItems, string paymentItems) {
            object[] results = this.Invoke("SaveReceipt", new object[] {
                        receiptItems,
                        paymentItems});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReceiptAsync(string receiptItems, string paymentItems) {
            this.SaveReceiptAsync(receiptItems, paymentItems, null);
        }
        
        /// <remarks/>
        public void SaveReceiptAsync(string receiptItems, string paymentItems, object userState) {
            if ((this.SaveReceiptOperationCompleted == null)) {
                this.SaveReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReceiptOperationCompleted);
            }
            this.InvokeAsync("SaveReceipt", new object[] {
                        receiptItems,
                        paymentItems}, this.SaveReceiptOperationCompleted, userState);
        }
        
        private void OnSaveReceiptOperationCompleted(object arg) {
            if ((this.SaveReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReceiptCompleted(this, new SaveReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMinTaxDue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetMinTaxDue(int statmentId, string interestDate) {
            object[] results = this.Invoke("GetMinTaxDue", new object[] {
                        statmentId,
                        interestDate});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetMinTaxDueAsync(int statmentId, string interestDate) {
            this.GetMinTaxDueAsync(statmentId, interestDate, null);
        }
        
        /// <remarks/>
        public void GetMinTaxDueAsync(int statmentId, string interestDate, object userState) {
            if ((this.GetMinTaxDueOperationCompleted == null)) {
                this.GetMinTaxDueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMinTaxDueOperationCompleted);
            }
            this.InvokeAsync("GetMinTaxDue", new object[] {
                        statmentId,
                        interestDate}, this.GetMinTaxDueOperationCompleted, userState);
        }
        
        private void OnGetMinTaxDueOperationCompleted(object arg) {
            if ((this.GetMinTaxDueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMinTaxDueCompleted(this, new GetMinTaxDueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInterestAmount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetInterestAmount(int statmentId, string interestDate, decimal taxDueAmount) {
            object[] results = this.Invoke("GetInterestAmount", new object[] {
                        statmentId,
                        interestDate,
                        taxDueAmount});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetInterestAmountAsync(int statmentId, string interestDate, decimal taxDueAmount) {
            this.GetInterestAmountAsync(statmentId, interestDate, taxDueAmount, null);
        }
        
        /// <remarks/>
        public void GetInterestAmountAsync(int statmentId, string interestDate, decimal taxDueAmount, object userState) {
            if ((this.GetInterestAmountOperationCompleted == null)) {
                this.GetInterestAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInterestAmountOperationCompleted);
            }
            this.InvokeAsync("GetInterestAmount", new object[] {
                        statmentId,
                        interestDate,
                        taxDueAmount}, this.GetInterestAmountOperationCompleted, userState);
        }
        
        private void OnGetInterestAmountOperationCompleted(object arg) {
            if ((this.GetInterestAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInterestAmountCompleted(this, new GetInterestAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReceiptHeaderDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReceiptHeaderDetails(int receiptId) {
            object[] results = this.Invoke("GetReceiptHeaderDetails", new object[] {
                        receiptId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceiptHeaderDetailsAsync(int receiptId) {
            this.GetReceiptHeaderDetailsAsync(receiptId, null);
        }
        
        /// <remarks/>
        public void GetReceiptHeaderDetailsAsync(int receiptId, object userState) {
            if ((this.GetReceiptHeaderDetailsOperationCompleted == null)) {
                this.GetReceiptHeaderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceiptHeaderDetailsOperationCompleted);
            }
            this.InvokeAsync("GetReceiptHeaderDetails", new object[] {
                        receiptId}, this.GetReceiptHeaderDetailsOperationCompleted, userState);
        }
        
        private void OnGetReceiptHeaderDetailsOperationCompleted(object arg) {
            if ((this.GetReceiptHeaderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceiptHeaderDetailsCompleted(this, new GetReceiptHeaderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListReceiptItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListReceiptItems(int receiptId) {
            object[] results = this.Invoke("ListReceiptItems", new object[] {
                        receiptId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListReceiptItemsAsync(int receiptId) {
            this.ListReceiptItemsAsync(receiptId, null);
        }
        
        /// <remarks/>
        public void ListReceiptItemsAsync(int receiptId, object userState) {
            if ((this.ListReceiptItemsOperationCompleted == null)) {
                this.ListReceiptItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListReceiptItemsOperationCompleted);
            }
            this.InvokeAsync("ListReceiptItems", new object[] {
                        receiptId}, this.ListReceiptItemsOperationCompleted, userState);
        }
        
        private void OnListReceiptItemsOperationCompleted(object arg) {
            if ((this.ListReceiptItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListReceiptItemsCompleted(this, new ListReceiptItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReceiptStatementHeaderDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReceiptStatementHeaderDetails(int receiptId) {
            object[] results = this.Invoke("GetReceiptStatementHeaderDetails", new object[] {
                        receiptId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceiptStatementHeaderDetailsAsync(int receiptId) {
            this.GetReceiptStatementHeaderDetailsAsync(receiptId, null);
        }
        
        /// <remarks/>
        public void GetReceiptStatementHeaderDetailsAsync(int receiptId, object userState) {
            if ((this.GetReceiptStatementHeaderDetailsOperationCompleted == null)) {
                this.GetReceiptStatementHeaderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceiptStatementHeaderDetailsOperationCompleted);
            }
            this.InvokeAsync("GetReceiptStatementHeaderDetails", new object[] {
                        receiptId}, this.GetReceiptStatementHeaderDetailsOperationCompleted, userState);
        }
        
        private void OnGetReceiptStatementHeaderDetailsOperationCompleted(object arg) {
            if ((this.GetReceiptStatementHeaderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceiptStatementHeaderDetailsCompleted(this, new GetReceiptStatementHeaderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListReceiptOwners", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListReceiptOwners(int receiptId) {
            object[] results = this.Invoke("ListReceiptOwners", new object[] {
                        receiptId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListReceiptOwnersAsync(int receiptId) {
            this.ListReceiptOwnersAsync(receiptId, null);
        }
        
        /// <remarks/>
        public void ListReceiptOwnersAsync(int receiptId, object userState) {
            if ((this.ListReceiptOwnersOperationCompleted == null)) {
                this.ListReceiptOwnersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListReceiptOwnersOperationCompleted);
            }
            this.InvokeAsync("ListReceiptOwners", new object[] {
                        receiptId}, this.ListReceiptOwnersOperationCompleted, userState);
        }
        
        private void OnListReceiptOwnersOperationCompleted(object arg) {
            if ((this.ListReceiptOwnersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListReceiptOwnersCompleted(this, new ListReceiptOwnersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPayment(int ppaymentId) {
            object[] results = this.Invoke("GetPayment", new object[] {
                        ppaymentId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentAsync(int ppaymentId) {
            this.GetPaymentAsync(ppaymentId, null);
        }
        
        /// <remarks/>
        public void GetPaymentAsync(int ppaymentId, object userState) {
            if ((this.GetPaymentOperationCompleted == null)) {
                this.GetPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentOperationCompleted);
            }
            this.InvokeAsync("GetPayment", new object[] {
                        ppaymentId}, this.GetPaymentOperationCompleted, userState);
        }
        
        private void OnGetPaymentOperationCompleted(object arg) {
            if ((this.GetPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentCompleted(this, new GetPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SavePayment(int ppaymentId, string paymentItems, int userId, int ownerId) {
            object[] results = this.Invoke("SavePayment", new object[] {
                        ppaymentId,
                        paymentItems,
                        userId,
                        ownerId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SavePaymentAsync(int ppaymentId, string paymentItems, int userId, int ownerId) {
            this.SavePaymentAsync(ppaymentId, paymentItems, userId, ownerId, null);
        }
        
        /// <remarks/>
        public void SavePaymentAsync(int ppaymentId, string paymentItems, int userId, int ownerId, object userState) {
            if ((this.SavePaymentOperationCompleted == null)) {
                this.SavePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePaymentOperationCompleted);
            }
            this.InvokeAsync("SavePayment", new object[] {
                        ppaymentId,
                        paymentItems,
                        userId,
                        ownerId}, this.SavePaymentOperationCompleted, userState);
        }
        
        private void OnSavePaymentOperationCompleted(object arg) {
            if ((this.SavePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePaymentCompleted(this, new SavePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTenderTypeConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTenderTypeConfiguration() {
            object[] results = this.Invoke("GetTenderTypeConfiguration", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTenderTypeConfigurationAsync() {
            this.GetTenderTypeConfigurationAsync(null);
        }
        
        /// <remarks/>
        public void GetTenderTypeConfigurationAsync(object userState) {
            if ((this.GetTenderTypeConfigurationOperationCompleted == null)) {
                this.GetTenderTypeConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTenderTypeConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetTenderTypeConfiguration", new object[0], this.GetTenderTypeConfigurationOperationCompleted, userState);
        }
        
        private void OnGetTenderTypeConfigurationOperationCompleted(object arg) {
            if ((this.GetTenderTypeConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTenderTypeConfigurationCompleted(this, new GetTenderTypeConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetComments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetComments(int keyId, int formId, int userId) {
            object[] results = this.Invoke("GetComments", new object[] {
                        keyId,
                        formId,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentsAsync(int keyId, int formId, int userId) {
            this.GetCommentsAsync(keyId, formId, userId, null);
        }
        
        /// <remarks/>
        public void GetCommentsAsync(int keyId, int formId, int userId, object userState) {
            if ((this.GetCommentsOperationCompleted == null)) {
                this.GetCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentsOperationCompleted);
            }
            this.InvokeAsync("GetComments", new object[] {
                        keyId,
                        formId,
                        userId}, this.GetCommentsOperationCompleted, userState);
        }
        
        private void OnGetCommentsOperationCompleted(object arg) {
            if ((this.GetCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentsCompleted(this, new GetCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9075_GetComment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F9075_GetComment(int keyId, int formId) {
            object[] results = this.Invoke("F9075_GetComment", new object[] {
                        keyId,
                        formId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F9075_GetCommentAsync(int keyId, int formId) {
            this.F9075_GetCommentAsync(keyId, formId, null);
        }
        
        /// <remarks/>
        public void F9075_GetCommentAsync(int keyId, int formId, object userState) {
            if ((this.F9075_GetCommentOperationCompleted == null)) {
                this.F9075_GetCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9075_GetCommentOperationCompleted);
            }
            this.InvokeAsync("F9075_GetComment", new object[] {
                        keyId,
                        formId}, this.F9075_GetCommentOperationCompleted, userState);
        }
        
        private void OnF9075_GetCommentOperationCompleted(object arg) {
            if ((this.F9075_GetCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9075_GetCommentCompleted(this, new F9075_GetCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveComments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveComments(int commentId, int formId, int keyId, System.DateTime commentDate, int userId, string comments, int printOnReceipt, int publicComment, int ispriority) {
            this.Invoke("SaveComments", new object[] {
                        commentId,
                        formId,
                        keyId,
                        commentDate,
                        userId,
                        comments,
                        printOnReceipt,
                        publicComment,
                        ispriority});
        }
        
        /// <remarks/>
        public void SaveCommentsAsync(int commentId, int formId, int keyId, System.DateTime commentDate, int userId, string comments, int printOnReceipt, int publicComment, int ispriority) {
            this.SaveCommentsAsync(commentId, formId, keyId, commentDate, userId, comments, printOnReceipt, publicComment, ispriority, null);
        }
        
        /// <remarks/>
        public void SaveCommentsAsync(int commentId, int formId, int keyId, System.DateTime commentDate, int userId, string comments, int printOnReceipt, int publicComment, int ispriority, object userState) {
            if ((this.SaveCommentsOperationCompleted == null)) {
                this.SaveCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCommentsOperationCompleted);
            }
            this.InvokeAsync("SaveComments", new object[] {
                        commentId,
                        formId,
                        keyId,
                        commentDate,
                        userId,
                        comments,
                        printOnReceipt,
                        publicComment,
                        ispriority}, this.SaveCommentsOperationCompleted, userState);
        }
        
        private void OnSaveCommentsOperationCompleted(object arg) {
            if ((this.SaveCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCommentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteComments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteComments(int keyId, int formId, int commentId) {
            this.Invoke("DeleteComments", new object[] {
                        keyId,
                        formId,
                        commentId});
        }
        
        /// <remarks/>
        public void DeleteCommentsAsync(int keyId, int formId, int commentId) {
            this.DeleteCommentsAsync(keyId, formId, commentId, null);
        }
        
        /// <remarks/>
        public void DeleteCommentsAsync(int keyId, int formId, int commentId, object userState) {
            if ((this.DeleteCommentsOperationCompleted == null)) {
                this.DeleteCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCommentsOperationCompleted);
            }
            this.InvokeAsync("DeleteComments", new object[] {
                        keyId,
                        formId,
                        commentId}, this.DeleteCommentsOperationCompleted, userState);
        }
        
        private void OnDeleteCommentsOperationCompleted(object arg) {
            if ((this.DeleteCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCommentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCommentsCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCommentsCount(int formId, int keyId, int userId) {
            object[] results = this.Invoke("GetCommentsCount", new object[] {
                        formId,
                        keyId,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentsCountAsync(int formId, int keyId, int userId) {
            this.GetCommentsCountAsync(formId, keyId, userId, null);
        }
        
        /// <remarks/>
        public void GetCommentsCountAsync(int formId, int keyId, int userId, object userState) {
            if ((this.GetCommentsCountOperationCompleted == null)) {
                this.GetCommentsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentsCountOperationCompleted);
            }
            this.InvokeAsync("GetCommentsCount", new object[] {
                        formId,
                        keyId,
                        userId}, this.GetCommentsCountOperationCompleted, userState);
        }
        
        private void OnGetCommentsCountOperationCompleted(object arg) {
            if ((this.GetCommentsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentsCountCompleted(this, new GetCommentsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConfigDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConfigDetails(string configName) {
            object[] results = this.Invoke("GetConfigDetails", new object[] {
                        configName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigDetailsAsync(string configName) {
            this.GetConfigDetailsAsync(configName, null);
        }
        
        /// <remarks/>
        public void GetConfigDetailsAsync(string configName, object userState) {
            if ((this.GetConfigDetailsOperationCompleted == null)) {
                this.GetConfigDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigDetailsOperationCompleted);
            }
            this.InvokeAsync("GetConfigDetails", new object[] {
                        configName}, this.GetConfigDetailsOperationCompleted, userState);
        }
        
        private void OnGetConfigDetailsOperationCompleted(object arg) {
            if ((this.GetConfigDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigDetailsCompleted(this, new GetConfigDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConnectionString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConnectionString(int MSVersionId) {
            object[] results = this.Invoke("GetConnectionString", new object[] {
                        MSVersionId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectionStringAsync(int MSVersionId) {
            this.GetConnectionStringAsync(MSVersionId, null);
        }
        
        /// <remarks/>
        public void GetConnectionStringAsync(int MSVersionId, object userState) {
            if ((this.GetConnectionStringOperationCompleted == null)) {
                this.GetConnectionStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionStringOperationCompleted);
            }
            this.InvokeAsync("GetConnectionString", new object[] {
                        MSVersionId}, this.GetConnectionStringOperationCompleted, userState);
        }
        
        private void OnGetConnectionStringOperationCompleted(object arg) {
            if ((this.GetConnectionStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionStringCompleted(this, new GetConnectionStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttachmentCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAttachmentCount(int formId, int receiptId, int userId) {
            object[] results = this.Invoke("GetAttachmentCount", new object[] {
                        formId,
                        receiptId,
                        userId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentCountAsync(int formId, int receiptId, int userId) {
            this.GetAttachmentCountAsync(formId, receiptId, userId, null);
        }
        
        /// <remarks/>
        public void GetAttachmentCountAsync(int formId, int receiptId, int userId, object userState) {
            if ((this.GetAttachmentCountOperationCompleted == null)) {
                this.GetAttachmentCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentCountOperationCompleted);
            }
            this.InvokeAsync("GetAttachmentCount", new object[] {
                        formId,
                        receiptId,
                        userId}, this.GetAttachmentCountOperationCompleted, userState);
        }
        
        private void OnGetAttachmentCountOperationCompleted(object arg) {
            if ((this.GetAttachmentCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentCountCompleted(this, new GetAttachmentCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttachmentItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAttachmentItems(int formId, int keyId, int userId) {
            object[] results = this.Invoke("GetAttachmentItems", new object[] {
                        formId,
                        keyId,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentItemsAsync(int formId, int keyId, int userId) {
            this.GetAttachmentItemsAsync(formId, keyId, userId, null);
        }
        
        /// <remarks/>
        public void GetAttachmentItemsAsync(int formId, int keyId, int userId, object userState) {
            if ((this.GetAttachmentItemsOperationCompleted == null)) {
                this.GetAttachmentItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentItemsOperationCompleted);
            }
            this.InvokeAsync("GetAttachmentItems", new object[] {
                        formId,
                        keyId,
                        userId}, this.GetAttachmentItemsOperationCompleted, userState);
        }
        
        private void OnGetAttachmentItemsOperationCompleted(object arg) {
            if ((this.GetAttachmentItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentItemsCompleted(this, new GetAttachmentItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttachementFunctionName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAttachementFunctionName(int formId) {
            object[] results = this.Invoke("GetAttachementFunctionName", new object[] {
                        formId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachementFunctionNameAsync(int formId) {
            this.GetAttachementFunctionNameAsync(formId, null);
        }
        
        /// <remarks/>
        public void GetAttachementFunctionNameAsync(int formId, object userState) {
            if ((this.GetAttachementFunctionNameOperationCompleted == null)) {
                this.GetAttachementFunctionNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachementFunctionNameOperationCompleted);
            }
            this.InvokeAsync("GetAttachementFunctionName", new object[] {
                        formId}, this.GetAttachementFunctionNameOperationCompleted, userState);
        }
        
        private void OnGetAttachementFunctionNameOperationCompleted(object arg) {
            if ((this.GetAttachementFunctionNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachementFunctionNameCompleted(this, new GetAttachementFunctionNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAttachments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveAttachments(int fileId, string extension, int formId, int keyId, int fileTypeId, string source, int primary, string description, string eventDate, int userId, int publicValue) {
            this.Invoke("SaveAttachments", new object[] {
                        fileId,
                        extension,
                        formId,
                        keyId,
                        fileTypeId,
                        source,
                        primary,
                        description,
                        eventDate,
                        userId,
                        publicValue});
        }
        
        /// <remarks/>
        public void SaveAttachmentsAsync(int fileId, string extension, int formId, int keyId, int fileTypeId, string source, int primary, string description, string eventDate, int userId, int publicValue) {
            this.SaveAttachmentsAsync(fileId, extension, formId, keyId, fileTypeId, source, primary, description, eventDate, userId, publicValue, null);
        }
        
        /// <remarks/>
        public void SaveAttachmentsAsync(int fileId, string extension, int formId, int keyId, int fileTypeId, string source, int primary, string description, string eventDate, int userId, int publicValue, object userState) {
            if ((this.SaveAttachmentsOperationCompleted == null)) {
                this.SaveAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAttachmentsOperationCompleted);
            }
            this.InvokeAsync("SaveAttachments", new object[] {
                        fileId,
                        extension,
                        formId,
                        keyId,
                        fileTypeId,
                        source,
                        primary,
                        description,
                        eventDate,
                        userId,
                        publicValue}, this.SaveAttachmentsOperationCompleted, userState);
        }
        
        private void OnSaveAttachmentsOperationCompleted(object arg) {
            if ((this.SaveAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAttachmentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAttachments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAttachments(int fileId) {
            this.Invoke("DeleteAttachments", new object[] {
                        fileId});
        }
        
        /// <remarks/>
        public void DeleteAttachmentsAsync(int fileId) {
            this.DeleteAttachmentsAsync(fileId, null);
        }
        
        /// <remarks/>
        public void DeleteAttachmentsAsync(int fileId, object userState) {
            if ((this.DeleteAttachmentsOperationCompleted == null)) {
                this.DeleteAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAttachmentsOperationCompleted);
            }
            this.InvokeAsync("DeleteAttachments", new object[] {
                        fileId}, this.DeleteAttachmentsOperationCompleted, userState);
        }
        
        private void OnDeleteAttachmentsOperationCompleted(object arg) {
            if ((this.DeleteAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAttachmentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProgramId(int fileTypeId) {
            object[] results = this.Invoke("GetProgramId", new object[] {
                        fileTypeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramIdAsync(int fileTypeId) {
            this.GetProgramIdAsync(fileTypeId, null);
        }
        
        /// <remarks/>
        public void GetProgramIdAsync(int fileTypeId, object userState) {
            if ((this.GetProgramIdOperationCompleted == null)) {
                this.GetProgramIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramIdOperationCompleted);
            }
            this.InvokeAsync("GetProgramId", new object[] {
                        fileTypeId}, this.GetProgramIdOperationCompleted, userState);
        }
        
        private void OnGetProgramIdOperationCompleted(object arg) {
            if ((this.GetProgramIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramIdCompleted(this, new GetProgramIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFilePath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFilePath(string source, int formId, int keyId, string extension) {
            object[] results = this.Invoke("GetFilePath", new object[] {
                        source,
                        formId,
                        keyId,
                        extension});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilePathAsync(string source, int formId, int keyId, string extension) {
            this.GetFilePathAsync(source, formId, keyId, extension, null);
        }
        
        /// <remarks/>
        public void GetFilePathAsync(string source, int formId, int keyId, string extension, object userState) {
            if ((this.GetFilePathOperationCompleted == null)) {
                this.GetFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilePathOperationCompleted);
            }
            this.InvokeAsync("GetFilePath", new object[] {
                        source,
                        formId,
                        keyId,
                        extension}, this.GetFilePathOperationCompleted, userState);
        }
        
        private void OnGetFilePathOperationCompleted(object arg) {
            if ((this.GetFilePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilePathCompleted(this, new GetFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRealEstateStatementCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRealEstateStatementCount() {
            object[] results = this.Invoke("GetRealEstateStatementCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRealEstateStatementCountAsync() {
            this.GetRealEstateStatementCountAsync(null);
        }
        
        /// <remarks/>
        public void GetRealEstateStatementCountAsync(object userState) {
            if ((this.GetRealEstateStatementCountOperationCompleted == null)) {
                this.GetRealEstateStatementCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRealEstateStatementCountOperationCompleted);
            }
            this.InvokeAsync("GetRealEstateStatementCount", new object[0], this.GetRealEstateStatementCountOperationCompleted, userState);
        }
        
        private void OnGetRealEstateStatementCountOperationCompleted(object arg) {
            if ((this.GetRealEstateStatementCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRealEstateStatementCountCompleted(this, new GetRealEstateStatementCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRealEstateStatementIds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRealEstateStatementIds(string orderField, string orderBy) {
            object[] results = this.Invoke("GetRealEstateStatementIds", new object[] {
                        orderField,
                        orderBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRealEstateStatementIdsAsync(string orderField, string orderBy) {
            this.GetRealEstateStatementIdsAsync(orderField, orderBy, null);
        }
        
        /// <remarks/>
        public void GetRealEstateStatementIdsAsync(string orderField, string orderBy, object userState) {
            if ((this.GetRealEstateStatementIdsOperationCompleted == null)) {
                this.GetRealEstateStatementIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRealEstateStatementIdsOperationCompleted);
            }
            this.InvokeAsync("GetRealEstateStatementIds", new object[] {
                        orderField,
                        orderBy}, this.GetRealEstateStatementIdsOperationCompleted, userState);
        }
        
        private void OnGetRealEstateStatementIdsOperationCompleted(object arg) {
            if ((this.GetRealEstateStatementIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRealEstateStatementIdsCompleted(this, new GetRealEstateStatementIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRealEstateStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRealEstateStatement(int statementId) {
            object[] results = this.Invoke("GetRealEstateStatement", new object[] {
                        statementId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRealEstateStatementAsync(int statementId) {
            this.GetRealEstateStatementAsync(statementId, null);
        }
        
        /// <remarks/>
        public void GetRealEstateStatementAsync(int statementId, object userState) {
            if ((this.GetRealEstateStatementOperationCompleted == null)) {
                this.GetRealEstateStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRealEstateStatementOperationCompleted);
            }
            this.InvokeAsync("GetRealEstateStatement", new object[] {
                        statementId}, this.GetRealEstateStatementOperationCompleted, userState);
        }
        
        private void OnGetRealEstateStatementOperationCompleted(object arg) {
            if ((this.GetRealEstateStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRealEstateStatementCompleted(this, new GetRealEstateStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListQuery(int formId, int userId) {
            object[] results = this.Invoke("ListQuery", new object[] {
                        formId,
                        userId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListQueryAsync(int formId, int userId) {
            this.ListQueryAsync(formId, userId, null);
        }
        
        /// <remarks/>
        public void ListQueryAsync(int formId, int userId, object userState) {
            if ((this.ListQueryOperationCompleted == null)) {
                this.ListQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListQueryOperationCompleted);
            }
            this.InvokeAsync("ListQuery", new object[] {
                        formId,
                        userId}, this.ListQueryOperationCompleted, userState);
        }
        
        private void OnListQueryOperationCompleted(object arg) {
            if ((this.ListQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListQueryCompleted(this, new ListQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListSortQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListSortQuery(int savedQueryId, string orderByCondition, int formId) {
            object[] results = this.Invoke("ListSortQuery", new object[] {
                        savedQueryId,
                        orderByCondition,
                        formId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListSortQueryAsync(int savedQueryId, string orderByCondition, int formId) {
            this.ListSortQueryAsync(savedQueryId, orderByCondition, formId, null);
        }
        
        /// <remarks/>
        public void ListSortQueryAsync(int savedQueryId, string orderByCondition, int formId, object userState) {
            if ((this.ListSortQueryOperationCompleted == null)) {
                this.ListSortQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSortQueryOperationCompleted);
            }
            this.InvokeAsync("ListSortQuery", new object[] {
                        savedQueryId,
                        orderByCondition,
                        formId}, this.ListSortQueryOperationCompleted, userState);
        }
        
        private void OnListSortQueryOperationCompleted(object arg) {
            if ((this.ListSortQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSortQueryCompleted(this, new ListSortQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SaveQuery(string savedQueryName, int formId, string savedQueryNote, int userId, System.DateTime savedQueryDate, string savedQuery, string whereCondn, bool canOverride) {
            object[] results = this.Invoke("SaveQuery", new object[] {
                        savedQueryName,
                        formId,
                        savedQueryNote,
                        userId,
                        savedQueryDate,
                        savedQuery,
                        whereCondn,
                        canOverride});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SaveQueryAsync(string savedQueryName, int formId, string savedQueryNote, int userId, System.DateTime savedQueryDate, string savedQuery, string whereCondn, bool canOverride) {
            this.SaveQueryAsync(savedQueryName, formId, savedQueryNote, userId, savedQueryDate, savedQuery, whereCondn, canOverride, null);
        }
        
        /// <remarks/>
        public void SaveQueryAsync(string savedQueryName, int formId, string savedQueryNote, int userId, System.DateTime savedQueryDate, string savedQuery, string whereCondn, bool canOverride, object userState) {
            if ((this.SaveQueryOperationCompleted == null)) {
                this.SaveQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveQueryOperationCompleted);
            }
            this.InvokeAsync("SaveQuery", new object[] {
                        savedQueryName,
                        formId,
                        savedQueryNote,
                        userId,
                        savedQueryDate,
                        savedQuery,
                        whereCondn,
                        canOverride}, this.SaveQueryOperationCompleted, userState);
        }
        
        private void OnSaveQueryOperationCompleted(object arg) {
            if ((this.SaveQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveQueryCompleted(this, new SaveQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteQuery(string whereCondition, string orderByCondition, int formId) {
            object[] results = this.Invoke("ExecuteQuery", new object[] {
                        whereCondition,
                        orderByCondition,
                        formId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteQueryAsync(string whereCondition, string orderByCondition, int formId) {
            this.ExecuteQueryAsync(whereCondition, orderByCondition, formId, null);
        }
        
        /// <remarks/>
        public void ExecuteQueryAsync(string whereCondition, string orderByCondition, int formId, object userState) {
            if ((this.ExecuteQueryOperationCompleted == null)) {
                this.ExecuteQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteQuery", new object[] {
                        whereCondition,
                        orderByCondition,
                        formId}, this.ExecuteQueryOperationCompleted, userState);
        }
        
        private void OnExecuteQueryOperationCompleted(object arg) {
            if ((this.ExecuteQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteQueryCompleted(this, new ExecuteQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckQueryExist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckQueryExist(int formId, string savedQueryName) {
            object[] results = this.Invoke("CheckQueryExist", new object[] {
                        formId,
                        savedQueryName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckQueryExistAsync(int formId, string savedQueryName) {
            this.CheckQueryExistAsync(formId, savedQueryName, null);
        }
        
        /// <remarks/>
        public void CheckQueryExistAsync(int formId, string savedQueryName, object userState) {
            if ((this.CheckQueryExistOperationCompleted == null)) {
                this.CheckQueryExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckQueryExistOperationCompleted);
            }
            this.InvokeAsync("CheckQueryExist", new object[] {
                        formId,
                        savedQueryName}, this.CheckQueryExistOperationCompleted, userState);
        }
        
        private void OnCheckQueryExistOperationCompleted(object arg) {
            if ((this.CheckQueryExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckQueryExistCompleted(this, new CheckQueryExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQueryResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetQueryResult(int queryId, string orderByCondn) {
            object[] results = this.Invoke("GetQueryResult", new object[] {
                        queryId,
                        orderByCondn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryResultAsync(int queryId, string orderByCondn) {
            this.GetQueryResultAsync(queryId, orderByCondn, null);
        }
        
        /// <remarks/>
        public void GetQueryResultAsync(int queryId, string orderByCondn, object userState) {
            if ((this.GetQueryResultOperationCompleted == null)) {
                this.GetQueryResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryResultOperationCompleted);
            }
            this.InvokeAsync("GetQueryResult", new object[] {
                        queryId,
                        orderByCondn}, this.GetQueryResultOperationCompleted, userState);
        }
        
        private void OnGetQueryResultOperationCompleted(object arg) {
            if ((this.GetQueryResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryResultCompleted(this, new GetQueryResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteQuery(int queryId) {
            this.Invoke("DeleteQuery", new object[] {
                        queryId});
        }
        
        /// <remarks/>
        public void DeleteQueryAsync(int queryId) {
            this.DeleteQueryAsync(queryId, null);
        }
        
        /// <remarks/>
        public void DeleteQueryAsync(int queryId, object userState) {
            if ((this.DeleteQueryOperationCompleted == null)) {
                this.DeleteQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteQueryOperationCompleted);
            }
            this.InvokeAsync("DeleteQuery", new object[] {
                        queryId}, this.DeleteQueryOperationCompleted, userState);
        }
        
        private void OnDeleteQueryOperationCompleted(object arg) {
            if ((this.DeleteQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteQueryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteSnapshot", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteSnapshot(int snapshotId, string whereCondition, string orderByCondition, int formId) {
            object[] results = this.Invoke("ExecuteSnapshot", new object[] {
                        snapshotId,
                        whereCondition,
                        orderByCondition,
                        formId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSnapshotAsync(int snapshotId, string whereCondition, string orderByCondition, int formId) {
            this.ExecuteSnapshotAsync(snapshotId, whereCondition, orderByCondition, formId, null);
        }
        
        /// <remarks/>
        public void ExecuteSnapshotAsync(int snapshotId, string whereCondition, string orderByCondition, int formId, object userState) {
            if ((this.ExecuteSnapshotOperationCompleted == null)) {
                this.ExecuteSnapshotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSnapshotOperationCompleted);
            }
            this.InvokeAsync("ExecuteSnapshot", new object[] {
                        snapshotId,
                        whereCondition,
                        orderByCondition,
                        formId}, this.ExecuteSnapshotOperationCompleted, userState);
        }
        
        private void OnExecuteSnapshotOperationCompleted(object arg) {
            if ((this.ExecuteSnapshotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSnapshotCompleted(this, new ExecuteSnapshotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveSnapShot", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SaveSnapShot(string snapshotName, int formId, string snapshotNote, int userId, System.DateTime snapshotDate, string snapshotQuery, string whereCondn, string keyIDs, bool canOverride) {
            object[] results = this.Invoke("SaveSnapShot", new object[] {
                        snapshotName,
                        formId,
                        snapshotNote,
                        userId,
                        snapshotDate,
                        snapshotQuery,
                        whereCondn,
                        keyIDs,
                        canOverride});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSnapShotAsync(string snapshotName, int formId, string snapshotNote, int userId, System.DateTime snapshotDate, string snapshotQuery, string whereCondn, string keyIDs, bool canOverride) {
            this.SaveSnapShotAsync(snapshotName, formId, snapshotNote, userId, snapshotDate, snapshotQuery, whereCondn, keyIDs, canOverride, null);
        }
        
        /// <remarks/>
        public void SaveSnapShotAsync(string snapshotName, int formId, string snapshotNote, int userId, System.DateTime snapshotDate, string snapshotQuery, string whereCondn, string keyIDs, bool canOverride, object userState) {
            if ((this.SaveSnapShotOperationCompleted == null)) {
                this.SaveSnapShotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSnapShotOperationCompleted);
            }
            this.InvokeAsync("SaveSnapShot", new object[] {
                        snapshotName,
                        formId,
                        snapshotNote,
                        userId,
                        snapshotDate,
                        snapshotQuery,
                        whereCondn,
                        keyIDs,
                        canOverride}, this.SaveSnapShotOperationCompleted, userState);
        }
        
        private void OnSaveSnapShotOperationCompleted(object arg) {
            if ((this.SaveSnapShotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSnapShotCompleted(this, new SaveSnapShotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckSnapShotExist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckSnapShotExist(int formId, string savedSnapShotName) {
            object[] results = this.Invoke("CheckSnapShotExist", new object[] {
                        formId,
                        savedSnapShotName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSnapShotExistAsync(int formId, string savedSnapShotName) {
            this.CheckSnapShotExistAsync(formId, savedSnapShotName, null);
        }
        
        /// <remarks/>
        public void CheckSnapShotExistAsync(int formId, string savedSnapShotName, object userState) {
            if ((this.CheckSnapShotExistOperationCompleted == null)) {
                this.CheckSnapShotExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSnapShotExistOperationCompleted);
            }
            this.InvokeAsync("CheckSnapShotExist", new object[] {
                        formId,
                        savedSnapShotName}, this.CheckSnapShotExistOperationCompleted, userState);
        }
        
        private void OnCheckSnapShotExistOperationCompleted(object arg) {
            if ((this.CheckSnapShotExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSnapShotExistCompleted(this, new CheckSnapShotExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSnapShotResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSnapShotResult(int snapShotId, string orderByCondn) {
            object[] results = this.Invoke("GetSnapShotResult", new object[] {
                        snapShotId,
                        orderByCondn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSnapShotResultAsync(int snapShotId, string orderByCondn) {
            this.GetSnapShotResultAsync(snapShotId, orderByCondn, null);
        }
        
        /// <remarks/>
        public void GetSnapShotResultAsync(int snapShotId, string orderByCondn, object userState) {
            if ((this.GetSnapShotResultOperationCompleted == null)) {
                this.GetSnapShotResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSnapShotResultOperationCompleted);
            }
            this.InvokeAsync("GetSnapShotResult", new object[] {
                        snapShotId,
                        orderByCondn}, this.GetSnapShotResultOperationCompleted, userState);
        }
        
        private void OnGetSnapShotResultOperationCompleted(object arg) {
            if ((this.GetSnapShotResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSnapShotResultCompleted(this, new GetSnapShotResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListSnapShot", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListSnapShot(int formId) {
            object[] results = this.Invoke("ListSnapShot", new object[] {
                        formId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListSnapShotAsync(int formId) {
            this.ListSnapShotAsync(formId, null);
        }
        
        /// <remarks/>
        public void ListSnapShotAsync(int formId, object userState) {
            if ((this.ListSnapShotOperationCompleted == null)) {
                this.ListSnapShotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSnapShotOperationCompleted);
            }
            this.InvokeAsync("ListSnapShot", new object[] {
                        formId}, this.ListSnapShotOperationCompleted, userState);
        }
        
        private void OnListSnapShotOperationCompleted(object arg) {
            if ((this.ListSnapShotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSnapShotCompleted(this, new ListSnapShotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListSortSnapShot", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListSortSnapShot(int snapShotId, string orderByCondition, int formId) {
            object[] results = this.Invoke("ListSortSnapShot", new object[] {
                        snapShotId,
                        orderByCondition,
                        formId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListSortSnapShotAsync(int snapShotId, string orderByCondition, int formId) {
            this.ListSortSnapShotAsync(snapShotId, orderByCondition, formId, null);
        }
        
        /// <remarks/>
        public void ListSortSnapShotAsync(int snapShotId, string orderByCondition, int formId, object userState) {
            if ((this.ListSortSnapShotOperationCompleted == null)) {
                this.ListSortSnapShotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSortSnapShotOperationCompleted);
            }
            this.InvokeAsync("ListSortSnapShot", new object[] {
                        snapShotId,
                        orderByCondition,
                        formId}, this.ListSortSnapShotOperationCompleted, userState);
        }
        
        private void OnListSortSnapShotOperationCompleted(object arg) {
            if ((this.ListSortSnapShotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSortSnapShotCompleted(this, new ListSortSnapShotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSnapShot", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSnapShot(int snapShotId) {
            this.Invoke("DeleteSnapShot", new object[] {
                        snapShotId});
        }
        
        /// <remarks/>
        public void DeleteSnapShotAsync(int snapShotId) {
            this.DeleteSnapShotAsync(snapShotId, null);
        }
        
        /// <remarks/>
        public void DeleteSnapShotAsync(int snapShotId, object userState) {
            if ((this.DeleteSnapShotOperationCompleted == null)) {
                this.DeleteSnapShotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSnapShotOperationCompleted);
            }
            this.InvokeAsync("DeleteSnapShot", new object[] {
                        snapShotId}, this.DeleteSnapShotOperationCompleted, userState);
        }
        
        private void OnDeleteSnapShotOperationCompleted(object arg) {
            if ((this.DeleteSnapShotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSnapShotCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReportDetails(int reportId, int userId) {
            object[] results = this.Invoke("GetReportDetails", new object[] {
                        reportId,
                        userId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportDetailsAsync(int reportId, int userId) {
            this.GetReportDetailsAsync(reportId, userId, null);
        }
        
        /// <remarks/>
        public void GetReportDetailsAsync(int reportId, int userId, object userState) {
            if ((this.GetReportDetailsOperationCompleted == null)) {
                this.GetReportDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportDetailsOperationCompleted);
            }
            this.InvokeAsync("GetReportDetails", new object[] {
                        reportId,
                        userId}, this.GetReportDetailsOperationCompleted, userState);
        }
        
        private void OnGetReportDetailsOperationCompleted(object arg) {
            if ((this.GetReportDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportDetailsCompleted(this, new GetReportDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9008_GetReportDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F9008_GetReportDetails(int userID) {
            object[] results = this.Invoke("F9008_GetReportDetails", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F9008_GetReportDetailsAsync(int userID) {
            this.F9008_GetReportDetailsAsync(userID, null);
        }
        
        /// <remarks/>
        public void F9008_GetReportDetailsAsync(int userID, object userState) {
            if ((this.F9008_GetReportDetailsOperationCompleted == null)) {
                this.F9008_GetReportDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9008_GetReportDetailsOperationCompleted);
            }
            this.InvokeAsync("F9008_GetReportDetails", new object[] {
                        userID}, this.F9008_GetReportDetailsOperationCompleted, userState);
        }
        
        private void OnF9008_GetReportDetailsOperationCompleted(object arg) {
            if ((this.F9008_GetReportDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9008_GetReportDetailsCompleted(this, new F9008_GetReportDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9008_SaveReportDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F9008_SaveReportDetails(int userId, string printerConf) {
            this.Invoke("F9008_SaveReportDetails", new object[] {
                        userId,
                        printerConf});
        }
        
        /// <remarks/>
        public void F9008_SaveReportDetailsAsync(int userId, string printerConf) {
            this.F9008_SaveReportDetailsAsync(userId, printerConf, null);
        }
        
        /// <remarks/>
        public void F9008_SaveReportDetailsAsync(int userId, string printerConf, object userState) {
            if ((this.F9008_SaveReportDetailsOperationCompleted == null)) {
                this.F9008_SaveReportDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9008_SaveReportDetailsOperationCompleted);
            }
            this.InvokeAsync("F9008_SaveReportDetails", new object[] {
                        userId,
                        printerConf}, this.F9008_SaveReportDetailsOperationCompleted, userState);
        }
        
        private void OnF9008_SaveReportDetailsOperationCompleted(object arg) {
            if ((this.F9008_SaveReportDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9008_SaveReportDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAutoPrintStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAutoPrintStatus(int formId, int userId) {
            object[] results = this.Invoke("GetAutoPrintStatus", new object[] {
                        formId,
                        userId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAutoPrintStatusAsync(int formId, int userId) {
            this.GetAutoPrintStatusAsync(formId, userId, null);
        }
        
        /// <remarks/>
        public void GetAutoPrintStatusAsync(int formId, int userId, object userState) {
            if ((this.GetAutoPrintStatusOperationCompleted == null)) {
                this.GetAutoPrintStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAutoPrintStatusOperationCompleted);
            }
            this.InvokeAsync("GetAutoPrintStatus", new object[] {
                        formId,
                        userId}, this.GetAutoPrintStatusOperationCompleted, userState);
        }
        
        private void OnGetAutoPrintStatusOperationCompleted(object arg) {
            if ((this.GetAutoPrintStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAutoPrintStatusCompleted(this, new GetAutoPrintStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAutoPrint", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveAutoPrint(int formId, int userId, bool autoPrint) {
            this.Invoke("SaveAutoPrint", new object[] {
                        formId,
                        userId,
                        autoPrint});
        }
        
        /// <remarks/>
        public void SaveAutoPrintAsync(int formId, int userId, bool autoPrint) {
            this.SaveAutoPrintAsync(formId, userId, autoPrint, null);
        }
        
        /// <remarks/>
        public void SaveAutoPrintAsync(int formId, int userId, bool autoPrint, object userState) {
            if ((this.SaveAutoPrintOperationCompleted == null)) {
                this.SaveAutoPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAutoPrintOperationCompleted);
            }
            this.InvokeAsync("SaveAutoPrint", new object[] {
                        formId,
                        userId,
                        autoPrint}, this.SaveAutoPrintOperationCompleted, userState);
        }
        
        private void OnSaveAutoPrintOperationCompleted(object arg) {
            if ((this.SaveAutoPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAutoPrintCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMenuItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMenuItems(int userId, int applicationId) {
            object[] results = this.Invoke("GetMenuItems", new object[] {
                        userId,
                        applicationId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuItemsAsync(int userId, int applicationId) {
            this.GetMenuItemsAsync(userId, applicationId, null);
        }
        
        /// <remarks/>
        public void GetMenuItemsAsync(int userId, int applicationId, object userState) {
            if ((this.GetMenuItemsOperationCompleted == null)) {
                this.GetMenuItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuItemsOperationCompleted);
            }
            this.InvokeAsync("GetMenuItems", new object[] {
                        userId,
                        applicationId}, this.GetMenuItemsOperationCompleted, userState);
        }
        
        private void OnGetMenuItemsOperationCompleted(object arg) {
            if ((this.GetMenuItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuItemsCompleted(this, new GetMenuItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFormItems() {
            object[] results = this.Invoke("GetFormItems", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormItemsAsync() {
            this.GetFormItemsAsync(null);
        }
        
        /// <remarks/>
        public void GetFormItemsAsync(object userState) {
            if ((this.GetFormItemsOperationCompleted == null)) {
                this.GetFormItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormItemsOperationCompleted);
            }
            this.InvokeAsync("GetFormItems", new object[0], this.GetFormItemsOperationCompleted, userState);
        }
        
        private void OnGetFormItemsOperationCompleted(object arg) {
            if ((this.GetFormItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormItemsCompleted(this, new GetFormItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormTitle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormTitle(int formId) {
            object[] results = this.Invoke("GetFormTitle", new object[] {
                        formId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormTitleAsync(int formId) {
            this.GetFormTitleAsync(formId, null);
        }
        
        /// <remarks/>
        public void GetFormTitleAsync(int formId, object userState) {
            if ((this.GetFormTitleOperationCompleted == null)) {
                this.GetFormTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormTitleOperationCompleted);
            }
            this.InvokeAsync("GetFormTitle", new object[] {
                        formId}, this.GetFormTitleOperationCompleted, userState);
        }
        
        private void OnGetFormTitleOperationCompleted(object arg) {
            if ((this.GetFormTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormTitleCompleted(this, new GetFormTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormPermissions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFormPermissions(int userId, int applicationId) {
            object[] results = this.Invoke("GetFormPermissions", new object[] {
                        userId,
                        applicationId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormPermissionsAsync(int userId, int applicationId) {
            this.GetFormPermissionsAsync(userId, applicationId, null);
        }
        
        /// <remarks/>
        public void GetFormPermissionsAsync(int userId, int applicationId, object userState) {
            if ((this.GetFormPermissionsOperationCompleted == null)) {
                this.GetFormPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormPermissionsOperationCompleted);
            }
            this.InvokeAsync("GetFormPermissions", new object[] {
                        userId,
                        applicationId}, this.GetFormPermissionsOperationCompleted, userState);
        }
        
        private void OnGetFormPermissionsOperationCompleted(object arg) {
            if ((this.GetFormPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormPermissionsCompleted(this, new GetFormPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserGroupDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserGroupDetails() {
            object[] results = this.Invoke("GetUserGroupDetails", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGroupDetailsAsync() {
            this.GetUserGroupDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetUserGroupDetailsAsync(object userState) {
            if ((this.GetUserGroupDetailsOperationCompleted == null)) {
                this.GetUserGroupDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGroupDetailsOperationCompleted);
            }
            this.InvokeAsync("GetUserGroupDetails", new object[0], this.GetUserGroupDetailsOperationCompleted, userState);
        }
        
        private void OnGetUserGroupDetailsOperationCompleted(object arg) {
            if ((this.GetUserGroupDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGroupDetailsCompleted(this, new GetUserGroupDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveUserDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveUserDetails(int userId, string nameDisplay, string nameFull, string nameNet, string email, int active, int administrator) {
            object[] results = this.Invoke("SaveUserDetails", new object[] {
                        userId,
                        nameDisplay,
                        nameFull,
                        nameNet,
                        email,
                        active,
                        administrator});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUserDetailsAsync(int userId, string nameDisplay, string nameFull, string nameNet, string email, int active, int administrator) {
            this.SaveUserDetailsAsync(userId, nameDisplay, nameFull, nameNet, email, active, administrator, null);
        }
        
        /// <remarks/>
        public void SaveUserDetailsAsync(int userId, string nameDisplay, string nameFull, string nameNet, string email, int active, int administrator, object userState) {
            if ((this.SaveUserDetailsOperationCompleted == null)) {
                this.SaveUserDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUserDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveUserDetails", new object[] {
                        userId,
                        nameDisplay,
                        nameFull,
                        nameNet,
                        email,
                        active,
                        administrator}, this.SaveUserDetailsOperationCompleted, userState);
        }
        
        private void OnSaveUserDetailsOperationCompleted(object arg) {
            if ((this.SaveUserDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUserDetailsCompleted(this, new SaveUserDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUserDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUserDetails(int userId) {
            this.Invoke("DeleteUserDetails", new object[] {
                        userId});
        }
        
        /// <remarks/>
        public void DeleteUserDetailsAsync(int userId) {
            this.DeleteUserDetailsAsync(userId, null);
        }
        
        /// <remarks/>
        public void DeleteUserDetailsAsync(int userId, object userState) {
            if ((this.DeleteUserDetailsOperationCompleted == null)) {
                this.DeleteUserDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserDetailsOperationCompleted);
            }
            this.InvokeAsync("DeleteUserDetails", new object[] {
                        userId}, this.DeleteUserDetailsOperationCompleted, userState);
        }
        
        private void OnDeleteUserDetailsOperationCompleted(object arg) {
            if ((this.DeleteUserDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGroupDetails() {
            object[] results = this.Invoke("GetGroupDetails", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupDetailsAsync() {
            this.GetGroupDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetGroupDetailsAsync(object userState) {
            if ((this.GetGroupDetailsOperationCompleted == null)) {
                this.GetGroupDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupDetailsOperationCompleted);
            }
            this.InvokeAsync("GetGroupDetails", new object[0], this.GetGroupDetailsOperationCompleted, userState);
        }
        
        private void OnGetGroupDetailsOperationCompleted(object arg) {
            if ((this.GetGroupDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupDetailsCompleted(this, new GetGroupDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertGroupDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertGroupDetails(int groupId, string groupName, string description, string userGroup) {
            object[] results = this.Invoke("InsertGroupDetails", new object[] {
                        groupId,
                        groupName,
                        description,
                        userGroup});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGroupDetailsAsync(int groupId, string groupName, string description, string userGroup) {
            this.InsertGroupDetailsAsync(groupId, groupName, description, userGroup, null);
        }
        
        /// <remarks/>
        public void InsertGroupDetailsAsync(int groupId, string groupName, string description, string userGroup, object userState) {
            if ((this.InsertGroupDetailsOperationCompleted == null)) {
                this.InsertGroupDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGroupDetailsOperationCompleted);
            }
            this.InvokeAsync("InsertGroupDetails", new object[] {
                        groupId,
                        groupName,
                        description,
                        userGroup}, this.InsertGroupDetailsOperationCompleted, userState);
        }
        
        private void OnInsertGroupDetailsOperationCompleted(object arg) {
            if ((this.InsertGroupDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGroupDetailsCompleted(this, new InsertGroupDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteGroupDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteGroupDetails(int groupId) {
            this.Invoke("DeleteGroupDetails", new object[] {
                        groupId});
        }
        
        /// <remarks/>
        public void DeleteGroupDetailsAsync(int groupId) {
            this.DeleteGroupDetailsAsync(groupId, null);
        }
        
        /// <remarks/>
        public void DeleteGroupDetailsAsync(int groupId, object userState) {
            if ((this.DeleteGroupDetailsOperationCompleted == null)) {
                this.DeleteGroupDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGroupDetailsOperationCompleted);
            }
            this.InvokeAsync("DeleteGroupDetails", new object[] {
                        groupId}, this.DeleteGroupDetailsOperationCompleted, userState);
        }
        
        private void OnDeleteGroupDetailsOperationCompleted(object arg) {
            if ((this.DeleteGroupDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGroupDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupPermissionDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGroupPermissionDetails() {
            object[] results = this.Invoke("GetGroupPermissionDetails", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupPermissionDetailsAsync() {
            this.GetGroupPermissionDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetGroupPermissionDetailsAsync(object userState) {
            if ((this.GetGroupPermissionDetailsOperationCompleted == null)) {
                this.GetGroupPermissionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupPermissionDetailsOperationCompleted);
            }
            this.InvokeAsync("GetGroupPermissionDetails", new object[0], this.GetGroupPermissionDetailsOperationCompleted, userState);
        }
        
        private void OnGetGroupPermissionDetailsOperationCompleted(object arg) {
            if ((this.GetGroupPermissionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupPermissionDetailsCompleted(this, new GetGroupPermissionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveGroupPermissionDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveGroupPermissionDetails(int groupId, string formPermissions) {
            this.Invoke("SaveGroupPermissionDetails", new object[] {
                        groupId,
                        formPermissions});
        }
        
        /// <remarks/>
        public void SaveGroupPermissionDetailsAsync(int groupId, string formPermissions) {
            this.SaveGroupPermissionDetailsAsync(groupId, formPermissions, null);
        }
        
        /// <remarks/>
        public void SaveGroupPermissionDetailsAsync(int groupId, string formPermissions, object userState) {
            if ((this.SaveGroupPermissionDetailsOperationCompleted == null)) {
                this.SaveGroupPermissionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveGroupPermissionDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveGroupPermissionDetails", new object[] {
                        groupId,
                        formPermissions}, this.SaveGroupPermissionDetailsOperationCompleted, userState);
        }
        
        private void OnSaveGroupPermissionDetailsOperationCompleted(object arg) {
            if ((this.SaveGroupPermissionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveGroupPermissionDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LogException", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogException(int eventId, int priority, string severity, string title, System.DateTime timeStamp, string machineName, string appDomainName, string processId, string processName, string managedThreadName, string win32ThreadId, string message, string formattedMessage) {
            this.Invoke("LogException", new object[] {
                        eventId,
                        priority,
                        severity,
                        title,
                        timeStamp,
                        machineName,
                        appDomainName,
                        processId,
                        processName,
                        managedThreadName,
                        win32ThreadId,
                        message,
                        formattedMessage});
        }
        
        /// <remarks/>
        public void LogExceptionAsync(int eventId, int priority, string severity, string title, System.DateTime timeStamp, string machineName, string appDomainName, string processId, string processName, string managedThreadName, string win32ThreadId, string message, string formattedMessage) {
            this.LogExceptionAsync(eventId, priority, severity, title, timeStamp, machineName, appDomainName, processId, processName, managedThreadName, win32ThreadId, message, formattedMessage, null);
        }
        
        /// <remarks/>
        public void LogExceptionAsync(int eventId, int priority, string severity, string title, System.DateTime timeStamp, string machineName, string appDomainName, string processId, string processName, string managedThreadName, string win32ThreadId, string message, string formattedMessage, object userState) {
            if ((this.LogExceptionOperationCompleted == null)) {
                this.LogExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogExceptionOperationCompleted);
            }
            this.InvokeAsync("LogException", new object[] {
                        eventId,
                        priority,
                        severity,
                        title,
                        timeStamp,
                        machineName,
                        appDomainName,
                        processId,
                        processName,
                        managedThreadName,
                        win32ThreadId,
                        message,
                        formattedMessage}, this.LogExceptionOperationCompleted, userState);
        }
        
        private void OnLogExceptionOperationCompleted(object arg) {
            if ((this.LogExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogExceptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQueryUtilityList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetQueryUtilityList(int formId) {
            object[] results = this.Invoke("GetQueryUtilityList", new object[] {
                        formId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryUtilityListAsync(int formId) {
            this.GetQueryUtilityListAsync(formId, null);
        }
        
        /// <remarks/>
        public void GetQueryUtilityListAsync(int formId, object userState) {
            if ((this.GetQueryUtilityListOperationCompleted == null)) {
                this.GetQueryUtilityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryUtilityListOperationCompleted);
            }
            this.InvokeAsync("GetQueryUtilityList", new object[] {
                        formId}, this.GetQueryUtilityListOperationCompleted, userState);
        }
        
        private void OnGetQueryUtilityListOperationCompleted(object arg) {
            if ((this.GetQueryUtilityListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryUtilityListCompleted(this, new GetQueryUtilityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteQueryUtility", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteQueryUtility(int queryId) {
            this.Invoke("DeleteQueryUtility", new object[] {
                        queryId});
        }
        
        /// <remarks/>
        public void DeleteQueryUtilityAsync(int queryId) {
            this.DeleteQueryUtilityAsync(queryId, null);
        }
        
        /// <remarks/>
        public void DeleteQueryUtilityAsync(int queryId, object userState) {
            if ((this.DeleteQueryUtilityOperationCompleted == null)) {
                this.DeleteQueryUtilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteQueryUtilityOperationCompleted);
            }
            this.InvokeAsync("DeleteQueryUtility", new object[] {
                        queryId}, this.DeleteQueryUtilityOperationCompleted, userState);
        }
        
        private void OnDeleteQueryUtilityOperationCompleted(object arg) {
            if ((this.DeleteQueryUtilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteQueryUtilityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertQueryUtility", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertQueryUtility(int queryId, string queryName, int formId, string description, int userId, string whereCondition, string userWhereCondition, int overrideValue) {
            object[] results = this.Invoke("InsertQueryUtility", new object[] {
                        queryId,
                        queryName,
                        formId,
                        description,
                        userId,
                        whereCondition,
                        userWhereCondition,
                        overrideValue});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertQueryUtilityAsync(int queryId, string queryName, int formId, string description, int userId, string whereCondition, string userWhereCondition, int overrideValue) {
            this.InsertQueryUtilityAsync(queryId, queryName, formId, description, userId, whereCondition, userWhereCondition, overrideValue, null);
        }
        
        /// <remarks/>
        public void InsertQueryUtilityAsync(int queryId, string queryName, int formId, string description, int userId, string whereCondition, string userWhereCondition, int overrideValue, object userState) {
            if ((this.InsertQueryUtilityOperationCompleted == null)) {
                this.InsertQueryUtilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertQueryUtilityOperationCompleted);
            }
            this.InvokeAsync("InsertQueryUtility", new object[] {
                        queryId,
                        queryName,
                        formId,
                        description,
                        userId,
                        whereCondition,
                        userWhereCondition,
                        overrideValue}, this.InsertQueryUtilityOperationCompleted, userState);
        }
        
        private void OnInsertQueryUtilityOperationCompleted(object arg) {
            if ((this.InsertQueryUtilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertQueryUtilityCompleted(this, new InsertQueryUtilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSnapshotUtilityList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSnapshotUtilityList(int formId) {
            object[] results = this.Invoke("GetSnapshotUtilityList", new object[] {
                        formId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSnapshotUtilityListAsync(int formId) {
            this.GetSnapshotUtilityListAsync(formId, null);
        }
        
        /// <remarks/>
        public void GetSnapshotUtilityListAsync(int formId, object userState) {
            if ((this.GetSnapshotUtilityListOperationCompleted == null)) {
                this.GetSnapshotUtilityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSnapshotUtilityListOperationCompleted);
            }
            this.InvokeAsync("GetSnapshotUtilityList", new object[] {
                        formId}, this.GetSnapshotUtilityListOperationCompleted, userState);
        }
        
        private void OnGetSnapshotUtilityListOperationCompleted(object arg) {
            if ((this.GetSnapshotUtilityListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSnapshotUtilityListCompleted(this, new GetSnapshotUtilityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSnapshotUtility", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSnapshotUtility(int snapshotID) {
            this.Invoke("DeleteSnapshotUtility", new object[] {
                        snapshotID});
        }
        
        /// <remarks/>
        public void DeleteSnapshotUtilityAsync(int snapshotID) {
            this.DeleteSnapshotUtilityAsync(snapshotID, null);
        }
        
        /// <remarks/>
        public void DeleteSnapshotUtilityAsync(int snapshotID, object userState) {
            if ((this.DeleteSnapshotUtilityOperationCompleted == null)) {
                this.DeleteSnapshotUtilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSnapshotUtilityOperationCompleted);
            }
            this.InvokeAsync("DeleteSnapshotUtility", new object[] {
                        snapshotID}, this.DeleteSnapshotUtilityOperationCompleted, userState);
        }
        
        private void OnDeleteSnapshotUtilityOperationCompleted(object arg) {
            if ((this.DeleteSnapshotUtilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSnapshotUtilityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSnapshotUtility", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertSnapshotUtility(int snapshotId, string snapshotName, int snapshotFormId, string description, int recordCount, int userId, int overrideValue, string keyIds) {
            object[] results = this.Invoke("InsertSnapshotUtility", new object[] {
                        snapshotId,
                        snapshotName,
                        snapshotFormId,
                        description,
                        recordCount,
                        userId,
                        overrideValue,
                        keyIds});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSnapshotUtilityAsync(int snapshotId, string snapshotName, int snapshotFormId, string description, int recordCount, int userId, int overrideValue, string keyIds) {
            this.InsertSnapshotUtilityAsync(snapshotId, snapshotName, snapshotFormId, description, recordCount, userId, overrideValue, keyIds, null);
        }
        
        /// <remarks/>
        public void InsertSnapshotUtilityAsync(int snapshotId, string snapshotName, int snapshotFormId, string description, int recordCount, int userId, int overrideValue, string keyIds, object userState) {
            if ((this.InsertSnapshotUtilityOperationCompleted == null)) {
                this.InsertSnapshotUtilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSnapshotUtilityOperationCompleted);
            }
            this.InvokeAsync("InsertSnapshotUtility", new object[] {
                        snapshotId,
                        snapshotName,
                        snapshotFormId,
                        description,
                        recordCount,
                        userId,
                        overrideValue,
                        keyIds}, this.InsertSnapshotUtilityOperationCompleted, userState);
        }
        
        private void OnInsertSnapshotUtilityOperationCompleted(object arg) {
            if ((this.InsertSnapshotUtilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSnapshotUtilityCompleted(this, new InsertSnapshotUtilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Validation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Validation(string userNameText, string passwordText) {
            object[] results = this.Invoke("Validation", new object[] {
                        userNameText,
                        passwordText});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidationAsync(string userNameText, string passwordText) {
            this.ValidationAsync(userNameText, passwordText, null);
        }
        
        /// <remarks/>
        public void ValidationAsync(string userNameText, string passwordText, object userState) {
            if ((this.ValidationOperationCompleted == null)) {
                this.ValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidationOperationCompleted);
            }
            this.InvokeAsync("Validation", new object[] {
                        userNameText,
                        passwordText}, this.ValidationOperationCompleted, userState);
        }
        
        private void OnValidationOperationCompleted(object arg) {
            if ((this.ValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidationCompleted(this, new ValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserInformation(string userName, int applicationId) {
            object[] results = this.Invoke("GetUserInformation", new object[] {
                        userName,
                        applicationId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInformationAsync(string userName, int applicationId) {
            this.GetUserInformationAsync(userName, applicationId, null);
        }
        
        /// <remarks/>
        public void GetUserInformationAsync(string userName, int applicationId, object userState) {
            if ((this.GetUserInformationOperationCompleted == null)) {
                this.GetUserInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInformationOperationCompleted);
            }
            this.InvokeAsync("GetUserInformation", new object[] {
                        userName,
                        applicationId}, this.GetUserInformationOperationCompleted, userState);
        }
        
        private void OnGetUserInformationOperationCompleted(object arg) {
            if ((this.GetUserInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInformationCompleted(this, new GetUserInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConfigInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetConfigInformation() {
            object[] results = this.Invoke("GetConfigInformation", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigInformationAsync() {
            this.GetConfigInformationAsync(null);
        }
        
        /// <remarks/>
        public void GetConfigInformationAsync(object userState) {
            if ((this.GetConfigInformationOperationCompleted == null)) {
                this.GetConfigInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigInformationOperationCompleted);
            }
            this.InvokeAsync("GetConfigInformation", new object[0], this.GetConfigInformationOperationCompleted, userState);
        }
        
        private void OnGetConfigInformationOperationCompleted(object arg) {
            if ((this.GetConfigInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigInformationCompleted(this, new GetConfigInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuthenticationState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAuthenticationState() {
            object[] results = this.Invoke("GetAuthenticationState", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuthenticationStateAsync() {
            this.GetAuthenticationStateAsync(null);
        }
        
        /// <remarks/>
        public void GetAuthenticationStateAsync(object userState) {
            if ((this.GetAuthenticationStateOperationCompleted == null)) {
                this.GetAuthenticationStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuthenticationStateOperationCompleted);
            }
            this.InvokeAsync("GetAuthenticationState", new object[0], this.GetAuthenticationStateOperationCompleted, userState);
        }
        
        private void OnGetAuthenticationStateOperationCompleted(object arg) {
            if ((this.GetAuthenticationStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuthenticationStateCompleted(this, new GetAuthenticationStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSQLQueryResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSQLQueryResult(string sqlQuery) {
            object[] results = this.Invoke("GetSQLQueryResult", new object[] {
                        sqlQuery});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSQLQueryResultAsync(string sqlQuery) {
            this.GetSQLQueryResultAsync(sqlQuery, null);
        }
        
        /// <remarks/>
        public void GetSQLQueryResultAsync(string sqlQuery, object userState) {
            if ((this.GetSQLQueryResultOperationCompleted == null)) {
                this.GetSQLQueryResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSQLQueryResultOperationCompleted);
            }
            this.InvokeAsync("GetSQLQueryResult", new object[] {
                        sqlQuery}, this.GetSQLQueryResultOperationCompleted, userState);
        }
        
        private void OnGetSQLQueryResultOperationCompleted(object arg) {
            if ((this.GetSQLQueryResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSQLQueryResultCompleted(this, new GetSQLQueryResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSQLDescription", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSQLDescription(int categoryId) {
            object[] results = this.Invoke("GetSQLDescription", new object[] {
                        categoryId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSQLDescriptionAsync(int categoryId) {
            this.GetSQLDescriptionAsync(categoryId, null);
        }
        
        /// <remarks/>
        public void GetSQLDescriptionAsync(int categoryId, object userState) {
            if ((this.GetSQLDescriptionOperationCompleted == null)) {
                this.GetSQLDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSQLDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetSQLDescription", new object[] {
                        categoryId}, this.GetSQLDescriptionOperationCompleted, userState);
        }
        
        private void OnGetSQLDescriptionOperationCompleted(object arg) {
            if ((this.GetSQLDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSQLDescriptionCompleted(this, new GetSQLDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSQLString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSQLString(int categoryId, int sqlId) {
            object[] results = this.Invoke("GetSQLString", new object[] {
                        categoryId,
                        sqlId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSQLStringAsync(int categoryId, int sqlId) {
            this.GetSQLStringAsync(categoryId, sqlId, null);
        }
        
        /// <remarks/>
        public void GetSQLStringAsync(int categoryId, int sqlId, object userState) {
            if ((this.GetSQLStringOperationCompleted == null)) {
                this.GetSQLStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSQLStringOperationCompleted);
            }
            this.InvokeAsync("GetSQLString", new object[] {
                        categoryId,
                        sqlId}, this.GetSQLStringOperationCompleted, userState);
        }
        
        private void OnGetSQLStringOperationCompleted(object arg) {
            if ((this.GetSQLStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSQLStringCompleted(this, new GetSQLStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSQLCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSQLCategory() {
            object[] results = this.Invoke("GetSQLCategory", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSQLCategoryAsync() {
            this.GetSQLCategoryAsync(null);
        }
        
        /// <remarks/>
        public void GetSQLCategoryAsync(object userState) {
            if ((this.GetSQLCategoryOperationCompleted == null)) {
                this.GetSQLCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSQLCategoryOperationCompleted);
            }
            this.InvokeAsync("GetSQLCategory", new object[0], this.GetSQLCategoryOperationCompleted, userState);
        }
        
        private void OnGetSQLCategoryOperationCompleted(object arg) {
            if ((this.GetSQLCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSQLCategoryCompleted(this, new GetSQLCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveSQLQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveSQLQuery(int categoryId, string description, string statement, int moduleID, int userID, int sqlId) {
            object[] results = this.Invoke("SaveSQLQuery", new object[] {
                        categoryId,
                        description,
                        statement,
                        moduleID,
                        userID,
                        sqlId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSQLQueryAsync(int categoryId, string description, string statement, int moduleID, int userID, int sqlId) {
            this.SaveSQLQueryAsync(categoryId, description, statement, moduleID, userID, sqlId, null);
        }
        
        /// <remarks/>
        public void SaveSQLQueryAsync(int categoryId, string description, string statement, int moduleID, int userID, int sqlId, object userState) {
            if ((this.SaveSQLQueryOperationCompleted == null)) {
                this.SaveSQLQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSQLQueryOperationCompleted);
            }
            this.InvokeAsync("SaveSQLQuery", new object[] {
                        categoryId,
                        description,
                        statement,
                        moduleID,
                        userID,
                        sqlId}, this.SaveSQLQueryOperationCompleted, userState);
        }
        
        private void OnSaveSQLQueryOperationCompleted(object arg) {
            if ((this.SaveSQLQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSQLQueryCompleted(this, new SaveSQLQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9015_DeleteQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F9015_DeleteQuery(int sqlId) {
            object[] results = this.Invoke("F9015_DeleteQuery", new object[] {
                        sqlId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F9015_DeleteQueryAsync(int sqlId) {
            this.F9015_DeleteQueryAsync(sqlId, null);
        }
        
        /// <remarks/>
        public void F9015_DeleteQueryAsync(int sqlId, object userState) {
            if ((this.F9015_DeleteQueryOperationCompleted == null)) {
                this.F9015_DeleteQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9015_DeleteQueryOperationCompleted);
            }
            this.InvokeAsync("F9015_DeleteQuery", new object[] {
                        sqlId}, this.F9015_DeleteQueryOperationCompleted, userState);
        }
        
        private void OnF9015_DeleteQueryOperationCompleted(object arg) {
            if ((this.F9015_DeleteQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9015_DeleteQueryCompleted(this, new F9015_DeleteQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountyConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCountyConfiguration(int applicationId) {
            object[] results = this.Invoke("GetCountyConfiguration", new object[] {
                        applicationId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountyConfigurationAsync(int applicationId) {
            this.GetCountyConfigurationAsync(applicationId, null);
        }
        
        /// <remarks/>
        public void GetCountyConfigurationAsync(int applicationId, object userState) {
            if ((this.GetCountyConfigurationOperationCompleted == null)) {
                this.GetCountyConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountyConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetCountyConfiguration", new object[] {
                        applicationId}, this.GetCountyConfigurationOperationCompleted, userState);
        }
        
        private void OnGetCountyConfigurationOperationCompleted(object arg) {
            if ((this.GetCountyConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountyConfigurationCompleted(this, new GetCountyConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCountyConfigDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCountyConfigDetails(int configId, string configDescription) {
            this.Invoke("UpdateCountyConfigDetails", new object[] {
                        configId,
                        configDescription});
        }
        
        /// <remarks/>
        public void UpdateCountyConfigDetailsAsync(int configId, string configDescription) {
            this.UpdateCountyConfigDetailsAsync(configId, configDescription, null);
        }
        
        /// <remarks/>
        public void UpdateCountyConfigDetailsAsync(int configId, string configDescription, object userState) {
            if ((this.UpdateCountyConfigDetailsOperationCompleted == null)) {
                this.UpdateCountyConfigDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCountyConfigDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateCountyConfigDetails", new object[] {
                        configId,
                        configDescription}, this.UpdateCountyConfigDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateCountyConfigDetailsOperationCompleted(object arg) {
            if ((this.UpdateCountyConfigDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCountyConfigDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMortgageTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMortgageTemplate(int templateId) {
            object[] results = this.Invoke("GetMortgageTemplate", new object[] {
                        templateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMortgageTemplateAsync(int templateId) {
            this.GetMortgageTemplateAsync(templateId, null);
        }
        
        /// <remarks/>
        public void GetMortgageTemplateAsync(int templateId, object userState) {
            if ((this.GetMortgageTemplateOperationCompleted == null)) {
                this.GetMortgageTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMortgageTemplateOperationCompleted);
            }
            this.InvokeAsync("GetMortgageTemplate", new object[] {
                        templateId}, this.GetMortgageTemplateOperationCompleted, userState);
        }
        
        private void OnGetMortgageTemplateOperationCompleted(object arg) {
            if ((this.GetMortgageTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMortgageTemplateCompleted(this, new GetMortgageTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListMortgageTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListMortgageTemplate() {
            object[] results = this.Invoke("ListMortgageTemplate", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListMortgageTemplateAsync() {
            this.ListMortgageTemplateAsync(null);
        }
        
        /// <remarks/>
        public void ListMortgageTemplateAsync(object userState) {
            if ((this.ListMortgageTemplateOperationCompleted == null)) {
                this.ListMortgageTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMortgageTemplateOperationCompleted);
            }
            this.InvokeAsync("ListMortgageTemplate", new object[0], this.ListMortgageTemplateOperationCompleted, userState);
        }
        
        private void OnListMortgageTemplateOperationCompleted(object arg) {
            if ((this.ListMortgageTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMortgageTemplateCompleted(this, new ListMortgageTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListMortgageImportFileType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListMortgageImportFileType() {
            object[] results = this.Invoke("ListMortgageImportFileType", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListMortgageImportFileTypeAsync() {
            this.ListMortgageImportFileTypeAsync(null);
        }
        
        /// <remarks/>
        public void ListMortgageImportFileTypeAsync(object userState) {
            if ((this.ListMortgageImportFileTypeOperationCompleted == null)) {
                this.ListMortgageImportFileTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMortgageImportFileTypeOperationCompleted);
            }
            this.InvokeAsync("ListMortgageImportFileType", new object[0], this.ListMortgageImportFileTypeOperationCompleted, userState);
        }
        
        private void OnListMortgageImportFileTypeOperationCompleted(object arg) {
            if ((this.ListMortgageImportFileTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMortgageImportFileTypeCompleted(this, new ListMortgageImportFileTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveMortgageImportTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveMortgageImportTemplate(
                    int templateId, 
                    string templateName, 
                    int typeId, 
                    int userId, 
                    string description, 
                    string filePath, 
                    int statementIdPos, 
                    int statementIdWid, 
                    int statementNumPos, 
                    int statementNumWid, 
                    int amountPos, 
                    int amountWid, 
                    int commentPos, 
                    int commentWid, 
                    int bankCodePos, 
                    int bankCodeWid, 
                    int loanNumPos, 
                    int loanNumWid, 
                    int taxPayNamePos, 
                    int taxPayNameWid) {
            this.Invoke("SaveMortgageImportTemplate", new object[] {
                        templateId,
                        templateName,
                        typeId,
                        userId,
                        description,
                        filePath,
                        statementIdPos,
                        statementIdWid,
                        statementNumPos,
                        statementNumWid,
                        amountPos,
                        amountWid,
                        commentPos,
                        commentWid,
                        bankCodePos,
                        bankCodeWid,
                        loanNumPos,
                        loanNumWid,
                        taxPayNamePos,
                        taxPayNameWid});
        }
        
        /// <remarks/>
        public void SaveMortgageImportTemplateAsync(
                    int templateId, 
                    string templateName, 
                    int typeId, 
                    int userId, 
                    string description, 
                    string filePath, 
                    int statementIdPos, 
                    int statementIdWid, 
                    int statementNumPos, 
                    int statementNumWid, 
                    int amountPos, 
                    int amountWid, 
                    int commentPos, 
                    int commentWid, 
                    int bankCodePos, 
                    int bankCodeWid, 
                    int loanNumPos, 
                    int loanNumWid, 
                    int taxPayNamePos, 
                    int taxPayNameWid) {
            this.SaveMortgageImportTemplateAsync(templateId, templateName, typeId, userId, description, filePath, statementIdPos, statementIdWid, statementNumPos, statementNumWid, amountPos, amountWid, commentPos, commentWid, bankCodePos, bankCodeWid, loanNumPos, loanNumWid, taxPayNamePos, taxPayNameWid, null);
        }
        
        /// <remarks/>
        public void SaveMortgageImportTemplateAsync(
                    int templateId, 
                    string templateName, 
                    int typeId, 
                    int userId, 
                    string description, 
                    string filePath, 
                    int statementIdPos, 
                    int statementIdWid, 
                    int statementNumPos, 
                    int statementNumWid, 
                    int amountPos, 
                    int amountWid, 
                    int commentPos, 
                    int commentWid, 
                    int bankCodePos, 
                    int bankCodeWid, 
                    int loanNumPos, 
                    int loanNumWid, 
                    int taxPayNamePos, 
                    int taxPayNameWid, 
                    object userState) {
            if ((this.SaveMortgageImportTemplateOperationCompleted == null)) {
                this.SaveMortgageImportTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMortgageImportTemplateOperationCompleted);
            }
            this.InvokeAsync("SaveMortgageImportTemplate", new object[] {
                        templateId,
                        templateName,
                        typeId,
                        userId,
                        description,
                        filePath,
                        statementIdPos,
                        statementIdWid,
                        statementNumPos,
                        statementNumWid,
                        amountPos,
                        amountWid,
                        commentPos,
                        commentWid,
                        bankCodePos,
                        bankCodeWid,
                        loanNumPos,
                        loanNumWid,
                        taxPayNamePos,
                        taxPayNameWid}, this.SaveMortgageImportTemplateOperationCompleted, userState);
        }
        
        private void OnSaveMortgageImportTemplateOperationCompleted(object arg) {
            if ((this.SaveMortgageImportTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMortgageImportTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMortgageTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteMortgageTemplate(int templateId, bool overrideStatus) {
            object[] results = this.Invoke("DeleteMortgageTemplate", new object[] {
                        templateId,
                        overrideStatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMortgageTemplateAsync(int templateId, bool overrideStatus) {
            this.DeleteMortgageTemplateAsync(templateId, overrideStatus, null);
        }
        
        /// <remarks/>
        public void DeleteMortgageTemplateAsync(int templateId, bool overrideStatus, object userState) {
            if ((this.DeleteMortgageTemplateOperationCompleted == null)) {
                this.DeleteMortgageTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMortgageTemplateOperationCompleted);
            }
            this.InvokeAsync("DeleteMortgageTemplate", new object[] {
                        templateId,
                        overrideStatus}, this.DeleteMortgageTemplateOperationCompleted, userState);
        }
        
        private void OnDeleteMortgageTemplateOperationCompleted(object arg) {
            if ((this.DeleteMortgageTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMortgageTemplateCompleted(this, new DeleteMortgageTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMortgageImportStatementIds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMortgageImportStatementIds() {
            object[] results = this.Invoke("GetMortgageImportStatementIds", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMortgageImportStatementIdsAsync() {
            this.GetMortgageImportStatementIdsAsync(null);
        }
        
        /// <remarks/>
        public void GetMortgageImportStatementIdsAsync(object userState) {
            if ((this.GetMortgageImportStatementIdsOperationCompleted == null)) {
                this.GetMortgageImportStatementIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMortgageImportStatementIdsOperationCompleted);
            }
            this.InvokeAsync("GetMortgageImportStatementIds", new object[0], this.GetMortgageImportStatementIdsOperationCompleted, userState);
        }
        
        private void OnGetMortgageImportStatementIdsOperationCompleted(object arg) {
            if ((this.GetMortgageImportStatementIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMortgageImportStatementIdsCompleted(this, new GetMortgageImportStatementIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMortgageImportStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMortgageImportStatement(int importId, bool nextAvailableRecord) {
            object[] results = this.Invoke("GetMortgageImportStatement", new object[] {
                        importId,
                        nextAvailableRecord});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMortgageImportStatementAsync(int importId, bool nextAvailableRecord) {
            this.GetMortgageImportStatementAsync(importId, nextAvailableRecord, null);
        }
        
        /// <remarks/>
        public void GetMortgageImportStatementAsync(int importId, bool nextAvailableRecord, object userState) {
            if ((this.GetMortgageImportStatementOperationCompleted == null)) {
                this.GetMortgageImportStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMortgageImportStatementOperationCompleted);
            }
            this.InvokeAsync("GetMortgageImportStatement", new object[] {
                        importId,
                        nextAvailableRecord}, this.GetMortgageImportStatementOperationCompleted, userState);
        }
        
        private void OnGetMortgageImportStatementOperationCompleted(object arg) {
            if ((this.GetMortgageImportStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMortgageImportStatementCompleted(this, new GetMortgageImportStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveMortgageImportEntries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveMortgageImportEntries(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime receiptDate, System.DateTime interestDate, int payCode, int userId, int rollYear, int ppaymentId, string mortgageImportEntries) {
            object[] results = this.Invoke("SaveMortgageImportEntries", new object[] {
                        importId,
                        templateId,
                        templateName,
                        typeId,
                        filePath,
                        receiptDate,
                        interestDate,
                        payCode,
                        userId,
                        rollYear,
                        ppaymentId,
                        mortgageImportEntries});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMortgageImportEntriesAsync(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime receiptDate, System.DateTime interestDate, int payCode, int userId, int rollYear, int ppaymentId, string mortgageImportEntries) {
            this.SaveMortgageImportEntriesAsync(importId, templateId, templateName, typeId, filePath, receiptDate, interestDate, payCode, userId, rollYear, ppaymentId, mortgageImportEntries, null);
        }
        
        /// <remarks/>
        public void SaveMortgageImportEntriesAsync(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime receiptDate, System.DateTime interestDate, int payCode, int userId, int rollYear, int ppaymentId, string mortgageImportEntries, object userState) {
            if ((this.SaveMortgageImportEntriesOperationCompleted == null)) {
                this.SaveMortgageImportEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMortgageImportEntriesOperationCompleted);
            }
            this.InvokeAsync("SaveMortgageImportEntries", new object[] {
                        importId,
                        templateId,
                        templateName,
                        typeId,
                        filePath,
                        receiptDate,
                        interestDate,
                        payCode,
                        userId,
                        rollYear,
                        ppaymentId,
                        mortgageImportEntries}, this.SaveMortgageImportEntriesOperationCompleted, userState);
        }
        
        private void OnSaveMortgageImportEntriesOperationCompleted(object arg) {
            if ((this.SaveMortgageImportEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMortgageImportEntriesCompleted(this, new SaveMortgageImportEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMortgageImportTemplateDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMortgageImportTemplateDetails() {
            object[] results = this.Invoke("GetMortgageImportTemplateDetails", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMortgageImportTemplateDetailsAsync() {
            this.GetMortgageImportTemplateDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetMortgageImportTemplateDetailsAsync(object userState) {
            if ((this.GetMortgageImportTemplateDetailsOperationCompleted == null)) {
                this.GetMortgageImportTemplateDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMortgageImportTemplateDetailsOperationCompleted);
            }
            this.InvokeAsync("GetMortgageImportTemplateDetails", new object[0], this.GetMortgageImportTemplateDetailsOperationCompleted, userState);
        }
        
        private void OnGetMortgageImportTemplateDetailsOperationCompleted(object arg) {
            if ((this.GetMortgageImportTemplateDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMortgageImportTemplateDetailsCompleted(this, new GetMortgageImportTemplateDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MortgageImportCheckErrors", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MortgageImportCheckErrors(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime recieptDate, System.DateTime interestDate, int payCode, int userId, int rollYear, int ppaymentId) {
            object[] results = this.Invoke("MortgageImportCheckErrors", new object[] {
                        importId,
                        templateId,
                        templateName,
                        typeId,
                        filePath,
                        recieptDate,
                        interestDate,
                        payCode,
                        userId,
                        rollYear,
                        ppaymentId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MortgageImportCheckErrorsAsync(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime recieptDate, System.DateTime interestDate, int payCode, int userId, int rollYear, int ppaymentId) {
            this.MortgageImportCheckErrorsAsync(importId, templateId, templateName, typeId, filePath, recieptDate, interestDate, payCode, userId, rollYear, ppaymentId, null);
        }
        
        /// <remarks/>
        public void MortgageImportCheckErrorsAsync(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime recieptDate, System.DateTime interestDate, int payCode, int userId, int rollYear, int ppaymentId, object userState) {
            if ((this.MortgageImportCheckErrorsOperationCompleted == null)) {
                this.MortgageImportCheckErrorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMortgageImportCheckErrorsOperationCompleted);
            }
            this.InvokeAsync("MortgageImportCheckErrors", new object[] {
                        importId,
                        templateId,
                        templateName,
                        typeId,
                        filePath,
                        recieptDate,
                        interestDate,
                        payCode,
                        userId,
                        rollYear,
                        ppaymentId}, this.MortgageImportCheckErrorsOperationCompleted, userState);
        }
        
        private void OnMortgageImportCheckErrorsOperationCompleted(object arg) {
            if ((this.MortgageImportCheckErrorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MortgageImportCheckErrorsCompleted(this, new MortgageImportCheckErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckMortgageImportValidReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckMortgageImportValidReceipt(int importId, System.DateTime receiptDate) {
            object[] results = this.Invoke("CheckMortgageImportValidReceipt", new object[] {
                        importId,
                        receiptDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckMortgageImportValidReceiptAsync(int importId, System.DateTime receiptDate) {
            this.CheckMortgageImportValidReceiptAsync(importId, receiptDate, null);
        }
        
        /// <remarks/>
        public void CheckMortgageImportValidReceiptAsync(int importId, System.DateTime receiptDate, object userState) {
            if ((this.CheckMortgageImportValidReceiptOperationCompleted == null)) {
                this.CheckMortgageImportValidReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMortgageImportValidReceiptOperationCompleted);
            }
            this.InvokeAsync("CheckMortgageImportValidReceipt", new object[] {
                        importId,
                        receiptDate}, this.CheckMortgageImportValidReceiptOperationCompleted, userState);
        }
        
        private void OnCheckMortgageImportValidReceiptOperationCompleted(object arg) {
            if ((this.CheckMortgageImportValidReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMortgageImportValidReceiptCompleted(this, new CheckMortgageImportValidReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveMortgageImport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveMortgageImport(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime receiptDate, System.DateTime interestDate, int payCode, int userId, int rollYear, int ppaymentId, bool resetErrorCheck) {
            object[] results = this.Invoke("SaveMortgageImport", new object[] {
                        importId,
                        templateId,
                        templateName,
                        typeId,
                        filePath,
                        receiptDate,
                        interestDate,
                        payCode,
                        userId,
                        rollYear,
                        ppaymentId,
                        resetErrorCheck});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMortgageImportAsync(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime receiptDate, System.DateTime interestDate, int payCode, int userId, int rollYear, int ppaymentId, bool resetErrorCheck) {
            this.SaveMortgageImportAsync(importId, templateId, templateName, typeId, filePath, receiptDate, interestDate, payCode, userId, rollYear, ppaymentId, resetErrorCheck, null);
        }
        
        /// <remarks/>
        public void SaveMortgageImportAsync(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime receiptDate, System.DateTime interestDate, int payCode, int userId, int rollYear, int ppaymentId, bool resetErrorCheck, object userState) {
            if ((this.SaveMortgageImportOperationCompleted == null)) {
                this.SaveMortgageImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMortgageImportOperationCompleted);
            }
            this.InvokeAsync("SaveMortgageImport", new object[] {
                        importId,
                        templateId,
                        templateName,
                        typeId,
                        filePath,
                        receiptDate,
                        interestDate,
                        payCode,
                        userId,
                        rollYear,
                        ppaymentId,
                        resetErrorCheck}, this.SaveMortgageImportOperationCompleted, userState);
        }
        
        private void OnSaveMortgageImportOperationCompleted(object arg) {
            if ((this.SaveMortgageImportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMortgageImportCompleted(this, new SaveMortgageImportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateReceipt(int importId, int templateID, string templateName, string filePath, int typeId, System.DateTime receiptDate, System.DateTime interestDate, int payCode, int userId, int rollYear, int ppaymentID, bool resetErrorCheck) {
            object[] results = this.Invoke("CreateReceipt", new object[] {
                        importId,
                        templateID,
                        templateName,
                        filePath,
                        typeId,
                        receiptDate,
                        interestDate,
                        payCode,
                        userId,
                        rollYear,
                        ppaymentID,
                        resetErrorCheck});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateReceiptAsync(int importId, int templateID, string templateName, string filePath, int typeId, System.DateTime receiptDate, System.DateTime interestDate, int payCode, int userId, int rollYear, int ppaymentID, bool resetErrorCheck) {
            this.CreateReceiptAsync(importId, templateID, templateName, filePath, typeId, receiptDate, interestDate, payCode, userId, rollYear, ppaymentID, resetErrorCheck, null);
        }
        
        /// <remarks/>
        public void CreateReceiptAsync(int importId, int templateID, string templateName, string filePath, int typeId, System.DateTime receiptDate, System.DateTime interestDate, int payCode, int userId, int rollYear, int ppaymentID, bool resetErrorCheck, object userState) {
            if ((this.CreateReceiptOperationCompleted == null)) {
                this.CreateReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateReceiptOperationCompleted);
            }
            this.InvokeAsync("CreateReceipt", new object[] {
                        importId,
                        templateID,
                        templateName,
                        filePath,
                        typeId,
                        receiptDate,
                        interestDate,
                        payCode,
                        userId,
                        rollYear,
                        ppaymentID,
                        resetErrorCheck}, this.CreateReceiptOperationCompleted, userState);
        }
        
        private void OnCreateReceiptOperationCompleted(object arg) {
            if ((this.CreateReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateReceiptCompleted(this, new CreateReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMortgageImport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteMortgageImport(int importId) {
            object[] results = this.Invoke("DeleteMortgageImport", new object[] {
                        importId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMortgageImportAsync(int importId) {
            this.DeleteMortgageImportAsync(importId, null);
        }
        
        /// <remarks/>
        public void DeleteMortgageImportAsync(int importId, object userState) {
            if ((this.DeleteMortgageImportOperationCompleted == null)) {
                this.DeleteMortgageImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMortgageImportOperationCompleted);
            }
            this.InvokeAsync("DeleteMortgageImport", new object[] {
                        importId}, this.DeleteMortgageImportOperationCompleted, userState);
        }
        
        private void OnDeleteMortgageImportOperationCompleted(object arg) {
            if ((this.DeleteMortgageImportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMortgageImportCompleted(this, new DeleteMortgageImportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMortgageImportFileEntries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteMortgageImportFileEntries(int importId) {
            object[] results = this.Invoke("DeleteMortgageImportFileEntries", new object[] {
                        importId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMortgageImportFileEntriesAsync(int importId) {
            this.DeleteMortgageImportFileEntriesAsync(importId, null);
        }
        
        /// <remarks/>
        public void DeleteMortgageImportFileEntriesAsync(int importId, object userState) {
            if ((this.DeleteMortgageImportFileEntriesOperationCompleted == null)) {
                this.DeleteMortgageImportFileEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMortgageImportFileEntriesOperationCompleted);
            }
            this.InvokeAsync("DeleteMortgageImportFileEntries", new object[] {
                        importId}, this.DeleteMortgageImportFileEntriesOperationCompleted, userState);
        }
        
        private void OnDeleteMortgageImportFileEntriesOperationCompleted(object arg) {
            if ((this.DeleteMortgageImportFileEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMortgageImportFileEntriesCompleted(this, new DeleteMortgageImportFileEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetErrorEngine", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetErrorEngine(int errorTypeId) {
            object[] results = this.Invoke("GetErrorEngine", new object[] {
                        errorTypeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetErrorEngineAsync(int errorTypeId) {
            this.GetErrorEngineAsync(errorTypeId, null);
        }
        
        /// <remarks/>
        public void GetErrorEngineAsync(int errorTypeId, object userState) {
            if ((this.GetErrorEngineOperationCompleted == null)) {
                this.GetErrorEngineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetErrorEngineOperationCompleted);
            }
            this.InvokeAsync("GetErrorEngine", new object[] {
                        errorTypeId}, this.GetErrorEngineOperationCompleted, userState);
        }
        
        private void OnGetErrorEngineOperationCompleted(object arg) {
            if ((this.GetErrorEngineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetErrorEngineCompleted(this, new GetErrorEngineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertErrorEngine", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertErrorEngine(string errorDate, int userId, string userIP, int errorTypeId, string parameter, string comment) {
            this.Invoke("InsertErrorEngine", new object[] {
                        errorDate,
                        userId,
                        userIP,
                        errorTypeId,
                        parameter,
                        comment});
        }
        
        /// <remarks/>
        public void InsertErrorEngineAsync(string errorDate, int userId, string userIP, int errorTypeId, string parameter, string comment) {
            this.InsertErrorEngineAsync(errorDate, userId, userIP, errorTypeId, parameter, comment, null);
        }
        
        /// <remarks/>
        public void InsertErrorEngineAsync(string errorDate, int userId, string userIP, int errorTypeId, string parameter, string comment, object userState) {
            if ((this.InsertErrorEngineOperationCompleted == null)) {
                this.InsertErrorEngineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertErrorEngineOperationCompleted);
            }
            this.InvokeAsync("InsertErrorEngine", new object[] {
                        errorDate,
                        userId,
                        userIP,
                        errorTypeId,
                        parameter,
                        comment}, this.InsertErrorEngineOperationCompleted, userState);
        }
        
        private void OnInsertErrorEngineOperationCompleted(object arg) {
            if ((this.InsertErrorEngineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertErrorEngineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListNextNumberConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListNextNumberConfiguration() {
            object[] results = this.Invoke("ListNextNumberConfiguration", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListNextNumberConfigurationAsync() {
            this.ListNextNumberConfigurationAsync(null);
        }
        
        /// <remarks/>
        public void ListNextNumberConfigurationAsync(object userState) {
            if ((this.ListNextNumberConfigurationOperationCompleted == null)) {
                this.ListNextNumberConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListNextNumberConfigurationOperationCompleted);
            }
            this.InvokeAsync("ListNextNumberConfiguration", new object[0], this.ListNextNumberConfigurationOperationCompleted, userState);
        }
        
        private void OnListNextNumberConfigurationOperationCompleted(object arg) {
            if ((this.ListNextNumberConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListNextNumberConfigurationCompleted(this, new ListNextNumberConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckNextNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CheckNextNumber(int rollYear, int nextNum, string formula) {
            object[] results = this.Invoke("CheckNextNumber", new object[] {
                        rollYear,
                        nextNum,
                        formula});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CheckNextNumberAsync(int rollYear, int nextNum, string formula) {
            this.CheckNextNumberAsync(rollYear, nextNum, formula, null);
        }
        
        /// <remarks/>
        public void CheckNextNumberAsync(int rollYear, int nextNum, string formula, object userState) {
            if ((this.CheckNextNumberOperationCompleted == null)) {
                this.CheckNextNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckNextNumberOperationCompleted);
            }
            this.InvokeAsync("CheckNextNumber", new object[] {
                        rollYear,
                        nextNum,
                        formula}, this.CheckNextNumberOperationCompleted, userState);
        }
        
        private void OnCheckNextNumberOperationCompleted(object arg) {
            if ((this.CheckNextNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckNextNumberCompleted(this, new CheckNextNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateNextNumberConfigDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateNextNumberConfigDetails(int nextNumId, int nextNum, string formula) {
            this.Invoke("UpdateNextNumberConfigDetails", new object[] {
                        nextNumId,
                        nextNum,
                        formula});
        }
        
        /// <remarks/>
        public void UpdateNextNumberConfigDetailsAsync(int nextNumId, int nextNum, string formula) {
            this.UpdateNextNumberConfigDetailsAsync(nextNumId, nextNum, formula, null);
        }
        
        /// <remarks/>
        public void UpdateNextNumberConfigDetailsAsync(int nextNumId, int nextNum, string formula, object userState) {
            if ((this.UpdateNextNumberConfigDetailsOperationCompleted == null)) {
                this.UpdateNextNumberConfigDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNextNumberConfigDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateNextNumberConfigDetails", new object[] {
                        nextNumId,
                        nextNum,
                        formula}, this.UpdateNextNumberConfigDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateNextNumberConfigDetailsOperationCompleted(object arg) {
            if ((this.UpdateNextNumberConfigDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNextNumberConfigDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1107_ExciseWorkQueue_GetWorkQueueSearchResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1107_ExciseWorkQueue_GetWorkQueueSearchResult(string parcelNumber, string name, string saleDate, string address, string taxCode, string treasurer, string assessor) {
            object[] results = this.Invoke("F1107_ExciseWorkQueue_GetWorkQueueSearchResult", new object[] {
                        parcelNumber,
                        name,
                        saleDate,
                        address,
                        taxCode,
                        treasurer,
                        assessor});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1107_ExciseWorkQueue_GetWorkQueueSearchResultAsync(string parcelNumber, string name, string saleDate, string address, string taxCode, string treasurer, string assessor) {
            this.F1107_ExciseWorkQueue_GetWorkQueueSearchResultAsync(parcelNumber, name, saleDate, address, taxCode, treasurer, assessor, null);
        }
        
        /// <remarks/>
        public void F1107_ExciseWorkQueue_GetWorkQueueSearchResultAsync(string parcelNumber, string name, string saleDate, string address, string taxCode, string treasurer, string assessor, object userState) {
            if ((this.F1107_ExciseWorkQueue_GetWorkQueueSearchResultOperationCompleted == null)) {
                this.F1107_ExciseWorkQueue_GetWorkQueueSearchResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1107_ExciseWorkQueue_GetWorkQueueSearchResultOperationCompleted);
            }
            this.InvokeAsync("F1107_ExciseWorkQueue_GetWorkQueueSearchResult", new object[] {
                        parcelNumber,
                        name,
                        saleDate,
                        address,
                        taxCode,
                        treasurer,
                        assessor}, this.F1107_ExciseWorkQueue_GetWorkQueueSearchResultOperationCompleted, userState);
        }
        
        private void OnF1107_ExciseWorkQueue_GetWorkQueueSearchResultOperationCompleted(object arg) {
            if ((this.F1107_ExciseWorkQueue_GetWorkQueueSearchResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1107_ExciseWorkQueue_GetWorkQueueSearchResultCompleted(this, new F1107_ExciseWorkQueue_GetWorkQueueSearchResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1109_ListManagementQueue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1109_ListManagementQueue(string parcelNumber, string name, string saleDate, string address, string taxCode, string treasurer, string assessor, int rollYear) {
            object[] results = this.Invoke("F1109_ListManagementQueue", new object[] {
                        parcelNumber,
                        name,
                        saleDate,
                        address,
                        taxCode,
                        treasurer,
                        assessor,
                        rollYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1109_ListManagementQueueAsync(string parcelNumber, string name, string saleDate, string address, string taxCode, string treasurer, string assessor, int rollYear) {
            this.F1109_ListManagementQueueAsync(parcelNumber, name, saleDate, address, taxCode, treasurer, assessor, rollYear, null);
        }
        
        /// <remarks/>
        public void F1109_ListManagementQueueAsync(string parcelNumber, string name, string saleDate, string address, string taxCode, string treasurer, string assessor, int rollYear, object userState) {
            if ((this.F1109_ListManagementQueueOperationCompleted == null)) {
                this.F1109_ListManagementQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1109_ListManagementQueueOperationCompleted);
            }
            this.InvokeAsync("F1109_ListManagementQueue", new object[] {
                        parcelNumber,
                        name,
                        saleDate,
                        address,
                        taxCode,
                        treasurer,
                        assessor,
                        rollYear}, this.F1109_ListManagementQueueOperationCompleted, userState);
        }
        
        private void OnF1109_ListManagementQueueOperationCompleted(object arg) {
            if ((this.F1109_ListManagementQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1109_ListManagementQueueCompleted(this, new F1109_ListManagementQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1109_ManagementQueueFilterResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1109_ManagementQueueFilterResult(int statusFilterId, int rollYear, string filterFromDate, string filterToDate) {
            object[] results = this.Invoke("F1109_ManagementQueueFilterResult", new object[] {
                        statusFilterId,
                        rollYear,
                        filterFromDate,
                        filterToDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1109_ManagementQueueFilterResultAsync(int statusFilterId, int rollYear, string filterFromDate, string filterToDate) {
            this.F1109_ManagementQueueFilterResultAsync(statusFilterId, rollYear, filterFromDate, filterToDate, null);
        }
        
        /// <remarks/>
        public void F1109_ManagementQueueFilterResultAsync(int statusFilterId, int rollYear, string filterFromDate, string filterToDate, object userState) {
            if ((this.F1109_ManagementQueueFilterResultOperationCompleted == null)) {
                this.F1109_ManagementQueueFilterResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1109_ManagementQueueFilterResultOperationCompleted);
            }
            this.InvokeAsync("F1109_ManagementQueueFilterResult", new object[] {
                        statusFilterId,
                        rollYear,
                        filterFromDate,
                        filterToDate}, this.F1109_ManagementQueueFilterResultOperationCompleted, userState);
        }
        
        private void OnF1109_ManagementQueueFilterResultOperationCompleted(object arg) {
            if ((this.F1109_ManagementQueueFilterResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1109_ManagementQueueFilterResultCompleted(this, new F1109_ManagementQueueFilterResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1109_FilterSearchAffidavit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1109_FilterSearchAffidavit(string filterXml) {
            object[] results = this.Invoke("F1109_FilterSearchAffidavit", new object[] {
                        filterXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1109_FilterSearchAffidavitAsync(string filterXml) {
            this.F1109_FilterSearchAffidavitAsync(filterXml, null);
        }
        
        /// <remarks/>
        public void F1109_FilterSearchAffidavitAsync(string filterXml, object userState) {
            if ((this.F1109_FilterSearchAffidavitOperationCompleted == null)) {
                this.F1109_FilterSearchAffidavitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1109_FilterSearchAffidavitOperationCompleted);
            }
            this.InvokeAsync("F1109_FilterSearchAffidavit", new object[] {
                        filterXml}, this.F1109_FilterSearchAffidavitOperationCompleted, userState);
        }
        
        private void OnF1109_FilterSearchAffidavitOperationCompleted(object arg) {
            if ((this.F1109_FilterSearchAffidavitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1109_FilterSearchAffidavitCompleted(this, new F1109_FilterSearchAffidavitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1109_ListRollYear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1109_ListRollYear() {
            object[] results = this.Invoke("F1109_ListRollYear", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1109_ListRollYearAsync() {
            this.F1109_ListRollYearAsync(null);
        }
        
        /// <remarks/>
        public void F1109_ListRollYearAsync(object userState) {
            if ((this.F1109_ListRollYearOperationCompleted == null)) {
                this.F1109_ListRollYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1109_ListRollYearOperationCompleted);
            }
            this.InvokeAsync("F1109_ListRollYear", new object[0], this.F1109_ListRollYearOperationCompleted, userState);
        }
        
        private void OnF1109_ListRollYearOperationCompleted(object arg) {
            if ((this.F1109_ListRollYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1109_ListRollYearCompleted(this, new F1109_ListRollYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1108_GetSubmitAffidavit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1108_GetSubmitAffidavit(string statementId) {
            object[] results = this.Invoke("F1108_GetSubmitAffidavit", new object[] {
                        statementId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1108_GetSubmitAffidavitAsync(string statementId) {
            this.F1108_GetSubmitAffidavitAsync(statementId, null);
        }
        
        /// <remarks/>
        public void F1108_GetSubmitAffidavitAsync(string statementId, object userState) {
            if ((this.F1108_GetSubmitAffidavitOperationCompleted == null)) {
                this.F1108_GetSubmitAffidavitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1108_GetSubmitAffidavitOperationCompleted);
            }
            this.InvokeAsync("F1108_GetSubmitAffidavit", new object[] {
                        statementId}, this.F1108_GetSubmitAffidavitOperationCompleted, userState);
        }
        
        private void OnF1108_GetSubmitAffidavitOperationCompleted(object arg) {
            if ((this.F1108_GetSubmitAffidavitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1108_GetSubmitAffidavitCompleted(this, new F1108_GetSubmitAffidavitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1108_ListManagementQueue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1108_ListManagementQueue(string parcelNumber, string name, string saleDate, string address, string taxCode, string receiptNumber) {
            object[] results = this.Invoke("F1108_ListManagementQueue", new object[] {
                        parcelNumber,
                        name,
                        saleDate,
                        address,
                        taxCode,
                        receiptNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1108_ListManagementQueueAsync(string parcelNumber, string name, string saleDate, string address, string taxCode, string receiptNumber) {
            this.F1108_ListManagementQueueAsync(parcelNumber, name, saleDate, address, taxCode, receiptNumber, null);
        }
        
        /// <remarks/>
        public void F1108_ListManagementQueueAsync(string parcelNumber, string name, string saleDate, string address, string taxCode, string receiptNumber, object userState) {
            if ((this.F1108_ListManagementQueueOperationCompleted == null)) {
                this.F1108_ListManagementQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1108_ListManagementQueueOperationCompleted);
            }
            this.InvokeAsync("F1108_ListManagementQueue", new object[] {
                        parcelNumber,
                        name,
                        saleDate,
                        address,
                        taxCode,
                        receiptNumber}, this.F1108_ListManagementQueueOperationCompleted, userState);
        }
        
        private void OnF1108_ListManagementQueueOperationCompleted(object arg) {
            if ((this.F1108_ListManagementQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1108_ListManagementQueueCompleted(this, new F1108_ListManagementQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1108_ListConfigurationDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1108_ListConfigurationDetail() {
            object[] results = this.Invoke("F1108_ListConfigurationDetail", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1108_ListConfigurationDetailAsync() {
            this.F1108_ListConfigurationDetailAsync(null);
        }
        
        /// <remarks/>
        public void F1108_ListConfigurationDetailAsync(object userState) {
            if ((this.F1108_ListConfigurationDetailOperationCompleted == null)) {
                this.F1108_ListConfigurationDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1108_ListConfigurationDetailOperationCompleted);
            }
            this.InvokeAsync("F1108_ListConfigurationDetail", new object[0], this.F1108_ListConfigurationDetailOperationCompleted, userState);
        }
        
        private void OnF1108_ListConfigurationDetailOperationCompleted(object arg) {
            if ((this.F1108_ListConfigurationDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1108_ListConfigurationDetailCompleted(this, new F1108_ListConfigurationDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1108_GetSubmitAffidavitReply", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1108_GetSubmitAffidavitReply(string reetReplyXml, int userID) {
            object[] results = this.Invoke("F1108_GetSubmitAffidavitReply", new object[] {
                        reetReplyXml,
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1108_GetSubmitAffidavitReplyAsync(string reetReplyXml, int userID) {
            this.F1108_GetSubmitAffidavitReplyAsync(reetReplyXml, userID, null);
        }
        
        /// <remarks/>
        public void F1108_GetSubmitAffidavitReplyAsync(string reetReplyXml, int userID, object userState) {
            if ((this.F1108_GetSubmitAffidavitReplyOperationCompleted == null)) {
                this.F1108_GetSubmitAffidavitReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1108_GetSubmitAffidavitReplyOperationCompleted);
            }
            this.InvokeAsync("F1108_GetSubmitAffidavitReply", new object[] {
                        reetReplyXml,
                        userID}, this.F1108_GetSubmitAffidavitReplyOperationCompleted, userState);
        }
        
        private void OnF1108_GetSubmitAffidavitReplyOperationCompleted(object arg) {
            if ((this.F1108_GetSubmitAffidavitReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1108_GetSubmitAffidavitReplyCompleted(this, new F1108_GetSubmitAffidavitReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1108_SaveReplyReetXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1108_SaveReplyReetXml(string reetXml, string reetReplyXml) {
            object[] results = this.Invoke("F1108_SaveReplyReetXml", new object[] {
                        reetXml,
                        reetReplyXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1108_SaveReplyReetXmlAsync(string reetXml, string reetReplyXml) {
            this.F1108_SaveReplyReetXmlAsync(reetXml, reetReplyXml, null);
        }
        
        /// <remarks/>
        public void F1108_SaveReplyReetXmlAsync(string reetXml, string reetReplyXml, object userState) {
            if ((this.F1108_SaveReplyReetXmlOperationCompleted == null)) {
                this.F1108_SaveReplyReetXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1108_SaveReplyReetXmlOperationCompleted);
            }
            this.InvokeAsync("F1108_SaveReplyReetXml", new object[] {
                        reetXml,
                        reetReplyXml}, this.F1108_SaveReplyReetXmlOperationCompleted, userState);
        }
        
        private void OnF1108_SaveReplyReetXmlOperationCompleted(object arg) {
            if ((this.F1108_SaveReplyReetXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1108_SaveReplyReetXmlCompleted(this, new F1108_SaveReplyReetXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExciseTaxStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExciseTaxStatement(int statementId) {
            object[] results = this.Invoke("GetExciseTaxStatement", new object[] {
                        statementId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExciseTaxStatementAsync(int statementId) {
            this.GetExciseTaxStatementAsync(statementId, null);
        }
        
        /// <remarks/>
        public void GetExciseTaxStatementAsync(int statementId, object userState) {
            if ((this.GetExciseTaxStatementOperationCompleted == null)) {
                this.GetExciseTaxStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExciseTaxStatementOperationCompleted);
            }
            this.InvokeAsync("GetExciseTaxStatement", new object[] {
                        statementId}, this.GetExciseTaxStatementOperationCompleted, userState);
        }
        
        private void OnGetExciseTaxStatementOperationCompleted(object arg) {
            if ((this.GetExciseTaxStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExciseTaxStatementCompleted(this, new GetExciseTaxStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExciseTaxReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExciseTaxReceipt(int statementId) {
            object[] results = this.Invoke("GetExciseTaxReceipt", new object[] {
                        statementId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExciseTaxReceiptAsync(int statementId) {
            this.GetExciseTaxReceiptAsync(statementId, null);
        }
        
        /// <remarks/>
        public void GetExciseTaxReceiptAsync(int statementId, object userState) {
            if ((this.GetExciseTaxReceiptOperationCompleted == null)) {
                this.GetExciseTaxReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExciseTaxReceiptOperationCompleted);
            }
            this.InvokeAsync("GetExciseTaxReceipt", new object[] {
                        statementId}, this.GetExciseTaxReceiptOperationCompleted, userState);
        }
        
        private void OnGetExciseTaxReceiptOperationCompleted(object arg) {
            if ((this.GetExciseTaxReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExciseTaxReceiptCompleted(this, new GetExciseTaxReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListExciseTaxStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListExciseTaxStatement() {
            object[] results = this.Invoke("ListExciseTaxStatement", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListExciseTaxStatementAsync() {
            this.ListExciseTaxStatementAsync(null);
        }
        
        /// <remarks/>
        public void ListExciseTaxStatementAsync(object userState) {
            if ((this.ListExciseTaxStatementOperationCompleted == null)) {
                this.ListExciseTaxStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListExciseTaxStatementOperationCompleted);
            }
            this.InvokeAsync("ListExciseTaxStatement", new object[0], this.ListExciseTaxStatementOperationCompleted, userState);
        }
        
        private void OnListExciseTaxStatementOperationCompleted(object arg) {
            if ((this.ListExciseTaxStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListExciseTaxStatementCompleted(this, new ListExciseTaxStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveExciseTaxReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveExciseTaxReceipt(string statementItems) {
            object[] results = this.Invoke("SaveExciseTaxReceipt", new object[] {
                        statementItems});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveExciseTaxReceiptAsync(string statementItems) {
            this.SaveExciseTaxReceiptAsync(statementItems, null);
        }
        
        /// <remarks/>
        public void SaveExciseTaxReceiptAsync(string statementItems, object userState) {
            if ((this.SaveExciseTaxReceiptOperationCompleted == null)) {
                this.SaveExciseTaxReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveExciseTaxReceiptOperationCompleted);
            }
            this.InvokeAsync("SaveExciseTaxReceipt", new object[] {
                        statementItems}, this.SaveExciseTaxReceiptOperationCompleted, userState);
        }
        
        private void OnSaveExciseTaxReceiptOperationCompleted(object arg) {
            if ((this.SaveExciseTaxReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveExciseTaxReceiptCompleted(this, new SaveExciseTaxReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExciseTaxAffidavitStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExciseTaxAffidavitStatus(int statementId, int treasurerStatus) {
            object[] results = this.Invoke("GetExciseTaxAffidavitStatus", new object[] {
                        statementId,
                        treasurerStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExciseTaxAffidavitStatusAsync(int statementId, int treasurerStatus) {
            this.GetExciseTaxAffidavitStatusAsync(statementId, treasurerStatus, null);
        }
        
        /// <remarks/>
        public void GetExciseTaxAffidavitStatusAsync(int statementId, int treasurerStatus, object userState) {
            if ((this.GetExciseTaxAffidavitStatusOperationCompleted == null)) {
                this.GetExciseTaxAffidavitStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExciseTaxAffidavitStatusOperationCompleted);
            }
            this.InvokeAsync("GetExciseTaxAffidavitStatus", new object[] {
                        statementId,
                        treasurerStatus}, this.GetExciseTaxAffidavitStatusOperationCompleted, userState);
        }
        
        private void OnGetExciseTaxAffidavitStatusOperationCompleted(object arg) {
            if ((this.GetExciseTaxAffidavitStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExciseTaxAffidavitStatusCompleted(this, new GetExciseTaxAffidavitStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateExciseAffidavitStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateExciseAffidavitStatus(int statementID, int treasurerStatus, int statusID) {
            this.Invoke("UpdateExciseAffidavitStatus", new object[] {
                        statementID,
                        treasurerStatus,
                        statusID});
        }
        
        /// <remarks/>
        public void UpdateExciseAffidavitStatusAsync(int statementID, int treasurerStatus, int statusID) {
            this.UpdateExciseAffidavitStatusAsync(statementID, treasurerStatus, statusID, null);
        }
        
        /// <remarks/>
        public void UpdateExciseAffidavitStatusAsync(int statementID, int treasurerStatus, int statusID, object userState) {
            if ((this.UpdateExciseAffidavitStatusOperationCompleted == null)) {
                this.UpdateExciseAffidavitStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateExciseAffidavitStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateExciseAffidavitStatus", new object[] {
                        statementID,
                        treasurerStatus,
                        statusID}, this.UpdateExciseAffidavitStatusOperationCompleted, userState);
        }
        
        private void OnUpdateExciseAffidavitStatusOperationCompleted(object arg) {
            if ((this.UpdateExciseAffidavitStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateExciseAffidavitStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListExciseRateDistrict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListExciseRateDistrict(int district, int year, string description) {
            object[] results = this.Invoke("ListExciseRateDistrict", new object[] {
                        district,
                        year,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListExciseRateDistrictAsync(int district, int year, string description) {
            this.ListExciseRateDistrictAsync(district, year, description, null);
        }
        
        /// <remarks/>
        public void ListExciseRateDistrictAsync(int district, int year, string description, object userState) {
            if ((this.ListExciseRateDistrictOperationCompleted == null)) {
                this.ListExciseRateDistrictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListExciseRateDistrictOperationCompleted);
            }
            this.InvokeAsync("ListExciseRateDistrict", new object[] {
                        district,
                        year,
                        description}, this.ListExciseRateDistrictOperationCompleted, userState);
        }
        
        private void OnListExciseRateDistrictOperationCompleted(object arg) {
            if ((this.ListExciseRateDistrictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListExciseRateDistrictCompleted(this, new ListExciseRateDistrictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExciseDistrictCopy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExciseDistrictCopy(int exciserateId) {
            object[] results = this.Invoke("GetExciseDistrictCopy", new object[] {
                        exciserateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExciseDistrictCopyAsync(int exciserateId) {
            this.GetExciseDistrictCopyAsync(exciserateId, null);
        }
        
        /// <remarks/>
        public void GetExciseDistrictCopyAsync(int exciserateId, object userState) {
            if ((this.GetExciseDistrictCopyOperationCompleted == null)) {
                this.GetExciseDistrictCopyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExciseDistrictCopyOperationCompleted);
            }
            this.InvokeAsync("GetExciseDistrictCopy", new object[] {
                        exciserateId}, this.GetExciseDistrictCopyOperationCompleted, userState);
        }
        
        private void OnGetExciseDistrictCopyOperationCompleted(object arg) {
            if ((this.GetExciseDistrictCopyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExciseDistrictCopyCompleted(this, new GetExciseDistrictCopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveExciseDistrcitCopy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveExciseDistrcitCopy(int district, int basedOnYear, int newDistrictYear) {
            object[] results = this.Invoke("SaveExciseDistrcitCopy", new object[] {
                        district,
                        basedOnYear,
                        newDistrictYear});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveExciseDistrcitCopyAsync(int district, int basedOnYear, int newDistrictYear) {
            this.SaveExciseDistrcitCopyAsync(district, basedOnYear, newDistrictYear, null);
        }
        
        /// <remarks/>
        public void SaveExciseDistrcitCopyAsync(int district, int basedOnYear, int newDistrictYear, object userState) {
            if ((this.SaveExciseDistrcitCopyOperationCompleted == null)) {
                this.SaveExciseDistrcitCopyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveExciseDistrcitCopyOperationCompleted);
            }
            this.InvokeAsync("SaveExciseDistrcitCopy", new object[] {
                        district,
                        basedOnYear,
                        newDistrictYear}, this.SaveExciseDistrcitCopyOperationCompleted, userState);
        }
        
        private void OnSaveExciseDistrcitCopyOperationCompleted(object arg) {
            if ((this.SaveExciseDistrcitCopyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveExciseDistrcitCopyCompleted(this, new SaveExciseDistrcitCopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMasterNameSearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMasterNameSearch(string lastName, string firstName, string address) {
            object[] results = this.Invoke("GetMasterNameSearch", new object[] {
                        lastName,
                        firstName,
                        address});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMasterNameSearchAsync(string lastName, string firstName, string address) {
            this.GetMasterNameSearchAsync(lastName, firstName, address, null);
        }
        
        /// <remarks/>
        public void GetMasterNameSearchAsync(string lastName, string firstName, string address, object userState) {
            if ((this.GetMasterNameSearchOperationCompleted == null)) {
                this.GetMasterNameSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasterNameSearchOperationCompleted);
            }
            this.InvokeAsync("GetMasterNameSearch", new object[] {
                        lastName,
                        firstName,
                        address}, this.GetMasterNameSearchOperationCompleted, userState);
        }
        
        private void OnGetMasterNameSearchOperationCompleted(object arg) {
            if ((this.GetMasterNameSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasterNameSearchCompleted(this, new GetMasterNameSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExciseIndividualType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExciseIndividualType() {
            object[] results = this.Invoke("GetExciseIndividualType", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExciseIndividualTypeAsync() {
            this.GetExciseIndividualTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetExciseIndividualTypeAsync(object userState) {
            if ((this.GetExciseIndividualTypeOperationCompleted == null)) {
                this.GetExciseIndividualTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExciseIndividualTypeOperationCompleted);
            }
            this.InvokeAsync("GetExciseIndividualType", new object[0], this.GetExciseIndividualTypeOperationCompleted, userState);
        }
        
        private void OnGetExciseIndividualTypeOperationCompleted(object arg) {
            if ((this.GetExciseIndividualTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExciseIndividualTypeCompleted(this, new GetExciseIndividualTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExciseTaxAffidavitDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExciseTaxAffidavitDetails(int statementID) {
            object[] results = this.Invoke("GetExciseTaxAffidavitDetails", new object[] {
                        statementID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExciseTaxAffidavitDetailsAsync(int statementID) {
            this.GetExciseTaxAffidavitDetailsAsync(statementID, null);
        }
        
        /// <remarks/>
        public void GetExciseTaxAffidavitDetailsAsync(int statementID, object userState) {
            if ((this.GetExciseTaxAffidavitDetailsOperationCompleted == null)) {
                this.GetExciseTaxAffidavitDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExciseTaxAffidavitDetailsOperationCompleted);
            }
            this.InvokeAsync("GetExciseTaxAffidavitDetails", new object[] {
                        statementID}, this.GetExciseTaxAffidavitDetailsOperationCompleted, userState);
        }
        
        private void OnGetExciseTaxAffidavitDetailsOperationCompleted(object arg) {
            if ((this.GetExciseTaxAffidavitDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExciseTaxAffidavitDetailsCompleted(this, new GetExciseTaxAffidavitDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExciseTaxAffidavitCalulateAmountDue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExciseTaxAffidavitCalulateAmountDue(System.DateTime saleDate, System.DateTime paymentDate, int exciseRateID, int taxCode, double taxableSaleAmount) {
            object[] results = this.Invoke("GetExciseTaxAffidavitCalulateAmountDue", new object[] {
                        saleDate,
                        paymentDate,
                        exciseRateID,
                        taxCode,
                        taxableSaleAmount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExciseTaxAffidavitCalulateAmountDueAsync(System.DateTime saleDate, System.DateTime paymentDate, int exciseRateID, int taxCode, double taxableSaleAmount) {
            this.GetExciseTaxAffidavitCalulateAmountDueAsync(saleDate, paymentDate, exciseRateID, taxCode, taxableSaleAmount, null);
        }
        
        /// <remarks/>
        public void GetExciseTaxAffidavitCalulateAmountDueAsync(System.DateTime saleDate, System.DateTime paymentDate, int exciseRateID, int taxCode, double taxableSaleAmount, object userState) {
            if ((this.GetExciseTaxAffidavitCalulateAmountDueOperationCompleted == null)) {
                this.GetExciseTaxAffidavitCalulateAmountDueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExciseTaxAffidavitCalulateAmountDueOperationCompleted);
            }
            this.InvokeAsync("GetExciseTaxAffidavitCalulateAmountDue", new object[] {
                        saleDate,
                        paymentDate,
                        exciseRateID,
                        taxCode,
                        taxableSaleAmount}, this.GetExciseTaxAffidavitCalulateAmountDueOperationCompleted, userState);
        }
        
        private void OnGetExciseTaxAffidavitCalulateAmountDueOperationCompleted(object arg) {
            if ((this.GetExciseTaxAffidavitCalulateAmountDueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExciseTaxAffidavitCalulateAmountDueCompleted(this, new GetExciseTaxAffidavitCalulateAmountDueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAffidavitStatementId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAffidavitStatementId(int formId, string orderField, string orderBy) {
            object[] results = this.Invoke("GetAffidavitStatementId", new object[] {
                        formId,
                        orderField,
                        orderBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAffidavitStatementIdAsync(int formId, string orderField, string orderBy) {
            this.GetAffidavitStatementIdAsync(formId, orderField, orderBy, null);
        }
        
        /// <remarks/>
        public void GetAffidavitStatementIdAsync(int formId, string orderField, string orderBy, object userState) {
            if ((this.GetAffidavitStatementIdOperationCompleted == null)) {
                this.GetAffidavitStatementIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAffidavitStatementIdOperationCompleted);
            }
            this.InvokeAsync("GetAffidavitStatementId", new object[] {
                        formId,
                        orderField,
                        orderBy}, this.GetAffidavitStatementIdOperationCompleted, userState);
        }
        
        private void OnGetAffidavitStatementIdOperationCompleted(object arg) {
            if ((this.GetAffidavitStatementIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAffidavitStatementIdCompleted(this, new GetAffidavitStatementIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAffiDavitDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveAffiDavitDetails(int statementId, string partiesAddress, string parcelDetails, string exciseAffidavitDetails) {
            object[] results = this.Invoke("SaveAffiDavitDetails", new object[] {
                        statementId,
                        partiesAddress,
                        parcelDetails,
                        exciseAffidavitDetails});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAffiDavitDetailsAsync(int statementId, string partiesAddress, string parcelDetails, string exciseAffidavitDetails) {
            this.SaveAffiDavitDetailsAsync(statementId, partiesAddress, parcelDetails, exciseAffidavitDetails, null);
        }
        
        /// <remarks/>
        public void SaveAffiDavitDetailsAsync(int statementId, string partiesAddress, string parcelDetails, string exciseAffidavitDetails, object userState) {
            if ((this.SaveAffiDavitDetailsOperationCompleted == null)) {
                this.SaveAffiDavitDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAffiDavitDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveAffiDavitDetails", new object[] {
                        statementId,
                        partiesAddress,
                        parcelDetails,
                        exciseAffidavitDetails}, this.SaveAffiDavitDetailsOperationCompleted, userState);
        }
        
        private void OnSaveAffiDavitDetailsOperationCompleted(object arg) {
            if ((this.SaveAffiDavitDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAffiDavitDetailsCompleted(this, new SaveAffiDavitDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOwnerDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOwnerDetails(int ownerId) {
            object[] results = this.Invoke("GetOwnerDetails", new object[] {
                        ownerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOwnerDetailsAsync(int ownerId) {
            this.GetOwnerDetailsAsync(ownerId, null);
        }
        
        /// <remarks/>
        public void GetOwnerDetailsAsync(int ownerId, object userState) {
            if ((this.GetOwnerDetailsOperationCompleted == null)) {
                this.GetOwnerDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOwnerDetailsOperationCompleted);
            }
            this.InvokeAsync("GetOwnerDetails", new object[] {
                        ownerId}, this.GetOwnerDetailsOperationCompleted, userState);
        }
        
        private void OnGetOwnerDetailsOperationCompleted(object arg) {
            if ((this.GetOwnerDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOwnerDetailsCompleted(this, new GetOwnerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistrictSelection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDistrictSelection(int exciseRateId) {
            object[] results = this.Invoke("GetDistrictSelection", new object[] {
                        exciseRateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistrictSelectionAsync(int exciseRateId) {
            this.GetDistrictSelectionAsync(exciseRateId, null);
        }
        
        /// <remarks/>
        public void GetDistrictSelectionAsync(int exciseRateId, object userState) {
            if ((this.GetDistrictSelectionOperationCompleted == null)) {
                this.GetDistrictSelectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistrictSelectionOperationCompleted);
            }
            this.InvokeAsync("GetDistrictSelection", new object[] {
                        exciseRateId}, this.GetDistrictSelectionOperationCompleted, userState);
        }
        
        private void OnGetDistrictSelectionOperationCompleted(object arg) {
            if ((this.GetDistrictSelectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistrictSelectionCompleted(this, new GetDistrictSelectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAffidavitDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAffidavitDetails(int statementID) {
            this.Invoke("DeleteAffidavitDetails", new object[] {
                        statementID});
        }
        
        /// <remarks/>
        public void DeleteAffidavitDetailsAsync(int statementID) {
            this.DeleteAffidavitDetailsAsync(statementID, null);
        }
        
        /// <remarks/>
        public void DeleteAffidavitDetailsAsync(int statementID, object userState) {
            if ((this.DeleteAffidavitDetailsOperationCompleted == null)) {
                this.DeleteAffidavitDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAffidavitDetailsOperationCompleted);
            }
            this.InvokeAsync("DeleteAffidavitDetails", new object[] {
                        statementID}, this.DeleteAffidavitDetailsOperationCompleted, userState);
        }
        
        private void OnDeleteAffidavitDetailsOperationCompleted(object arg) {
            if ((this.DeleteAffidavitDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAffidavitDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteAffdvtQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteAffdvtQuery(int formId, string whereCondnSql, string orderByCondn) {
            object[] results = this.Invoke("ExecuteAffdvtQuery", new object[] {
                        formId,
                        whereCondnSql,
                        orderByCondn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteAffdvtQueryAsync(int formId, string whereCondnSql, string orderByCondn) {
            this.ExecuteAffdvtQueryAsync(formId, whereCondnSql, orderByCondn, null);
        }
        
        /// <remarks/>
        public void ExecuteAffdvtQueryAsync(int formId, string whereCondnSql, string orderByCondn, object userState) {
            if ((this.ExecuteAffdvtQueryOperationCompleted == null)) {
                this.ExecuteAffdvtQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteAffdvtQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteAffdvtQuery", new object[] {
                        formId,
                        whereCondnSql,
                        orderByCondn}, this.ExecuteAffdvtQueryOperationCompleted, userState);
        }
        
        private void OnExecuteAffdvtQueryOperationCompleted(object arg) {
            if ((this.ExecuteAffdvtQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteAffdvtQueryCompleted(this, new ExecuteAffdvtQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExciseTaxRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExciseTaxRate(int exciseRateId) {
            object[] results = this.Invoke("GetExciseTaxRate", new object[] {
                        exciseRateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExciseTaxRateAsync(int exciseRateId) {
            this.GetExciseTaxRateAsync(exciseRateId, null);
        }
        
        /// <remarks/>
        public void GetExciseTaxRateAsync(int exciseRateId, object userState) {
            if ((this.GetExciseTaxRateOperationCompleted == null)) {
                this.GetExciseTaxRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExciseTaxRateOperationCompleted);
            }
            this.InvokeAsync("GetExciseTaxRate", new object[] {
                        exciseRateId}, this.GetExciseTaxRateOperationCompleted, userState);
        }
        
        private void OnGetExciseTaxRateOperationCompleted(object arg) {
            if ((this.GetExciseTaxRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExciseTaxRateCompleted(this, new GetExciseTaxRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListExciseTaxRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListExciseTaxRate() {
            object[] results = this.Invoke("ListExciseTaxRate", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListExciseTaxRateAsync() {
            this.ListExciseTaxRateAsync(null);
        }
        
        /// <remarks/>
        public void ListExciseTaxRateAsync(object userState) {
            if ((this.ListExciseTaxRateOperationCompleted == null)) {
                this.ListExciseTaxRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListExciseTaxRateOperationCompleted);
            }
            this.InvokeAsync("ListExciseTaxRate", new object[0], this.ListExciseTaxRateOperationCompleted, userState);
        }
        
        private void OnListExciseTaxRateOperationCompleted(object arg) {
            if ((this.ListExciseTaxRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListExciseTaxRateCompleted(this, new ListExciseTaxRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveExciseTaxRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveExciseTaxRate(int exciseRateId, string exciseTaxDetails) {
            this.Invoke("SaveExciseTaxRate", new object[] {
                        exciseRateId,
                        exciseTaxDetails});
        }
        
        /// <remarks/>
        public void SaveExciseTaxRateAsync(int exciseRateId, string exciseTaxDetails) {
            this.SaveExciseTaxRateAsync(exciseRateId, exciseTaxDetails, null);
        }
        
        /// <remarks/>
        public void SaveExciseTaxRateAsync(int exciseRateId, string exciseTaxDetails, object userState) {
            if ((this.SaveExciseTaxRateOperationCompleted == null)) {
                this.SaveExciseTaxRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveExciseTaxRateOperationCompleted);
            }
            this.InvokeAsync("SaveExciseTaxRate", new object[] {
                        exciseRateId,
                        exciseTaxDetails}, this.SaveExciseTaxRateOperationCompleted, userState);
        }
        
        private void OnSaveExciseTaxRateOperationCompleted(object arg) {
            if ((this.SaveExciseTaxRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveExciseTaxRateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteExciseTaxRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteExciseTaxRate(int exciseRateId) {
            object[] results = this.Invoke("DeleteExciseTaxRate", new object[] {
                        exciseRateId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteExciseTaxRateAsync(int exciseRateId) {
            this.DeleteExciseTaxRateAsync(exciseRateId, null);
        }
        
        /// <remarks/>
        public void DeleteExciseTaxRateAsync(int exciseRateId, object userState) {
            if ((this.DeleteExciseTaxRateOperationCompleted == null)) {
                this.DeleteExciseTaxRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExciseTaxRateOperationCompleted);
            }
            this.InvokeAsync("DeleteExciseTaxRate", new object[] {
                        exciseRateId}, this.DeleteExciseTaxRateOperationCompleted, userState);
        }
        
        private void OnDeleteExciseTaxRateOperationCompleted(object arg) {
            if ((this.DeleteExciseTaxRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExciseTaxRateCompleted(this, new DeleteExciseTaxRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistrictName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDistrictName(int districtId) {
            object[] results = this.Invoke("GetDistrictName", new object[] {
                        districtId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistrictNameAsync(int districtId) {
            this.GetDistrictNameAsync(districtId, null);
        }
        
        /// <remarks/>
        public void GetDistrictNameAsync(int districtId, object userState) {
            if ((this.GetDistrictNameOperationCompleted == null)) {
                this.GetDistrictNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistrictNameOperationCompleted);
            }
            this.InvokeAsync("GetDistrictName", new object[] {
                        districtId}, this.GetDistrictNameOperationCompleted, userState);
        }
        
        private void OnGetDistrictNameOperationCompleted(object arg) {
            if ((this.GetDistrictNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistrictNameCompleted(this, new GetDistrictNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountName(int accountId) {
            object[] results = this.Invoke("GetAccountName", new object[] {
                        accountId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountNameAsync(int accountId) {
            this.GetAccountNameAsync(accountId, null);
        }
        
        /// <remarks/>
        public void GetAccountNameAsync(int accountId, object userState) {
            if ((this.GetAccountNameOperationCompleted == null)) {
                this.GetAccountNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountNameOperationCompleted);
            }
            this.InvokeAsync("GetAccountName", new object[] {
                        accountId}, this.GetAccountNameOperationCompleted, userState);
        }
        
        private void OnGetAccountNameOperationCompleted(object arg) {
            if ((this.GetAccountNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountNameCompleted(this, new GetAccountNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountSelectionData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountSelectionData(string subFund, string bars, string objectname, string line, int rollYear, string desciption, int iscash) {
            object[] results = this.Invoke("GetAccountSelectionData", new object[] {
                        subFund,
                        bars,
                        objectname,
                        line,
                        rollYear,
                        desciption,
                        iscash});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountSelectionDataAsync(string subFund, string bars, string objectname, string line, int rollYear, string desciption, int iscash) {
            this.GetAccountSelectionDataAsync(subFund, bars, objectname, line, rollYear, desciption, iscash, null);
        }
        
        /// <remarks/>
        public void GetAccountSelectionDataAsync(string subFund, string bars, string objectname, string line, int rollYear, string desciption, int iscash, object userState) {
            if ((this.GetAccountSelectionDataOperationCompleted == null)) {
                this.GetAccountSelectionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountSelectionDataOperationCompleted);
            }
            this.InvokeAsync("GetAccountSelectionData", new object[] {
                        subFund,
                        bars,
                        objectname,
                        line,
                        rollYear,
                        desciption,
                        iscash}, this.GetAccountSelectionDataOperationCompleted, userState);
        }
        
        private void OnGetAccountSelectionDataOperationCompleted(object arg) {
            if ((this.GetAccountSelectionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountSelectionDataCompleted(this, new GetAccountSelectionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1512_GetDistrictSelectionData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1512_GetDistrictSelectionData(int districtID, int district, string description, int rollYear) {
            object[] results = this.Invoke("F1512_GetDistrictSelectionData", new object[] {
                        districtID,
                        district,
                        description,
                        rollYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1512_GetDistrictSelectionDataAsync(int districtID, int district, string description, int rollYear) {
            this.F1512_GetDistrictSelectionDataAsync(districtID, district, description, rollYear, null);
        }
        
        /// <remarks/>
        public void F1512_GetDistrictSelectionDataAsync(int districtID, int district, string description, int rollYear, object userState) {
            if ((this.F1512_GetDistrictSelectionDataOperationCompleted == null)) {
                this.F1512_GetDistrictSelectionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1512_GetDistrictSelectionDataOperationCompleted);
            }
            this.InvokeAsync("F1512_GetDistrictSelectionData", new object[] {
                        districtID,
                        district,
                        description,
                        rollYear}, this.F1512_GetDistrictSelectionDataOperationCompleted, userState);
        }
        
        private void OnF1512_GetDistrictSelectionDataOperationCompleted(object arg) {
            if ((this.F1512_GetDistrictSelectionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1512_GetDistrictSelectionDataCompleted(this, new F1512_GetDistrictSelectionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListHelpDocumentForm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListHelpDocumentForm(string formFile) {
            object[] results = this.Invoke("ListHelpDocumentForm", new object[] {
                        formFile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListHelpDocumentFormAsync(string formFile) {
            this.ListHelpDocumentFormAsync(formFile, null);
        }
        
        /// <remarks/>
        public void ListHelpDocumentFormAsync(string formFile, object userState) {
            if ((this.ListHelpDocumentFormOperationCompleted == null)) {
                this.ListHelpDocumentFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListHelpDocumentFormOperationCompleted);
            }
            this.InvokeAsync("ListHelpDocumentForm", new object[] {
                        formFile}, this.ListHelpDocumentFormOperationCompleted, userState);
        }
        
        private void OnListHelpDocumentFormOperationCompleted(object arg) {
            if ((this.ListHelpDocumentFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListHelpDocumentFormCompleted(this, new ListHelpDocumentFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertGDocEventEngineData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertGDocEventEngineData(string eventEngineInsertData) {
            object[] results = this.Invoke("InsertGDocEventEngineData", new object[] {
                        eventEngineInsertData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGDocEventEngineDataAsync(string eventEngineInsertData) {
            this.InsertGDocEventEngineDataAsync(eventEngineInsertData, null);
        }
        
        /// <remarks/>
        public void InsertGDocEventEngineDataAsync(string eventEngineInsertData, object userState) {
            if ((this.InsertGDocEventEngineDataOperationCompleted == null)) {
                this.InsertGDocEventEngineDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGDocEventEngineDataOperationCompleted);
            }
            this.InvokeAsync("InsertGDocEventEngineData", new object[] {
                        eventEngineInsertData}, this.InsertGDocEventEngineDataOperationCompleted, userState);
        }
        
        private void OnInsertGDocEventEngineDataOperationCompleted(object arg) {
            if ((this.InsertGDocEventEngineDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGDocEventEngineDataCompleted(this, new InsertGDocEventEngineDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEventTypeStatusDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListEventTypeStatusDetails(int featureClassID) {
            object[] results = this.Invoke("ListEventTypeStatusDetails", new object[] {
                        featureClassID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListEventTypeStatusDetailsAsync(int featureClassID) {
            this.ListEventTypeStatusDetailsAsync(featureClassID, null);
        }
        
        /// <remarks/>
        public void ListEventTypeStatusDetailsAsync(int featureClassID, object userState) {
            if ((this.ListEventTypeStatusDetailsOperationCompleted == null)) {
                this.ListEventTypeStatusDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListEventTypeStatusDetailsOperationCompleted);
            }
            this.InvokeAsync("ListEventTypeStatusDetails", new object[] {
                        featureClassID}, this.ListEventTypeStatusDetailsOperationCompleted, userState);
        }
        
        private void OnListEventTypeStatusDetailsOperationCompleted(object arg) {
            if ((this.ListEventTypeStatusDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListEventTypeStatusDetailsCompleted(this, new ListEventTypeStatusDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadEventEngineData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadEventEngineData(int featureClassID, int featureID) {
            object[] results = this.Invoke("LoadEventEngineData", new object[] {
                        featureClassID,
                        featureID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadEventEngineDataAsync(int featureClassID, int featureID) {
            this.LoadEventEngineDataAsync(featureClassID, featureID, null);
        }
        
        /// <remarks/>
        public void LoadEventEngineDataAsync(int featureClassID, int featureID, object userState) {
            if ((this.LoadEventEngineDataOperationCompleted == null)) {
                this.LoadEventEngineDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadEventEngineDataOperationCompleted);
            }
            this.InvokeAsync("LoadEventEngineData", new object[] {
                        featureClassID,
                        featureID}, this.LoadEventEngineDataOperationCompleted, userState);
        }
        
        private void OnLoadEventEngineDataOperationCompleted(object arg) {
            if ((this.LoadEventEngineDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadEventEngineDataCompleted(this, new LoadEventEngineDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEventEngineDataHeader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEventEngineDataHeader(int featureClassID, int featureID) {
            object[] results = this.Invoke("GetEventEngineDataHeader", new object[] {
                        featureClassID,
                        featureID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventEngineDataHeaderAsync(int featureClassID, int featureID) {
            this.GetEventEngineDataHeaderAsync(featureClassID, featureID, null);
        }
        
        /// <remarks/>
        public void GetEventEngineDataHeaderAsync(int featureClassID, int featureID, object userState) {
            if ((this.GetEventEngineDataHeaderOperationCompleted == null)) {
                this.GetEventEngineDataHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventEngineDataHeaderOperationCompleted);
            }
            this.InvokeAsync("GetEventEngineDataHeader", new object[] {
                        featureClassID,
                        featureID}, this.GetEventEngineDataHeaderOperationCompleted, userState);
        }
        
        private void OnGetEventEngineDataHeaderOperationCompleted(object arg) {
            if ((this.GetEventEngineDataHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventEngineDataHeaderCompleted(this, new GetEventEngineDataHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWorkOrderDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWorkOrderDetails(int featureClassId) {
            object[] results = this.Invoke("GetWorkOrderDetails", new object[] {
                        featureClassId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkOrderDetailsAsync(int featureClassId) {
            this.GetWorkOrderDetailsAsync(featureClassId, null);
        }
        
        /// <remarks/>
        public void GetWorkOrderDetailsAsync(int featureClassId, object userState) {
            if ((this.GetWorkOrderDetailsOperationCompleted == null)) {
                this.GetWorkOrderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkOrderDetailsOperationCompleted);
            }
            this.InvokeAsync("GetWorkOrderDetails", new object[] {
                        featureClassId}, this.GetWorkOrderDetailsOperationCompleted, userState);
        }
        
        private void OnGetWorkOrderDetailsOperationCompleted(object arg) {
            if ((this.GetWorkOrderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkOrderDetailsCompleted(this, new GetWorkOrderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGDocComment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGDocComment(int eventId) {
            object[] results = this.Invoke("GetGDocComment", new object[] {
                        eventId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGDocCommentAsync(int eventId) {
            this.GetGDocCommentAsync(eventId, null);
        }
        
        /// <remarks/>
        public void GetGDocCommentAsync(int eventId, object userState) {
            if ((this.GetGDocCommentOperationCompleted == null)) {
                this.GetGDocCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGDocCommentOperationCompleted);
            }
            this.InvokeAsync("GetGDocComment", new object[] {
                        eventId}, this.GetGDocCommentOperationCompleted, userState);
        }
        
        private void OnGetGDocCommentOperationCompleted(object arg) {
            if ((this.GetGDocCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGDocCommentCompleted(this, new GetGDocCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveGDocComment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveGDocComment(int eventId, string comment) {
            this.Invoke("SaveGDocComment", new object[] {
                        eventId,
                        comment});
        }
        
        /// <remarks/>
        public void SaveGDocCommentAsync(int eventId, string comment) {
            this.SaveGDocCommentAsync(eventId, comment, null);
        }
        
        /// <remarks/>
        public void SaveGDocCommentAsync(int eventId, string comment, object userState) {
            if ((this.SaveGDocCommentOperationCompleted == null)) {
                this.SaveGDocCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveGDocCommentOperationCompleted);
            }
            this.InvokeAsync("SaveGDocComment", new object[] {
                        eventId,
                        comment}, this.SaveGDocCommentOperationCompleted, userState);
        }
        
        private void OnSaveGDocCommentOperationCompleted(object arg) {
            if ((this.SaveGDocCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveGDocCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGDocEventHeader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGDocEventHeader(int eventId) {
            object[] results = this.Invoke("GetGDocEventHeader", new object[] {
                        eventId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGDocEventHeaderAsync(int eventId) {
            this.GetGDocEventHeaderAsync(eventId, null);
        }
        
        /// <remarks/>
        public void GetGDocEventHeaderAsync(int eventId, object userState) {
            if ((this.GetGDocEventHeaderOperationCompleted == null)) {
                this.GetGDocEventHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGDocEventHeaderOperationCompleted);
            }
            this.InvokeAsync("GetGDocEventHeader", new object[] {
                        eventId}, this.GetGDocEventHeaderOperationCompleted, userState);
        }
        
        private void OnGetGDocEventHeaderOperationCompleted(object arg) {
            if ((this.GetGDocEventHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGDocEventHeaderCompleted(this, new GetGDocEventHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListGDocEventHeaderStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListGDocEventHeaderStatus(int eventId) {
            object[] results = this.Invoke("ListGDocEventHeaderStatus", new object[] {
                        eventId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListGDocEventHeaderStatusAsync(int eventId) {
            this.ListGDocEventHeaderStatusAsync(eventId, null);
        }
        
        /// <remarks/>
        public void ListGDocEventHeaderStatusAsync(int eventId, object userState) {
            if ((this.ListGDocEventHeaderStatusOperationCompleted == null)) {
                this.ListGDocEventHeaderStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListGDocEventHeaderStatusOperationCompleted);
            }
            this.InvokeAsync("ListGDocEventHeaderStatus", new object[] {
                        eventId}, this.ListGDocEventHeaderStatusOperationCompleted, userState);
        }
        
        private void OnListGDocEventHeaderStatusOperationCompleted(object arg) {
            if ((this.ListGDocEventHeaderStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListGDocEventHeaderStatusCompleted(this, new ListGDocEventHeaderStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteGDocEventHeader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteGDocEventHeader(int eventId, int childFlag) {
            this.Invoke("DeleteGDocEventHeader", new object[] {
                        eventId,
                        childFlag});
        }
        
        /// <remarks/>
        public void DeleteGDocEventHeaderAsync(int eventId, int childFlag) {
            this.DeleteGDocEventHeaderAsync(eventId, childFlag, null);
        }
        
        /// <remarks/>
        public void DeleteGDocEventHeaderAsync(int eventId, int childFlag, object userState) {
            if ((this.DeleteGDocEventHeaderOperationCompleted == null)) {
                this.DeleteGDocEventHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGDocEventHeaderOperationCompleted);
            }
            this.InvokeAsync("DeleteGDocEventHeader", new object[] {
                        eventId,
                        childFlag}, this.DeleteGDocEventHeaderOperationCompleted, userState);
        }
        
        private void OnDeleteGDocEventHeaderOperationCompleted(object arg) {
            if ((this.DeleteGDocEventHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGDocEventHeaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveGDocEventHeader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveGDocEventHeader(string eventItems) {
            object[] results = this.Invoke("SaveGDocEventHeader", new object[] {
                        eventItems});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveGDocEventHeaderAsync(string eventItems) {
            this.SaveGDocEventHeaderAsync(eventItems, null);
        }
        
        /// <remarks/>
        public void SaveGDocEventHeaderAsync(string eventItems, object userState) {
            if ((this.SaveGDocEventHeaderOperationCompleted == null)) {
                this.SaveGDocEventHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveGDocEventHeaderOperationCompleted);
            }
            this.InvokeAsync("SaveGDocEventHeader", new object[] {
                        eventItems}, this.SaveGDocEventHeaderOperationCompleted, userState);
        }
        
        private void OnSaveGDocEventHeaderOperationCompleted(object arg) {
            if ((this.SaveGDocEventHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveGDocEventHeaderCompleted(this, new SaveGDocEventHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8901_GetWorkOrderEngine", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8901_GetWorkOrderEngine(int systemId, int isopen) {
            object[] results = this.Invoke("F8901_GetWorkOrderEngine", new object[] {
                        systemId,
                        isopen});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8901_GetWorkOrderEngineAsync(int systemId, int isopen) {
            this.F8901_GetWorkOrderEngineAsync(systemId, isopen, null);
        }
        
        /// <remarks/>
        public void F8901_GetWorkOrderEngineAsync(int systemId, int isopen, object userState) {
            if ((this.F8901_GetWorkOrderEngineOperationCompleted == null)) {
                this.F8901_GetWorkOrderEngineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8901_GetWorkOrderEngineOperationCompleted);
            }
            this.InvokeAsync("F8901_GetWorkOrderEngine", new object[] {
                        systemId,
                        isopen}, this.F8901_GetWorkOrderEngineOperationCompleted, userState);
        }
        
        private void OnF8901_GetWorkOrderEngineOperationCompleted(object arg) {
            if ((this.F8901_GetWorkOrderEngineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8901_GetWorkOrderEngineCompleted(this, new F8901_GetWorkOrderEngineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8901_GetWorkOrderType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8901_GetWorkOrderType(int systemId) {
            object[] results = this.Invoke("F8901_GetWorkOrderType", new object[] {
                        systemId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8901_GetWorkOrderTypeAsync(int systemId) {
            this.F8901_GetWorkOrderTypeAsync(systemId, null);
        }
        
        /// <remarks/>
        public void F8901_GetWorkOrderTypeAsync(int systemId, object userState) {
            if ((this.F8901_GetWorkOrderTypeOperationCompleted == null)) {
                this.F8901_GetWorkOrderTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8901_GetWorkOrderTypeOperationCompleted);
            }
            this.InvokeAsync("F8901_GetWorkOrderType", new object[] {
                        systemId}, this.F8901_GetWorkOrderTypeOperationCompleted, userState);
        }
        
        private void OnF8901_GetWorkOrderTypeOperationCompleted(object arg) {
            if ((this.F8901_GetWorkOrderTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8901_GetWorkOrderTypeCompleted(this, new F8901_GetWorkOrderTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8901_SaveWorkOrderEngine", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8901_SaveWorkOrderEngine(string workOrderItems) {
            object[] results = this.Invoke("F8901_SaveWorkOrderEngine", new object[] {
                        workOrderItems});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8901_SaveWorkOrderEngineAsync(string workOrderItems) {
            this.F8901_SaveWorkOrderEngineAsync(workOrderItems, null);
        }
        
        /// <remarks/>
        public void F8901_SaveWorkOrderEngineAsync(string workOrderItems, object userState) {
            if ((this.F8901_SaveWorkOrderEngineOperationCompleted == null)) {
                this.F8901_SaveWorkOrderEngineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8901_SaveWorkOrderEngineOperationCompleted);
            }
            this.InvokeAsync("F8901_SaveWorkOrderEngine", new object[] {
                        workOrderItems}, this.F8901_SaveWorkOrderEngineOperationCompleted, userState);
        }
        
        private void OnF8901_SaveWorkOrderEngineOperationCompleted(object arg) {
            if ((this.F8901_SaveWorkOrderEngineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8901_SaveWorkOrderEngineCompleted(this, new F8901_SaveWorkOrderEngineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8912_GetWorkOrderCallIn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8912_GetWorkOrderCallIn(int workorderId) {
            object[] results = this.Invoke("F8912_GetWorkOrderCallIn", new object[] {
                        workorderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8912_GetWorkOrderCallInAsync(int workorderId) {
            this.F8912_GetWorkOrderCallInAsync(workorderId, null);
        }
        
        /// <remarks/>
        public void F8912_GetWorkOrderCallInAsync(int workorderId, object userState) {
            if ((this.F8912_GetWorkOrderCallInOperationCompleted == null)) {
                this.F8912_GetWorkOrderCallInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8912_GetWorkOrderCallInOperationCompleted);
            }
            this.InvokeAsync("F8912_GetWorkOrderCallIn", new object[] {
                        workorderId}, this.F8912_GetWorkOrderCallInOperationCompleted, userState);
        }
        
        private void OnF8912_GetWorkOrderCallInOperationCompleted(object arg) {
            if ((this.F8912_GetWorkOrderCallInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8912_GetWorkOrderCallInCompleted(this, new F8912_GetWorkOrderCallInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wListAddresses", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wListAddresses() {
            object[] results = this.Invoke("wListAddresses", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wListAddressesAsync() {
            this.wListAddressesAsync(null);
        }
        
        /// <remarks/>
        public void wListAddressesAsync(object userState) {
            if ((this.wListAddressesOperationCompleted == null)) {
                this.wListAddressesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwListAddressesOperationCompleted);
            }
            this.InvokeAsync("wListAddresses", new object[0], this.wListAddressesOperationCompleted, userState);
        }
        
        private void OnwListAddressesOperationCompleted(object arg) {
            if ((this.wListAddressesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wListAddressesCompleted(this, new wListAddressesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8912_SaveWorkOrderCallIn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8912_SaveWorkOrderCallIn(string workOrderCall) {
            object[] results = this.Invoke("F8912_SaveWorkOrderCallIn", new object[] {
                        workOrderCall});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8912_SaveWorkOrderCallInAsync(string workOrderCall) {
            this.F8912_SaveWorkOrderCallInAsync(workOrderCall, null);
        }
        
        /// <remarks/>
        public void F8912_SaveWorkOrderCallInAsync(string workOrderCall, object userState) {
            if ((this.F8912_SaveWorkOrderCallInOperationCompleted == null)) {
                this.F8912_SaveWorkOrderCallInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8912_SaveWorkOrderCallInOperationCompleted);
            }
            this.InvokeAsync("F8912_SaveWorkOrderCallIn", new object[] {
                        workOrderCall}, this.F8912_SaveWorkOrderCallInOperationCompleted, userState);
        }
        
        private void OnF8912_SaveWorkOrderCallInOperationCompleted(object arg) {
            if ((this.F8912_SaveWorkOrderCallInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8912_SaveWorkOrderCallInCompleted(this, new F8912_SaveWorkOrderCallInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8910_GetWorkOrderGeneral", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8910_GetWorkOrderGeneral(int workorderId) {
            object[] results = this.Invoke("F8910_GetWorkOrderGeneral", new object[] {
                        workorderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8910_GetWorkOrderGeneralAsync(int workorderId) {
            this.F8910_GetWorkOrderGeneralAsync(workorderId, null);
        }
        
        /// <remarks/>
        public void F8910_GetWorkOrderGeneralAsync(int workorderId, object userState) {
            if ((this.F8910_GetWorkOrderGeneralOperationCompleted == null)) {
                this.F8910_GetWorkOrderGeneralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8910_GetWorkOrderGeneralOperationCompleted);
            }
            this.InvokeAsync("F8910_GetWorkOrderGeneral", new object[] {
                        workorderId}, this.F8910_GetWorkOrderGeneralOperationCompleted, userState);
        }
        
        private void OnF8910_GetWorkOrderGeneralOperationCompleted(object arg) {
            if ((this.F8910_GetWorkOrderGeneralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8910_GetWorkOrderGeneralCompleted(this, new F8910_GetWorkOrderGeneralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8910_SaveWorkOrderGeneral", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8910_SaveWorkOrderGeneral(string workOrderGeneral) {
            object[] results = this.Invoke("F8910_SaveWorkOrderGeneral", new object[] {
                        workOrderGeneral});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8910_SaveWorkOrderGeneralAsync(string workOrderGeneral) {
            this.F8910_SaveWorkOrderGeneralAsync(workOrderGeneral, null);
        }
        
        /// <remarks/>
        public void F8910_SaveWorkOrderGeneralAsync(string workOrderGeneral, object userState) {
            if ((this.F8910_SaveWorkOrderGeneralOperationCompleted == null)) {
                this.F8910_SaveWorkOrderGeneralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8910_SaveWorkOrderGeneralOperationCompleted);
            }
            this.InvokeAsync("F8910_SaveWorkOrderGeneral", new object[] {
                        workOrderGeneral}, this.F8910_SaveWorkOrderGeneralOperationCompleted, userState);
        }
        
        private void OnF8910_SaveWorkOrderGeneralOperationCompleted(object arg) {
            if ((this.F8910_SaveWorkOrderGeneralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8910_SaveWorkOrderGeneralCompleted(this, new F8910_SaveWorkOrderGeneralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8016_GetStoppageEventDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8016_GetStoppageEventDetails(int eventId) {
            object[] results = this.Invoke("F8016_GetStoppageEventDetails", new object[] {
                        eventId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8016_GetStoppageEventDetailsAsync(int eventId) {
            this.F8016_GetStoppageEventDetailsAsync(eventId, null);
        }
        
        /// <remarks/>
        public void F8016_GetStoppageEventDetailsAsync(int eventId, object userState) {
            if ((this.F8016_GetStoppageEventDetailsOperationCompleted == null)) {
                this.F8016_GetStoppageEventDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8016_GetStoppageEventDetailsOperationCompleted);
            }
            this.InvokeAsync("F8016_GetStoppageEventDetails", new object[] {
                        eventId}, this.F8016_GetStoppageEventDetailsOperationCompleted, userState);
        }
        
        private void OnF8016_GetStoppageEventDetailsOperationCompleted(object arg) {
            if ((this.F8016_GetStoppageEventDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8016_GetStoppageEventDetailsCompleted(this, new F8016_GetStoppageEventDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8016_SaveStoppageEventDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8016_SaveStoppageEventDetails(string eventItems) {
            object[] results = this.Invoke("F8016_SaveStoppageEventDetails", new object[] {
                        eventItems});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8016_SaveStoppageEventDetailsAsync(string eventItems) {
            this.F8016_SaveStoppageEventDetailsAsync(eventItems, null);
        }
        
        /// <remarks/>
        public void F8016_SaveStoppageEventDetailsAsync(string eventItems, object userState) {
            if ((this.F8016_SaveStoppageEventDetailsOperationCompleted == null)) {
                this.F8016_SaveStoppageEventDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8016_SaveStoppageEventDetailsOperationCompleted);
            }
            this.InvokeAsync("F8016_SaveStoppageEventDetails", new object[] {
                        eventItems}, this.F8016_SaveStoppageEventDetailsOperationCompleted, userState);
        }
        
        private void OnF8016_SaveStoppageEventDetailsOperationCompleted(object arg) {
            if ((this.F8016_SaveStoppageEventDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8016_SaveStoppageEventDetailsCompleted(this, new F8016_SaveStoppageEventDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8042_GetTimeFooterDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8042_GetTimeFooterDetails(int eventId, int formId) {
            object[] results = this.Invoke("F8042_GetTimeFooterDetails", new object[] {
                        eventId,
                        formId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8042_GetTimeFooterDetailsAsync(int eventId, int formId) {
            this.F8042_GetTimeFooterDetailsAsync(eventId, formId, null);
        }
        
        /// <remarks/>
        public void F8042_GetTimeFooterDetailsAsync(int eventId, int formId, object userState) {
            if ((this.F8042_GetTimeFooterDetailsOperationCompleted == null)) {
                this.F8042_GetTimeFooterDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8042_GetTimeFooterDetailsOperationCompleted);
            }
            this.InvokeAsync("F8042_GetTimeFooterDetails", new object[] {
                        eventId,
                        formId}, this.F8042_GetTimeFooterDetailsOperationCompleted, userState);
        }
        
        private void OnF8042_GetTimeFooterDetailsOperationCompleted(object arg) {
            if ((this.F8042_GetTimeFooterDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8042_GetTimeFooterDetailsCompleted(this, new F8042_GetTimeFooterDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8046_GetMaterialsFooterDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8046_GetMaterialsFooterDetails(int eventId, int formId) {
            object[] results = this.Invoke("F8046_GetMaterialsFooterDetails", new object[] {
                        eventId,
                        formId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8046_GetMaterialsFooterDetailsAsync(int eventId, int formId) {
            this.F8046_GetMaterialsFooterDetailsAsync(eventId, formId, null);
        }
        
        /// <remarks/>
        public void F8046_GetMaterialsFooterDetailsAsync(int eventId, int formId, object userState) {
            if ((this.F8046_GetMaterialsFooterDetailsOperationCompleted == null)) {
                this.F8046_GetMaterialsFooterDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8046_GetMaterialsFooterDetailsOperationCompleted);
            }
            this.InvokeAsync("F8046_GetMaterialsFooterDetails", new object[] {
                        eventId,
                        formId}, this.F8046_GetMaterialsFooterDetailsOperationCompleted, userState);
        }
        
        private void OnF8046_GetMaterialsFooterDetailsOperationCompleted(object arg) {
            if ((this.F8046_GetMaterialsFooterDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8046_GetMaterialsFooterDetailsCompleted(this, new F8046_GetMaterialsFooterDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F27007_GetParcelHeaderSlimDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F27007_GetParcelHeaderSlimDetails(int parcelId) {
            object[] results = this.Invoke("F27007_GetParcelHeaderSlimDetails", new object[] {
                        parcelId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F27007_GetParcelHeaderSlimDetailsAsync(int parcelId) {
            this.F27007_GetParcelHeaderSlimDetailsAsync(parcelId, null);
        }
        
        /// <remarks/>
        public void F27007_GetParcelHeaderSlimDetailsAsync(int parcelId, object userState) {
            if ((this.F27007_GetParcelHeaderSlimDetailsOperationCompleted == null)) {
                this.F27007_GetParcelHeaderSlimDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF27007_GetParcelHeaderSlimDetailsOperationCompleted);
            }
            this.InvokeAsync("F27007_GetParcelHeaderSlimDetails", new object[] {
                        parcelId}, this.F27007_GetParcelHeaderSlimDetailsOperationCompleted, userState);
        }
        
        private void OnF27007_GetParcelHeaderSlimDetailsOperationCompleted(object arg) {
            if ((this.F27007_GetParcelHeaderSlimDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F27007_GetParcelHeaderSlimDetailsCompleted(this, new F27007_GetParcelHeaderSlimDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F15016_GetStatementHeaderSlimDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F15016_GetStatementHeaderSlimDetails(int statementlId) {
            object[] results = this.Invoke("F15016_GetStatementHeaderSlimDetails", new object[] {
                        statementlId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F15016_GetStatementHeaderSlimDetailsAsync(int statementlId) {
            this.F15016_GetStatementHeaderSlimDetailsAsync(statementlId, null);
        }
        
        /// <remarks/>
        public void F15016_GetStatementHeaderSlimDetailsAsync(int statementlId, object userState) {
            if ((this.F15016_GetStatementHeaderSlimDetailsOperationCompleted == null)) {
                this.F15016_GetStatementHeaderSlimDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF15016_GetStatementHeaderSlimDetailsOperationCompleted);
            }
            this.InvokeAsync("F15016_GetStatementHeaderSlimDetails", new object[] {
                        statementlId}, this.F15016_GetStatementHeaderSlimDetailsOperationCompleted, userState);
        }
        
        private void OnF15016_GetStatementHeaderSlimDetailsOperationCompleted(object arg) {
            if ((this.F15016_GetStatementHeaderSlimDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F15016_GetStatementHeaderSlimDetailsCompleted(this, new F15016_GetStatementHeaderSlimDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPaymentItemsDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPaymentItemsDetails() {
            object[] results = this.Invoke("GetPaymentItemsDetails", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentItemsDetailsAsync() {
            this.GetPaymentItemsDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetPaymentItemsDetailsAsync(object userState) {
            if ((this.GetPaymentItemsDetailsOperationCompleted == null)) {
                this.GetPaymentItemsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentItemsDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPaymentItemsDetails", new object[0], this.GetPaymentItemsDetailsOperationCompleted, userState);
        }
        
        private void OnGetPaymentItemsDetailsOperationCompleted(object arg) {
            if ((this.GetPaymentItemsDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentItemsDetailsCompleted(this, new GetPaymentItemsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePaymentItemsDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SavePaymentItemsDetails(int registerID, decimal amount, int userID, string paymentItemsDetails) {
            this.Invoke("SavePaymentItemsDetails", new object[] {
                        registerID,
                        amount,
                        userID,
                        paymentItemsDetails});
        }
        
        /// <remarks/>
        public void SavePaymentItemsDetailsAsync(int registerID, decimal amount, int userID, string paymentItemsDetails) {
            this.SavePaymentItemsDetailsAsync(registerID, amount, userID, paymentItemsDetails, null);
        }
        
        /// <remarks/>
        public void SavePaymentItemsDetailsAsync(int registerID, decimal amount, int userID, string paymentItemsDetails, object userState) {
            if ((this.SavePaymentItemsDetailsOperationCompleted == null)) {
                this.SavePaymentItemsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePaymentItemsDetailsOperationCompleted);
            }
            this.InvokeAsync("SavePaymentItemsDetails", new object[] {
                        registerID,
                        amount,
                        userID,
                        paymentItemsDetails}, this.SavePaymentItemsDetailsOperationCompleted, userState);
        }
        
        private void OnSavePaymentItemsDetailsOperationCompleted(object arg) {
            if ((this.SavePaymentItemsDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePaymentItemsDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListPostTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListPostTypes(int form) {
            object[] results = this.Invoke("ListPostTypes", new object[] {
                        form});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListPostTypesAsync(int form) {
            this.ListPostTypesAsync(form, null);
        }
        
        /// <remarks/>
        public void ListPostTypesAsync(int form, object userState) {
            if ((this.ListPostTypesOperationCompleted == null)) {
                this.ListPostTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListPostTypesOperationCompleted);
            }
            this.InvokeAsync("ListPostTypes", new object[] {
                        form}, this.ListPostTypesOperationCompleted, userState);
        }
        
        private void OnListPostTypesOperationCompleted(object arg) {
            if ((this.ListPostTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListPostTypesCompleted(this, new ListPostTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListPostingHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListPostingHistory(int count, int postTypeID) {
            object[] results = this.Invoke("ListPostingHistory", new object[] {
                        count,
                        postTypeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListPostingHistoryAsync(int count, int postTypeID) {
            this.ListPostingHistoryAsync(count, postTypeID, null);
        }
        
        /// <remarks/>
        public void ListPostingHistoryAsync(int count, int postTypeID, object userState) {
            if ((this.ListPostingHistoryOperationCompleted == null)) {
                this.ListPostingHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListPostingHistoryOperationCompleted);
            }
            this.InvokeAsync("ListPostingHistory", new object[] {
                        count,
                        postTypeID}, this.ListPostingHistoryOperationCompleted, userState);
        }
        
        private void OnListPostingHistoryOperationCompleted(object arg) {
            if ((this.ListPostingHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListPostingHistoryCompleted(this, new ListPostingHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListPostingErrors", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListPostingErrors(int userId) {
            object[] results = this.Invoke("ListPostingErrors", new object[] {
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListPostingErrorsAsync(int userId) {
            this.ListPostingErrorsAsync(userId, null);
        }
        
        /// <remarks/>
        public void ListPostingErrorsAsync(int userId, object userState) {
            if ((this.ListPostingErrorsOperationCompleted == null)) {
                this.ListPostingErrorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListPostingErrorsOperationCompleted);
            }
            this.InvokeAsync("ListPostingErrors", new object[] {
                        userId}, this.ListPostingErrorsOperationCompleted, userState);
        }
        
        private void OnListPostingErrorsOperationCompleted(object arg) {
            if ((this.ListPostingErrorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListPostingErrorsCompleted(this, new ListPostingErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertAccount(int userId, int errorTypeId) {
            this.Invoke("InsertAccount", new object[] {
                        userId,
                        errorTypeId});
        }
        
        /// <remarks/>
        public void InsertAccountAsync(int userId, int errorTypeId) {
            this.InsertAccountAsync(userId, errorTypeId, null);
        }
        
        /// <remarks/>
        public void InsertAccountAsync(int userId, int errorTypeId, object userState) {
            if ((this.InsertAccountOperationCompleted == null)) {
                this.InsertAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAccountOperationCompleted);
            }
            this.InvokeAsync("InsertAccount", new object[] {
                        userId,
                        errorTypeId}, this.InsertAccountOperationCompleted, userState);
        }
        
        private void OnInsertAccountOperationCompleted(object arg) {
            if ((this.InsertAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListPostingQueue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListPostingQueue() {
            object[] results = this.Invoke("ListPostingQueue", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListPostingQueueAsync() {
            this.ListPostingQueueAsync(null);
        }
        
        /// <remarks/>
        public void ListPostingQueueAsync(object userState) {
            if ((this.ListPostingQueueOperationCompleted == null)) {
                this.ListPostingQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListPostingQueueOperationCompleted);
            }
            this.InvokeAsync("ListPostingQueue", new object[0], this.ListPostingQueueOperationCompleted, userState);
        }
        
        private void OnListPostingQueueOperationCompleted(object arg) {
            if ((this.ListPostingQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListPostingQueueCompleted(this, new ListPostingQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListPreviewPosting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListPreviewPosting(System.DateTime postDate) {
            object[] results = this.Invoke("ListPreviewPosting", new object[] {
                        postDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListPreviewPostingAsync(System.DateTime postDate) {
            this.ListPreviewPostingAsync(postDate, null);
        }
        
        /// <remarks/>
        public void ListPreviewPostingAsync(System.DateTime postDate, object userState) {
            if ((this.ListPreviewPostingOperationCompleted == null)) {
                this.ListPreviewPostingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListPreviewPostingOperationCompleted);
            }
            this.InvokeAsync("ListPreviewPosting", new object[] {
                        postDate}, this.ListPreviewPostingOperationCompleted, userState);
        }
        
        private void OnListPreviewPostingOperationCompleted(object arg) {
            if ((this.ListPreviewPostingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListPreviewPostingCompleted(this, new ListPreviewPostingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClearTemporaryRecords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClearTemporaryRecords(int userId) {
            this.Invoke("ClearTemporaryRecords", new object[] {
                        userId});
        }
        
        /// <remarks/>
        public void ClearTemporaryRecordsAsync(int userId) {
            this.ClearTemporaryRecordsAsync(userId, null);
        }
        
        /// <remarks/>
        public void ClearTemporaryRecordsAsync(int userId, object userState) {
            if ((this.ClearTemporaryRecordsOperationCompleted == null)) {
                this.ClearTemporaryRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearTemporaryRecordsOperationCompleted);
            }
            this.InvokeAsync("ClearTemporaryRecords", new object[] {
                        userId}, this.ClearTemporaryRecordsOperationCompleted, userState);
        }
        
        private void OnClearTemporaryRecordsOperationCompleted(object arg) {
            if ((this.ClearTemporaryRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearTemporaryRecordsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CompilePostingRecordSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CompilePostingRecordSet(System.DateTime postDate, string selectedPostTypes, int userId) {
            object[] results = this.Invoke("CompilePostingRecordSet", new object[] {
                        postDate,
                        selectedPostTypes,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CompilePostingRecordSetAsync(System.DateTime postDate, string selectedPostTypes, int userId) {
            this.CompilePostingRecordSetAsync(postDate, selectedPostTypes, userId, null);
        }
        
        /// <remarks/>
        public void CompilePostingRecordSetAsync(System.DateTime postDate, string selectedPostTypes, int userId, object userState) {
            if ((this.CompilePostingRecordSetOperationCompleted == null)) {
                this.CompilePostingRecordSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompilePostingRecordSetOperationCompleted);
            }
            this.InvokeAsync("CompilePostingRecordSet", new object[] {
                        postDate,
                        selectedPostTypes,
                        userId}, this.CompilePostingRecordSetOperationCompleted, userState);
        }
        
        private void OnCompilePostingRecordSetOperationCompleted(object arg) {
            if ((this.CompilePostingRecordSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompilePostingRecordSetCompleted(this, new CompilePostingRecordSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PerformPosting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PerformPosting(System.DateTime postDate, string selectedPostTypes, int userId) {
            object[] results = this.Invoke("PerformPosting", new object[] {
                        postDate,
                        selectedPostTypes,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PerformPostingAsync(System.DateTime postDate, string selectedPostTypes, int userId) {
            this.PerformPostingAsync(postDate, selectedPostTypes, userId, null);
        }
        
        /// <remarks/>
        public void PerformPostingAsync(System.DateTime postDate, string selectedPostTypes, int userId, object userState) {
            if ((this.PerformPostingOperationCompleted == null)) {
                this.PerformPostingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPerformPostingOperationCompleted);
            }
            this.InvokeAsync("PerformPosting", new object[] {
                        postDate,
                        selectedPostTypes,
                        userId}, this.PerformPostingOperationCompleted, userState);
        }
        
        private void OnPerformPostingOperationCompleted(object arg) {
            if ((this.PerformPostingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PerformPostingCompleted(this, new PerformPostingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPostIdDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPostIdDetails(int postId) {
            object[] results = this.Invoke("GetPostIdDetails", new object[] {
                        postId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostIdDetailsAsync(int postId) {
            this.GetPostIdDetailsAsync(postId, null);
        }
        
        /// <remarks/>
        public void GetPostIdDetailsAsync(int postId, object userState) {
            if ((this.GetPostIdDetailsOperationCompleted == null)) {
                this.GetPostIdDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostIdDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPostIdDetails", new object[] {
                        postId}, this.GetPostIdDetailsOperationCompleted, userState);
        }
        
        private void OnGetPostIdDetailsOperationCompleted(object arg) {
            if ((this.GetPostIdDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostIdDetailsCompleted(this, new GetPostIdDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertReverseGLPost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertReverseGLPost(int postId, int userId) {
            this.Invoke("InsertReverseGLPost", new object[] {
                        postId,
                        userId});
        }
        
        /// <remarks/>
        public void InsertReverseGLPostAsync(int postId, int userId) {
            this.InsertReverseGLPostAsync(postId, userId, null);
        }
        
        /// <remarks/>
        public void InsertReverseGLPostAsync(int postId, int userId, object userState) {
            if ((this.InsertReverseGLPostOperationCompleted == null)) {
                this.InsertReverseGLPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReverseGLPostOperationCompleted);
            }
            this.InvokeAsync("InsertReverseGLPost", new object[] {
                        postId,
                        userId}, this.InsertReverseGLPostOperationCompleted, userState);
        }
        
        private void OnInsertReverseGLPostOperationCompleted(object arg) {
            if ((this.InsertReverseGLPostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReverseGLPostCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEventEngineEventProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEventEngineEventProperties(int eventId) {
            object[] results = this.Invoke("GetEventEngineEventProperties", new object[] {
                        eventId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventEngineEventPropertiesAsync(int eventId) {
            this.GetEventEngineEventPropertiesAsync(eventId, null);
        }
        
        /// <remarks/>
        public void GetEventEngineEventPropertiesAsync(int eventId, object userState) {
            if ((this.GetEventEngineEventPropertiesOperationCompleted == null)) {
                this.GetEventEngineEventPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventEngineEventPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetEventEngineEventProperties", new object[] {
                        eventId}, this.GetEventEngineEventPropertiesOperationCompleted, userState);
        }
        
        private void OnGetEventEngineEventPropertiesOperationCompleted(object arg) {
            if ((this.GetEventEngineEventPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventEngineEventPropertiesCompleted(this, new GetEventEngineEventPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEventEngineEventProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveEventEngineEventProperties(string eventItems) {
            this.Invoke("SaveEventEngineEventProperties", new object[] {
                        eventItems});
        }
        
        /// <remarks/>
        public void SaveEventEngineEventPropertiesAsync(string eventItems) {
            this.SaveEventEngineEventPropertiesAsync(eventItems, null);
        }
        
        /// <remarks/>
        public void SaveEventEngineEventPropertiesAsync(string eventItems, object userState) {
            if ((this.SaveEventEngineEventPropertiesOperationCompleted == null)) {
                this.SaveEventEngineEventPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEventEngineEventPropertiesOperationCompleted);
            }
            this.InvokeAsync("SaveEventEngineEventProperties", new object[] {
                        eventItems}, this.SaveEventEngineEventPropertiesOperationCompleted, userState);
        }
        
        private void OnSaveEventEngineEventPropertiesOperationCompleted(object arg) {
            if ((this.SaveEventEngineEventPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEventEngineEventPropertiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEventEngineTVDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListEventEngineTVDetails(int eventId) {
            object[] results = this.Invoke("ListEventEngineTVDetails", new object[] {
                        eventId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListEventEngineTVDetailsAsync(int eventId) {
            this.ListEventEngineTVDetailsAsync(eventId, null);
        }
        
        /// <remarks/>
        public void ListEventEngineTVDetailsAsync(int eventId, object userState) {
            if ((this.ListEventEngineTVDetailsOperationCompleted == null)) {
                this.ListEventEngineTVDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListEventEngineTVDetailsOperationCompleted);
            }
            this.InvokeAsync("ListEventEngineTVDetails", new object[] {
                        eventId}, this.ListEventEngineTVDetailsOperationCompleted, userState);
        }
        
        private void OnListEventEngineTVDetailsOperationCompleted(object arg) {
            if ((this.ListEventEngineTVDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListEventEngineTVDetailsCompleted(this, new ListEventEngineTVDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEventEngineDetailTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListEventEngineDetailTypes() {
            object[] results = this.Invoke("ListEventEngineDetailTypes", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListEventEngineDetailTypesAsync() {
            this.ListEventEngineDetailTypesAsync(null);
        }
        
        /// <remarks/>
        public void ListEventEngineDetailTypesAsync(object userState) {
            if ((this.ListEventEngineDetailTypesOperationCompleted == null)) {
                this.ListEventEngineDetailTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListEventEngineDetailTypesOperationCompleted);
            }
            this.InvokeAsync("ListEventEngineDetailTypes", new object[0], this.ListEventEngineDetailTypesOperationCompleted, userState);
        }
        
        private void OnListEventEngineDetailTypesOperationCompleted(object arg) {
            if ((this.ListEventEngineDetailTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListEventEngineDetailTypesCompleted(this, new ListEventEngineDetailTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEventEngineTVDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveEventEngineTVDetails(string eventItems) {
            this.Invoke("SaveEventEngineTVDetails", new object[] {
                        eventItems});
        }
        
        /// <remarks/>
        public void SaveEventEngineTVDetailsAsync(string eventItems) {
            this.SaveEventEngineTVDetailsAsync(eventItems, null);
        }
        
        /// <remarks/>
        public void SaveEventEngineTVDetailsAsync(string eventItems, object userState) {
            if ((this.SaveEventEngineTVDetailsOperationCompleted == null)) {
                this.SaveEventEngineTVDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEventEngineTVDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveEventEngineTVDetails", new object[] {
                        eventItems}, this.SaveEventEngineTVDetailsOperationCompleted, userState);
        }
        
        private void OnSaveEventEngineTVDetailsOperationCompleted(object arg) {
            if ((this.SaveEventEngineTVDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEventEngineTVDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEventEngineTVDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateEventEngineTVDetails(string eventItems) {
            this.Invoke("UpdateEventEngineTVDetails", new object[] {
                        eventItems});
        }
        
        /// <remarks/>
        public void UpdateEventEngineTVDetailsAsync(string eventItems) {
            this.UpdateEventEngineTVDetailsAsync(eventItems, null);
        }
        
        /// <remarks/>
        public void UpdateEventEngineTVDetailsAsync(string eventItems, object userState) {
            if ((this.UpdateEventEngineTVDetailsOperationCompleted == null)) {
                this.UpdateEventEngineTVDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEventEngineTVDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateEventEngineTVDetails", new object[] {
                        eventItems}, this.UpdateEventEngineTVDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateEventEngineTVDetailsOperationCompleted(object arg) {
            if ((this.UpdateEventEngineTVDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEventEngineTVDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEventEngineTVDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteEventEngineTVDetails(int detailId) {
            object[] results = this.Invoke("DeleteEventEngineTVDetails", new object[] {
                        detailId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEventEngineTVDetailsAsync(int detailId) {
            this.DeleteEventEngineTVDetailsAsync(detailId, null);
        }
        
        /// <remarks/>
        public void DeleteEventEngineTVDetailsAsync(int detailId, object userState) {
            if ((this.DeleteEventEngineTVDetailsOperationCompleted == null)) {
                this.DeleteEventEngineTVDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEventEngineTVDetailsOperationCompleted);
            }
            this.InvokeAsync("DeleteEventEngineTVDetails", new object[] {
                        detailId}, this.DeleteEventEngineTVDetailsOperationCompleted, userState);
        }
        
        private void OnDeleteEventEngineTVDetailsOperationCompleted(object arg) {
            if ((this.DeleteEventEngineTVDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEventEngineTVDetailsCompleted(this, new DeleteEventEngineTVDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSandwichAndItsSliceInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSandwichAndItsSliceInformation(int form, int keyID, int userID) {
            object[] results = this.Invoke("GetSandwichAndItsSliceInformation", new object[] {
                        form,
                        keyID,
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSandwichAndItsSliceInformationAsync(int form, int keyID, int userID) {
            this.GetSandwichAndItsSliceInformationAsync(form, keyID, userID, null);
        }
        
        /// <remarks/>
        public void GetSandwichAndItsSliceInformationAsync(int form, int keyID, int userID, object userState) {
            if ((this.GetSandwichAndItsSliceInformationOperationCompleted == null)) {
                this.GetSandwichAndItsSliceInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSandwichAndItsSliceInformationOperationCompleted);
            }
            this.InvokeAsync("GetSandwichAndItsSliceInformation", new object[] {
                        form,
                        keyID,
                        userID}, this.GetSandwichAndItsSliceInformationOperationCompleted, userState);
        }
        
        private void OnGetSandwichAndItsSliceInformationOperationCompleted(object arg) {
            if ((this.GetSandwichAndItsSliceInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSandwichAndItsSliceInformationCompleted(this, new GetSandwichAndItsSliceInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSandwichSubTitleInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSandwichSubTitleInformation(int form, int keyID) {
            object[] results = this.Invoke("GetSandwichSubTitleInformation", new object[] {
                        form,
                        keyID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSandwichSubTitleInformationAsync(int form, int keyID) {
            this.GetSandwichSubTitleInformationAsync(form, keyID, null);
        }
        
        /// <remarks/>
        public void GetSandwichSubTitleInformationAsync(int form, int keyID, object userState) {
            if ((this.GetSandwichSubTitleInformationOperationCompleted == null)) {
                this.GetSandwichSubTitleInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSandwichSubTitleInformationOperationCompleted);
            }
            this.InvokeAsync("GetSandwichSubTitleInformation", new object[] {
                        form,
                        keyID}, this.GetSandwichSubTitleInformationOperationCompleted, userState);
        }
        
        private void OnGetSandwichSubTitleInformationOperationCompleted(object arg) {
            if ((this.GetSandwichSubTitleInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSandwichSubTitleInformationCompleted(this, new GetSandwichSubTitleInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormDetails(int form, int userId) {
            object[] results = this.Invoke("GetFormDetails", new object[] {
                        form,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormDetailsAsync(int form, int userId) {
            this.GetFormDetailsAsync(form, userId, null);
        }
        
        /// <remarks/>
        public void GetFormDetailsAsync(int form, int userId, object userState) {
            if ((this.GetFormDetailsOperationCompleted == null)) {
                this.GetFormDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormDetailsOperationCompleted);
            }
            this.InvokeAsync("GetFormDetails", new object[] {
                        form,
                        userId}, this.GetFormDetailsOperationCompleted, userState);
        }
        
        private void OnGetFormDetailsOperationCompleted(object arg) {
            if ((this.GetFormDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormDetailsCompleted(this, new GetFormDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListUserNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListUserNames() {
            object[] results = this.Invoke("ListUserNames", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListUserNamesAsync() {
            this.ListUserNamesAsync(null);
        }
        
        /// <remarks/>
        public void ListUserNamesAsync(object userState) {
            if ((this.ListUserNamesOperationCompleted == null)) {
                this.ListUserNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListUserNamesOperationCompleted);
            }
            this.InvokeAsync("ListUserNames", new object[0], this.ListUserNamesOperationCompleted, userState);
        }
        
        private void OnListUserNamesOperationCompleted(object arg) {
            if ((this.ListUserNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListUserNamesCompleted(this, new ListUserNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListDepositHistoryDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListDepositHistoryDetails() {
            object[] results = this.Invoke("ListDepositHistoryDetails", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListDepositHistoryDetailsAsync() {
            this.ListDepositHistoryDetailsAsync(null);
        }
        
        /// <remarks/>
        public void ListDepositHistoryDetailsAsync(object userState) {
            if ((this.ListDepositHistoryDetailsOperationCompleted == null)) {
                this.ListDepositHistoryDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListDepositHistoryDetailsOperationCompleted);
            }
            this.InvokeAsync("ListDepositHistoryDetails", new object[0], this.ListDepositHistoryDetailsOperationCompleted, userState);
        }
        
        private void OnListDepositHistoryDetailsOperationCompleted(object arg) {
            if ((this.ListDepositHistoryDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListDepositHistoryDetailsCompleted(this, new ListDepositHistoryDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepositHistorySearchResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepositHistorySearchResult(int form, string whereCondnSql) {
            object[] results = this.Invoke("GetDepositHistorySearchResult", new object[] {
                        form,
                        whereCondnSql});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepositHistorySearchResultAsync(int form, string whereCondnSql) {
            this.GetDepositHistorySearchResultAsync(form, whereCondnSql, null);
        }
        
        /// <remarks/>
        public void GetDepositHistorySearchResultAsync(int form, string whereCondnSql, object userState) {
            if ((this.GetDepositHistorySearchResultOperationCompleted == null)) {
                this.GetDepositHistorySearchResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepositHistorySearchResultOperationCompleted);
            }
            this.InvokeAsync("GetDepositHistorySearchResult", new object[] {
                        form,
                        whereCondnSql}, this.GetDepositHistorySearchResultOperationCompleted, userState);
        }
        
        private void OnGetDepositHistorySearchResultOperationCompleted(object arg) {
            if ((this.GetDepositHistorySearchResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepositHistorySearchResultCompleted(this, new GetDepositHistorySearchResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDepositHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDepositHistory(int clid, int userId) {
            this.Invoke("UpdateDepositHistory", new object[] {
                        clid,
                        userId});
        }
        
        /// <remarks/>
        public void UpdateDepositHistoryAsync(int clid, int userId) {
            this.UpdateDepositHistoryAsync(clid, userId, null);
        }
        
        /// <remarks/>
        public void UpdateDepositHistoryAsync(int clid, int userId, object userState) {
            if ((this.UpdateDepositHistoryOperationCompleted == null)) {
                this.UpdateDepositHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDepositHistoryOperationCompleted);
            }
            this.InvokeAsync("UpdateDepositHistory", new object[] {
                        clid,
                        userId}, this.UpdateDepositHistoryOperationCompleted, userState);
        }
        
        private void OnUpdateDepositHistoryOperationCompleted(object arg) {
            if ((this.UpdateDepositHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDepositHistoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAccountNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListAccountNames() {
            object[] results = this.Invoke("ListAccountNames", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListAccountNamesAsync() {
            this.ListAccountNamesAsync(null);
        }
        
        /// <remarks/>
        public void ListAccountNamesAsync(object userState) {
            if ((this.ListAccountNamesOperationCompleted == null)) {
                this.ListAccountNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAccountNamesOperationCompleted);
            }
            this.InvokeAsync("ListAccountNames", new object[0], this.ListAccountNamesOperationCompleted, userState);
        }
        
        private void OnListAccountNamesOperationCompleted(object arg) {
            if ((this.ListAccountNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAccountNamesCompleted(this, new ListAccountNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLinearEventType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLinearEventType(int eventId) {
            object[] results = this.Invoke("GetLinearEventType", new object[] {
                        eventId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinearEventTypeAsync(int eventId) {
            this.GetLinearEventTypeAsync(eventId, null);
        }
        
        /// <remarks/>
        public void GetLinearEventTypeAsync(int eventId, object userState) {
            if ((this.GetLinearEventTypeOperationCompleted == null)) {
                this.GetLinearEventTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinearEventTypeOperationCompleted);
            }
            this.InvokeAsync("GetLinearEventType", new object[] {
                        eventId}, this.GetLinearEventTypeOperationCompleted, userState);
        }
        
        private void OnGetLinearEventTypeOperationCompleted(object arg) {
            if ((this.GetLinearEventTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinearEventTypeCompleted(this, new GetLinearEventTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveLinearEventType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveLinearEventType(string eventItems) {
            this.Invoke("SaveLinearEventType", new object[] {
                        eventItems});
        }
        
        /// <remarks/>
        public void SaveLinearEventTypeAsync(string eventItems) {
            this.SaveLinearEventTypeAsync(eventItems, null);
        }
        
        /// <remarks/>
        public void SaveLinearEventTypeAsync(string eventItems, object userState) {
            if ((this.SaveLinearEventTypeOperationCompleted == null)) {
                this.SaveLinearEventTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveLinearEventTypeOperationCompleted);
            }
            this.InvokeAsync("SaveLinearEventType", new object[] {
                        eventItems}, this.SaveLinearEventTypeOperationCompleted, userState);
        }
        
        private void OnSaveLinearEventTypeOperationCompleted(object arg) {
            if ((this.SaveLinearEventTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveLinearEventTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPointEventType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPointEventType(int eventId) {
            object[] results = this.Invoke("GetPointEventType", new object[] {
                        eventId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPointEventTypeAsync(int eventId) {
            this.GetPointEventTypeAsync(eventId, null);
        }
        
        /// <remarks/>
        public void GetPointEventTypeAsync(int eventId, object userState) {
            if ((this.GetPointEventTypeOperationCompleted == null)) {
                this.GetPointEventTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPointEventTypeOperationCompleted);
            }
            this.InvokeAsync("GetPointEventType", new object[] {
                        eventId}, this.GetPointEventTypeOperationCompleted, userState);
        }
        
        private void OnGetPointEventTypeOperationCompleted(object arg) {
            if ((this.GetPointEventTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPointEventTypeCompleted(this, new GetPointEventTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePointEventType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SavePointEventType(string eventItems) {
            this.Invoke("SavePointEventType", new object[] {
                        eventItems});
        }
        
        /// <remarks/>
        public void SavePointEventTypeAsync(string eventItems) {
            this.SavePointEventTypeAsync(eventItems, null);
        }
        
        /// <remarks/>
        public void SavePointEventTypeAsync(string eventItems, object userState) {
            if ((this.SavePointEventTypeOperationCompleted == null)) {
                this.SavePointEventTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePointEventTypeOperationCompleted);
            }
            this.InvokeAsync("SavePointEventType", new object[] {
                        eventItems}, this.SavePointEventTypeOperationCompleted, userState);
        }
        
        private void OnSavePointEventTypeOperationCompleted(object arg) {
            if ((this.SavePointEventTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePointEventTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1211_GetDisbursementCheckList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1211_GetDisbursementCheckList() {
            object[] results = this.Invoke("F1211_GetDisbursementCheckList", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1211_GetDisbursementCheckListAsync() {
            this.F1211_GetDisbursementCheckListAsync(null);
        }
        
        /// <remarks/>
        public void F1211_GetDisbursementCheckListAsync(object userState) {
            if ((this.F1211_GetDisbursementCheckListOperationCompleted == null)) {
                this.F1211_GetDisbursementCheckListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1211_GetDisbursementCheckListOperationCompleted);
            }
            this.InvokeAsync("F1211_GetDisbursementCheckList", new object[0], this.F1211_GetDisbursementCheckListOperationCompleted, userState);
        }
        
        private void OnF1211_GetDisbursementCheckListOperationCompleted(object arg) {
            if ((this.F1211_GetDisbursementCheckListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1211_GetDisbursementCheckListCompleted(this, new F1211_GetDisbursementCheckListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1211_UpdateCheckStaging", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F1211_UpdateCheckStaging(int tclId, string disbursementCheck, string checkItems) {
            this.Invoke("F1211_UpdateCheckStaging", new object[] {
                        tclId,
                        disbursementCheck,
                        checkItems});
        }
        
        /// <remarks/>
        public void F1211_UpdateCheckStagingAsync(int tclId, string disbursementCheck, string checkItems) {
            this.F1211_UpdateCheckStagingAsync(tclId, disbursementCheck, checkItems, null);
        }
        
        /// <remarks/>
        public void F1211_UpdateCheckStagingAsync(int tclId, string disbursementCheck, string checkItems, object userState) {
            if ((this.F1211_UpdateCheckStagingOperationCompleted == null)) {
                this.F1211_UpdateCheckStagingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1211_UpdateCheckStagingOperationCompleted);
            }
            this.InvokeAsync("F1211_UpdateCheckStaging", new object[] {
                        tclId,
                        disbursementCheck,
                        checkItems}, this.F1211_UpdateCheckStagingOperationCompleted, userState);
        }
        
        private void OnF1211_UpdateCheckStagingOperationCompleted(object arg) {
            if ((this.F1211_UpdateCheckStagingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1211_UpdateCheckStagingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1211_UpdateAgencyValidStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F1211_UpdateAgencyValidStatus(string tclIds, int validStatus) {
            this.Invoke("F1211_UpdateAgencyValidStatus", new object[] {
                        tclIds,
                        validStatus});
        }
        
        /// <remarks/>
        public void F1211_UpdateAgencyValidStatusAsync(string tclIds, int validStatus) {
            this.F1211_UpdateAgencyValidStatusAsync(tclIds, validStatus, null);
        }
        
        /// <remarks/>
        public void F1211_UpdateAgencyValidStatusAsync(string tclIds, int validStatus, object userState) {
            if ((this.F1211_UpdateAgencyValidStatusOperationCompleted == null)) {
                this.F1211_UpdateAgencyValidStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1211_UpdateAgencyValidStatusOperationCompleted);
            }
            this.InvokeAsync("F1211_UpdateAgencyValidStatus", new object[] {
                        tclIds,
                        validStatus}, this.F1211_UpdateAgencyValidStatusOperationCompleted, userState);
        }
        
        private void OnF1211_UpdateAgencyValidStatusOperationCompleted(object arg) {
            if ((this.F1211_UpdateAgencyValidStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1211_UpdateAgencyValidStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1211_DeleteCheckStaging", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F1211_DeleteCheckStaging(string tclIdDelete) {
            this.Invoke("F1211_DeleteCheckStaging", new object[] {
                        tclIdDelete});
        }
        
        /// <remarks/>
        public void F1211_DeleteCheckStagingAsync(string tclIdDelete) {
            this.F1211_DeleteCheckStagingAsync(tclIdDelete, null);
        }
        
        /// <remarks/>
        public void F1211_DeleteCheckStagingAsync(string tclIdDelete, object userState) {
            if ((this.F1211_DeleteCheckStagingOperationCompleted == null)) {
                this.F1211_DeleteCheckStagingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1211_DeleteCheckStagingOperationCompleted);
            }
            this.InvokeAsync("F1211_DeleteCheckStaging", new object[] {
                        tclIdDelete}, this.F1211_DeleteCheckStagingOperationCompleted, userState);
        }
        
        private void OnF1211_DeleteCheckStagingOperationCompleted(object arg) {
            if ((this.F1211_DeleteCheckStagingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1211_DeleteCheckStagingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1211_CreateChecks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1211_CreateChecks(int userId, string createChecksTclId) {
            object[] results = this.Invoke("F1211_CreateChecks", new object[] {
                        userId,
                        createChecksTclId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1211_CreateChecksAsync(int userId, string createChecksTclId) {
            this.F1211_CreateChecksAsync(userId, createChecksTclId, null);
        }
        
        /// <remarks/>
        public void F1211_CreateChecksAsync(int userId, string createChecksTclId, object userState) {
            if ((this.F1211_CreateChecksOperationCompleted == null)) {
                this.F1211_CreateChecksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1211_CreateChecksOperationCompleted);
            }
            this.InvokeAsync("F1211_CreateChecks", new object[] {
                        userId,
                        createChecksTclId}, this.F1211_CreateChecksOperationCompleted, userState);
        }
        
        private void OnF1211_CreateChecksOperationCompleted(object arg) {
            if ((this.F1211_CreateChecksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1211_CreateChecksCompleted(this, new F1211_CreateChecksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8056_ListInspectionDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8056_ListInspectionDetails(int eventId) {
            object[] results = this.Invoke("F8056_ListInspectionDetails", new object[] {
                        eventId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8056_ListInspectionDetailsAsync(int eventId) {
            this.F8056_ListInspectionDetailsAsync(eventId, null);
        }
        
        /// <remarks/>
        public void F8056_ListInspectionDetailsAsync(int eventId, object userState) {
            if ((this.F8056_ListInspectionDetailsOperationCompleted == null)) {
                this.F8056_ListInspectionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8056_ListInspectionDetailsOperationCompleted);
            }
            this.InvokeAsync("F8056_ListInspectionDetails", new object[] {
                        eventId}, this.F8056_ListInspectionDetailsOperationCompleted, userState);
        }
        
        private void OnF8056_ListInspectionDetailsOperationCompleted(object arg) {
            if ((this.F8056_ListInspectionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8056_ListInspectionDetailsCompleted(this, new F8056_ListInspectionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8056_SaveInspectionDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F8056_SaveInspectionDetails(string eventItems) {
            this.Invoke("F8056_SaveInspectionDetails", new object[] {
                        eventItems});
        }
        
        /// <remarks/>
        public void F8056_SaveInspectionDetailsAsync(string eventItems) {
            this.F8056_SaveInspectionDetailsAsync(eventItems, null);
        }
        
        /// <remarks/>
        public void F8056_SaveInspectionDetailsAsync(string eventItems, object userState) {
            if ((this.F8056_SaveInspectionDetailsOperationCompleted == null)) {
                this.F8056_SaveInspectionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8056_SaveInspectionDetailsOperationCompleted);
            }
            this.InvokeAsync("F8056_SaveInspectionDetails", new object[] {
                        eventItems}, this.F8056_SaveInspectionDetailsOperationCompleted, userState);
        }
        
        private void OnF8056_SaveInspectionDetailsOperationCompleted(object arg) {
            if ((this.F8056_SaveInspectionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8056_SaveInspectionDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8056_UpdateInspectionDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F8056_UpdateInspectionDetails(string eventItems) {
            this.Invoke("F8056_UpdateInspectionDetails", new object[] {
                        eventItems});
        }
        
        /// <remarks/>
        public void F8056_UpdateInspectionDetailsAsync(string eventItems) {
            this.F8056_UpdateInspectionDetailsAsync(eventItems, null);
        }
        
        /// <remarks/>
        public void F8056_UpdateInspectionDetailsAsync(string eventItems, object userState) {
            if ((this.F8056_UpdateInspectionDetailsOperationCompleted == null)) {
                this.F8056_UpdateInspectionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8056_UpdateInspectionDetailsOperationCompleted);
            }
            this.InvokeAsync("F8056_UpdateInspectionDetails", new object[] {
                        eventItems}, this.F8056_UpdateInspectionDetailsOperationCompleted, userState);
        }
        
        private void OnF8056_UpdateInspectionDetailsOperationCompleted(object arg) {
            if ((this.F8056_UpdateInspectionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8056_UpdateInspectionDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8056_DeleteInspectionDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F8056_DeleteInspectionDetails(int inspectionId) {
            object[] results = this.Invoke("F8056_DeleteInspectionDetails", new object[] {
                        inspectionId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F8056_DeleteInspectionDetailsAsync(int inspectionId) {
            this.F8056_DeleteInspectionDetailsAsync(inspectionId, null);
        }
        
        /// <remarks/>
        public void F8056_DeleteInspectionDetailsAsync(int inspectionId, object userState) {
            if ((this.F8056_DeleteInspectionDetailsOperationCompleted == null)) {
                this.F8056_DeleteInspectionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8056_DeleteInspectionDetailsOperationCompleted);
            }
            this.InvokeAsync("F8056_DeleteInspectionDetails", new object[] {
                        inspectionId}, this.F8056_DeleteInspectionDetailsOperationCompleted, userState);
        }
        
        private void OnF8056_DeleteInspectionDetailsOperationCompleted(object arg) {
            if ((this.F8056_DeleteInspectionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8056_DeleteInspectionDetailsCompleted(this, new F8056_DeleteInspectionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1210_GetDisbursementDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1210_GetDisbursementDetails(System.DateTime postDate) {
            object[] results = this.Invoke("F1210_GetDisbursementDetails", new object[] {
                        postDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1210_GetDisbursementDetailsAsync(System.DateTime postDate) {
            this.F1210_GetDisbursementDetailsAsync(postDate, null);
        }
        
        /// <remarks/>
        public void F1210_GetDisbursementDetailsAsync(System.DateTime postDate, object userState) {
            if ((this.F1210_GetDisbursementDetailsOperationCompleted == null)) {
                this.F1210_GetDisbursementDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1210_GetDisbursementDetailsOperationCompleted);
            }
            this.InvokeAsync("F1210_GetDisbursementDetails", new object[] {
                        postDate}, this.F1210_GetDisbursementDetailsOperationCompleted, userState);
        }
        
        private void OnF1210_GetDisbursementDetailsOperationCompleted(object arg) {
            if ((this.F1210_GetDisbursementDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1210_GetDisbursementDetailsCompleted(this, new F1210_GetDisbursementDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1210_DisbursementAccountNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1210_DisbursementAccountNames() {
            object[] results = this.Invoke("F1210_DisbursementAccountNames", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1210_DisbursementAccountNamesAsync() {
            this.F1210_DisbursementAccountNamesAsync(null);
        }
        
        /// <remarks/>
        public void F1210_DisbursementAccountNamesAsync(object userState) {
            if ((this.F1210_DisbursementAccountNamesOperationCompleted == null)) {
                this.F1210_DisbursementAccountNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1210_DisbursementAccountNamesOperationCompleted);
            }
            this.InvokeAsync("F1210_DisbursementAccountNames", new object[0], this.F1210_DisbursementAccountNamesOperationCompleted, userState);
        }
        
        private void OnF1210_DisbursementAccountNamesOperationCompleted(object arg) {
            if ((this.F1210_DisbursementAccountNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1210_DisbursementAccountNamesCompleted(this, new F1210_DisbursementAccountNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1210_SaveDisbursement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1210_SaveDisbursement(int registerId, int userId, System.DateTime postDate, string agencies, int overrideStatus) {
            object[] results = this.Invoke("F1210_SaveDisbursement", new object[] {
                        registerId,
                        userId,
                        postDate,
                        agencies,
                        overrideStatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1210_SaveDisbursementAsync(int registerId, int userId, System.DateTime postDate, string agencies, int overrideStatus) {
            this.F1210_SaveDisbursementAsync(registerId, userId, postDate, agencies, overrideStatus, null);
        }
        
        /// <remarks/>
        public void F1210_SaveDisbursementAsync(int registerId, int userId, System.DateTime postDate, string agencies, int overrideStatus, object userState) {
            if ((this.F1210_SaveDisbursementOperationCompleted == null)) {
                this.F1210_SaveDisbursementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1210_SaveDisbursementOperationCompleted);
            }
            this.InvokeAsync("F1210_SaveDisbursement", new object[] {
                        registerId,
                        userId,
                        postDate,
                        agencies,
                        overrideStatus}, this.F1210_SaveDisbursementOperationCompleted, userState);
        }
        
        private void OnF1210_SaveDisbursementOperationCompleted(object arg) {
            if ((this.F1210_SaveDisbursementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1210_SaveDisbursementCompleted(this, new F1210_SaveDisbursementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1214_AccountNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1214_AccountNames() {
            object[] results = this.Invoke("F1214_AccountNames", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1214_AccountNamesAsync() {
            this.F1214_AccountNamesAsync(null);
        }
        
        /// <remarks/>
        public void F1214_AccountNamesAsync(object userState) {
            if ((this.F1214_AccountNamesOperationCompleted == null)) {
                this.F1214_AccountNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1214_AccountNamesOperationCompleted);
            }
            this.InvokeAsync("F1214_AccountNames", new object[0], this.F1214_AccountNamesOperationCompleted, userState);
        }
        
        private void OnF1214_AccountNamesOperationCompleted(object arg) {
            if ((this.F1214_AccountNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1214_AccountNamesCompleted(this, new F1214_AccountNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1214_ListRefundPayments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1214_ListRefundPayments(int form, string whereCondnSql) {
            object[] results = this.Invoke("F1214_ListRefundPayments", new object[] {
                        form,
                        whereCondnSql});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1214_ListRefundPaymentsAsync(int form, string whereCondnSql) {
            this.F1214_ListRefundPaymentsAsync(form, whereCondnSql, null);
        }
        
        /// <remarks/>
        public void F1214_ListRefundPaymentsAsync(int form, string whereCondnSql, object userState) {
            if ((this.F1214_ListRefundPaymentsOperationCompleted == null)) {
                this.F1214_ListRefundPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1214_ListRefundPaymentsOperationCompleted);
            }
            this.InvokeAsync("F1214_ListRefundPayments", new object[] {
                        form,
                        whereCondnSql}, this.F1214_ListRefundPaymentsOperationCompleted, userState);
        }
        
        private void OnF1214_ListRefundPaymentsOperationCompleted(object arg) {
            if ((this.F1214_ListRefundPaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1214_ListRefundPaymentsCompleted(this, new F1214_ListRefundPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1214_PrepareChecks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1214_PrepareChecks(int registerID, int ownerID, System.DateTime interestDate, int userID, string paymentItems) {
            object[] results = this.Invoke("F1214_PrepareChecks", new object[] {
                        registerID,
                        ownerID,
                        interestDate,
                        userID,
                        paymentItems});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1214_PrepareChecksAsync(int registerID, int ownerID, System.DateTime interestDate, int userID, string paymentItems) {
            this.F1214_PrepareChecksAsync(registerID, ownerID, interestDate, userID, paymentItems, null);
        }
        
        /// <remarks/>
        public void F1214_PrepareChecksAsync(int registerID, int ownerID, System.DateTime interestDate, int userID, string paymentItems, object userState) {
            if ((this.F1214_PrepareChecksOperationCompleted == null)) {
                this.F1214_PrepareChecksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1214_PrepareChecksOperationCompleted);
            }
            this.InvokeAsync("F1214_PrepareChecks", new object[] {
                        registerID,
                        ownerID,
                        interestDate,
                        userID,
                        paymentItems}, this.F1214_PrepareChecksOperationCompleted, userState);
        }
        
        private void OnF1214_PrepareChecksOperationCompleted(object arg) {
            if ((this.F1214_PrepareChecksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1214_PrepareChecksCompleted(this, new F1214_PrepareChecksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1226_ListCashLedger", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1226_ListCashLedger() {
            object[] results = this.Invoke("F1226_ListCashLedger", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1226_ListCashLedgerAsync() {
            this.F1226_ListCashLedgerAsync(null);
        }
        
        /// <remarks/>
        public void F1226_ListCashLedgerAsync(object userState) {
            if ((this.F1226_ListCashLedgerOperationCompleted == null)) {
                this.F1226_ListCashLedgerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1226_ListCashLedgerOperationCompleted);
            }
            this.InvokeAsync("F1226_ListCashLedger", new object[0], this.F1226_ListCashLedgerOperationCompleted, userState);
        }
        
        private void OnF1226_ListCashLedgerOperationCompleted(object arg) {
            if ((this.F1226_ListCashLedgerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1226_ListCashLedgerCompleted(this, new F1226_ListCashLedgerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1226_GetCashLedger", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1226_GetCashLedger(int clid) {
            object[] results = this.Invoke("F1226_GetCashLedger", new object[] {
                        clid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1226_GetCashLedgerAsync(int clid) {
            this.F1226_GetCashLedgerAsync(clid, null);
        }
        
        /// <remarks/>
        public void F1226_GetCashLedgerAsync(int clid, object userState) {
            if ((this.F1226_GetCashLedgerOperationCompleted == null)) {
                this.F1226_GetCashLedgerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1226_GetCashLedgerOperationCompleted);
            }
            this.InvokeAsync("F1226_GetCashLedger", new object[] {
                        clid}, this.F1226_GetCashLedgerOperationCompleted, userState);
        }
        
        private void OnF1226_GetCashLedgerOperationCompleted(object arg) {
            if ((this.F1226_GetCashLedgerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1226_GetCashLedgerCompleted(this, new F1226_GetCashLedgerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1221_UpdateCashLedger", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1221_UpdateCashLedger(int clid, int overRide, string checkDetails) {
            object[] results = this.Invoke("F1221_UpdateCashLedger", new object[] {
                        clid,
                        overRide,
                        checkDetails});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1221_UpdateCashLedgerAsync(int clid, int overRide, string checkDetails) {
            this.F1221_UpdateCashLedgerAsync(clid, overRide, checkDetails, null);
        }
        
        /// <remarks/>
        public void F1221_UpdateCashLedgerAsync(int clid, int overRide, string checkDetails, object userState) {
            if ((this.F1221_UpdateCashLedgerOperationCompleted == null)) {
                this.F1221_UpdateCashLedgerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1221_UpdateCashLedgerOperationCompleted);
            }
            this.InvokeAsync("F1221_UpdateCashLedger", new object[] {
                        clid,
                        overRide,
                        checkDetails}, this.F1221_UpdateCashLedgerOperationCompleted, userState);
        }
        
        private void OnF1221_UpdateCashLedgerOperationCompleted(object arg) {
            if ((this.F1221_UpdateCashLedgerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1221_UpdateCashLedgerCompleted(this, new F1221_UpdateCashLedgerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1226_UpdateCashLedgerStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F1226_UpdateCashLedgerStatus(int clid, int userId, System.DateTime functionDate, int functionId) {
            this.Invoke("F1226_UpdateCashLedgerStatus", new object[] {
                        clid,
                        userId,
                        functionDate,
                        functionId});
        }
        
        /// <remarks/>
        public void F1226_UpdateCashLedgerStatusAsync(int clid, int userId, System.DateTime functionDate, int functionId) {
            this.F1226_UpdateCashLedgerStatusAsync(clid, userId, functionDate, functionId, null);
        }
        
        /// <remarks/>
        public void F1226_UpdateCashLedgerStatusAsync(int clid, int userId, System.DateTime functionDate, int functionId, object userState) {
            if ((this.F1226_UpdateCashLedgerStatusOperationCompleted == null)) {
                this.F1226_UpdateCashLedgerStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1226_UpdateCashLedgerStatusOperationCompleted);
            }
            this.InvokeAsync("F1226_UpdateCashLedgerStatus", new object[] {
                        clid,
                        userId,
                        functionDate,
                        functionId}, this.F1226_UpdateCashLedgerStatusOperationCompleted, userState);
        }
        
        private void OnF1226_UpdateCashLedgerStatusOperationCompleted(object arg) {
            if ((this.F1226_UpdateCashLedgerStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1226_UpdateCashLedgerStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1226_DeleteCashLedger", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F1226_DeleteCashLedger(int clid) {
            this.Invoke("F1226_DeleteCashLedger", new object[] {
                        clid});
        }
        
        /// <remarks/>
        public void F1226_DeleteCashLedgerAsync(int clid) {
            this.F1226_DeleteCashLedgerAsync(clid, null);
        }
        
        /// <remarks/>
        public void F1226_DeleteCashLedgerAsync(int clid, object userState) {
            if ((this.F1226_DeleteCashLedgerOperationCompleted == null)) {
                this.F1226_DeleteCashLedgerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1226_DeleteCashLedgerOperationCompleted);
            }
            this.InvokeAsync("F1226_DeleteCashLedger", new object[] {
                        clid}, this.F1226_DeleteCashLedgerOperationCompleted, userState);
        }
        
        private void OnF1226_DeleteCashLedgerOperationCompleted(object arg) {
            if ((this.F1226_DeleteCashLedgerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1226_DeleteCashLedgerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8040_ListTimeInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8040_ListTimeInformation(int formId, int keyId) {
            object[] results = this.Invoke("F8040_ListTimeInformation", new object[] {
                        formId,
                        keyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8040_ListTimeInformationAsync(int formId, int keyId) {
            this.F8040_ListTimeInformationAsync(formId, keyId, null);
        }
        
        /// <remarks/>
        public void F8040_ListTimeInformationAsync(int formId, int keyId, object userState) {
            if ((this.F8040_ListTimeInformationOperationCompleted == null)) {
                this.F8040_ListTimeInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8040_ListTimeInformationOperationCompleted);
            }
            this.InvokeAsync("F8040_ListTimeInformation", new object[] {
                        formId,
                        keyId}, this.F8040_ListTimeInformationOperationCompleted, userState);
        }
        
        private void OnF8040_ListTimeInformationOperationCompleted(object arg) {
            if ((this.F8040_ListTimeInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8040_ListTimeInformationCompleted(this, new F8040_ListTimeInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8040_ListTimeResourceInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8040_ListTimeResourceInformation(int isactive) {
            object[] results = this.Invoke("F8040_ListTimeResourceInformation", new object[] {
                        isactive});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8040_ListTimeResourceInformationAsync(int isactive) {
            this.F8040_ListTimeResourceInformationAsync(isactive, null);
        }
        
        /// <remarks/>
        public void F8040_ListTimeResourceInformationAsync(int isactive, object userState) {
            if ((this.F8040_ListTimeResourceInformationOperationCompleted == null)) {
                this.F8040_ListTimeResourceInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8040_ListTimeResourceInformationOperationCompleted);
            }
            this.InvokeAsync("F8040_ListTimeResourceInformation", new object[] {
                        isactive}, this.F8040_ListTimeResourceInformationOperationCompleted, userState);
        }
        
        private void OnF8040_ListTimeResourceInformationOperationCompleted(object arg) {
            if ((this.F8040_ListTimeResourceInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8040_ListTimeResourceInformationCompleted(this, new F8040_ListTimeResourceInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8040_SaveTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F8040_SaveTime(string timeDetails) {
            this.Invoke("F8040_SaveTime", new object[] {
                        timeDetails});
        }
        
        /// <remarks/>
        public void F8040_SaveTimeAsync(string timeDetails) {
            this.F8040_SaveTimeAsync(timeDetails, null);
        }
        
        /// <remarks/>
        public void F8040_SaveTimeAsync(string timeDetails, object userState) {
            if ((this.F8040_SaveTimeOperationCompleted == null)) {
                this.F8040_SaveTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8040_SaveTimeOperationCompleted);
            }
            this.InvokeAsync("F8040_SaveTime", new object[] {
                        timeDetails}, this.F8040_SaveTimeOperationCompleted, userState);
        }
        
        private void OnF8040_SaveTimeOperationCompleted(object arg) {
            if ((this.F8040_SaveTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8040_SaveTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8040_UpdateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F8040_UpdateTime(string timeDetails) {
            this.Invoke("F8040_UpdateTime", new object[] {
                        timeDetails});
        }
        
        /// <remarks/>
        public void F8040_UpdateTimeAsync(string timeDetails) {
            this.F8040_UpdateTimeAsync(timeDetails, null);
        }
        
        /// <remarks/>
        public void F8040_UpdateTimeAsync(string timeDetails, object userState) {
            if ((this.F8040_UpdateTimeOperationCompleted == null)) {
                this.F8040_UpdateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8040_UpdateTimeOperationCompleted);
            }
            this.InvokeAsync("F8040_UpdateTime", new object[] {
                        timeDetails}, this.F8040_UpdateTimeOperationCompleted, userState);
        }
        
        private void OnF8040_UpdateTimeOperationCompleted(object arg) {
            if ((this.F8040_UpdateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8040_UpdateTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8040_DeleteTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F8040_DeleteTime(int timeId) {
            this.Invoke("F8040_DeleteTime", new object[] {
                        timeId});
        }
        
        /// <remarks/>
        public void F8040_DeleteTimeAsync(int timeId) {
            this.F8040_DeleteTimeAsync(timeId, null);
        }
        
        /// <remarks/>
        public void F8040_DeleteTimeAsync(int timeId, object userState) {
            if ((this.F8040_DeleteTimeOperationCompleted == null)) {
                this.F8040_DeleteTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8040_DeleteTimeOperationCompleted);
            }
            this.InvokeAsync("F8040_DeleteTime", new object[] {
                        timeId}, this.F8040_DeleteTimeOperationCompleted, userState);
        }
        
        private void OnF8040_DeleteTimeOperationCompleted(object arg) {
            if ((this.F8040_DeleteTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8040_DeleteTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8902_GetHeader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8902_GetHeader(int workId) {
            object[] results = this.Invoke("F8902_GetHeader", new object[] {
                        workId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8902_GetHeaderAsync(int workId) {
            this.F8902_GetHeaderAsync(workId, null);
        }
        
        /// <remarks/>
        public void F8902_GetHeaderAsync(int workId, object userState) {
            if ((this.F8902_GetHeaderOperationCompleted == null)) {
                this.F8902_GetHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8902_GetHeaderOperationCompleted);
            }
            this.InvokeAsync("F8902_GetHeader", new object[] {
                        workId}, this.F8902_GetHeaderOperationCompleted, userState);
        }
        
        private void OnF8902_GetHeaderOperationCompleted(object arg) {
            if ((this.F8902_GetHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8902_GetHeaderCompleted(this, new F8902_GetHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8902_SaveHeader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F8902_SaveHeader(string header) {
            this.Invoke("F8902_SaveHeader", new object[] {
                        header});
        }
        
        /// <remarks/>
        public void F8902_SaveHeaderAsync(string header) {
            this.F8902_SaveHeaderAsync(header, null);
        }
        
        /// <remarks/>
        public void F8902_SaveHeaderAsync(string header, object userState) {
            if ((this.F8902_SaveHeaderOperationCompleted == null)) {
                this.F8902_SaveHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8902_SaveHeaderOperationCompleted);
            }
            this.InvokeAsync("F8902_SaveHeader", new object[] {
                        header}, this.F8902_SaveHeaderOperationCompleted, userState);
        }
        
        private void OnF8902_SaveHeaderOperationCompleted(object arg) {
            if ((this.F8902_SaveHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8902_SaveHeaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8902_Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F8902_Delete(int workId) {
            this.Invoke("F8902_Delete", new object[] {
                        workId});
        }
        
        /// <remarks/>
        public void F8902_DeleteAsync(int workId) {
            this.F8902_DeleteAsync(workId, null);
        }
        
        /// <remarks/>
        public void F8902_DeleteAsync(int workId, object userState) {
            if ((this.F8902_DeleteOperationCompleted == null)) {
                this.F8902_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8902_DeleteOperationCompleted);
            }
            this.InvokeAsync("F8902_Delete", new object[] {
                        workId}, this.F8902_DeleteOperationCompleted, userState);
        }
        
        private void OnF8902_DeleteOperationCompleted(object arg) {
            if ((this.F8902_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8902_DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8044_ListMaterialDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8044_ListMaterialDetails(int formId, int keyId) {
            object[] results = this.Invoke("F8044_ListMaterialDetails", new object[] {
                        formId,
                        keyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8044_ListMaterialDetailsAsync(int formId, int keyId) {
            this.F8044_ListMaterialDetailsAsync(formId, keyId, null);
        }
        
        /// <remarks/>
        public void F8044_ListMaterialDetailsAsync(int formId, int keyId, object userState) {
            if ((this.F8044_ListMaterialDetailsOperationCompleted == null)) {
                this.F8044_ListMaterialDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8044_ListMaterialDetailsOperationCompleted);
            }
            this.InvokeAsync("F8044_ListMaterialDetails", new object[] {
                        formId,
                        keyId}, this.F8044_ListMaterialDetailsOperationCompleted, userState);
        }
        
        private void OnF8044_ListMaterialDetailsOperationCompleted(object arg) {
            if ((this.F8044_ListMaterialDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8044_ListMaterialDetailsCompleted(this, new F8044_ListMaterialDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8044_ListMaterialsResourceType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8044_ListMaterialsResourceType(int flagActiveAndAll) {
            object[] results = this.Invoke("F8044_ListMaterialsResourceType", new object[] {
                        flagActiveAndAll});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8044_ListMaterialsResourceTypeAsync(int flagActiveAndAll) {
            this.F8044_ListMaterialsResourceTypeAsync(flagActiveAndAll, null);
        }
        
        /// <remarks/>
        public void F8044_ListMaterialsResourceTypeAsync(int flagActiveAndAll, object userState) {
            if ((this.F8044_ListMaterialsResourceTypeOperationCompleted == null)) {
                this.F8044_ListMaterialsResourceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8044_ListMaterialsResourceTypeOperationCompleted);
            }
            this.InvokeAsync("F8044_ListMaterialsResourceType", new object[] {
                        flagActiveAndAll}, this.F8044_ListMaterialsResourceTypeOperationCompleted, userState);
        }
        
        private void OnF8044_ListMaterialsResourceTypeOperationCompleted(object arg) {
            if ((this.F8044_ListMaterialsResourceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8044_ListMaterialsResourceTypeCompleted(this, new F8044_ListMaterialsResourceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8044_SaveMaterialDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F8044_SaveMaterialDetails(string materialItems) {
            this.Invoke("F8044_SaveMaterialDetails", new object[] {
                        materialItems});
        }
        
        /// <remarks/>
        public void F8044_SaveMaterialDetailsAsync(string materialItems) {
            this.F8044_SaveMaterialDetailsAsync(materialItems, null);
        }
        
        /// <remarks/>
        public void F8044_SaveMaterialDetailsAsync(string materialItems, object userState) {
            if ((this.F8044_SaveMaterialDetailsOperationCompleted == null)) {
                this.F8044_SaveMaterialDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8044_SaveMaterialDetailsOperationCompleted);
            }
            this.InvokeAsync("F8044_SaveMaterialDetails", new object[] {
                        materialItems}, this.F8044_SaveMaterialDetailsOperationCompleted, userState);
        }
        
        private void OnF8044_SaveMaterialDetailsOperationCompleted(object arg) {
            if ((this.F8044_SaveMaterialDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8044_SaveMaterialDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8044_UpdateMaterialDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F8044_UpdateMaterialDetails(string materialItems) {
            this.Invoke("F8044_UpdateMaterialDetails", new object[] {
                        materialItems});
        }
        
        /// <remarks/>
        public void F8044_UpdateMaterialDetailsAsync(string materialItems) {
            this.F8044_UpdateMaterialDetailsAsync(materialItems, null);
        }
        
        /// <remarks/>
        public void F8044_UpdateMaterialDetailsAsync(string materialItems, object userState) {
            if ((this.F8044_UpdateMaterialDetailsOperationCompleted == null)) {
                this.F8044_UpdateMaterialDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8044_UpdateMaterialDetailsOperationCompleted);
            }
            this.InvokeAsync("F8044_UpdateMaterialDetails", new object[] {
                        materialItems}, this.F8044_UpdateMaterialDetailsOperationCompleted, userState);
        }
        
        private void OnF8044_UpdateMaterialDetailsOperationCompleted(object arg) {
            if ((this.F8044_UpdateMaterialDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8044_UpdateMaterialDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8044_DeleteMaterialItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F8044_DeleteMaterialItem(int materialId) {
            object[] results = this.Invoke("F8044_DeleteMaterialItem", new object[] {
                        materialId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F8044_DeleteMaterialItemAsync(int materialId) {
            this.F8044_DeleteMaterialItemAsync(materialId, null);
        }
        
        /// <remarks/>
        public void F8044_DeleteMaterialItemAsync(int materialId, object userState) {
            if ((this.F8044_DeleteMaterialItemOperationCompleted == null)) {
                this.F8044_DeleteMaterialItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8044_DeleteMaterialItemOperationCompleted);
            }
            this.InvokeAsync("F8044_DeleteMaterialItem", new object[] {
                        materialId}, this.F8044_DeleteMaterialItemOperationCompleted, userState);
        }
        
        private void OnF8044_DeleteMaterialItemOperationCompleted(object arg) {
            if ((this.F8044_DeleteMaterialItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8044_DeleteMaterialItemCompleted(this, new F8044_DeleteMaterialItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1220_AccountNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1220_AccountNames() {
            object[] results = this.Invoke("F1220_AccountNames", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1220_AccountNamesAsync() {
            this.F1220_AccountNamesAsync(null);
        }
        
        /// <remarks/>
        public void F1220_AccountNamesAsync(object userState) {
            if ((this.F1220_AccountNamesOperationCompleted == null)) {
                this.F1220_AccountNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1220_AccountNamesOperationCompleted);
            }
            this.InvokeAsync("F1220_AccountNames", new object[0], this.F1220_AccountNamesOperationCompleted, userState);
        }
        
        private void OnF1220_AccountNamesOperationCompleted(object arg) {
            if ((this.F1220_AccountNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1220_AccountNamesCompleted(this, new F1220_AccountNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1220_GetReconciledDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1220_GetReconciledDetails(int registerId) {
            object[] results = this.Invoke("F1220_GetReconciledDetails", new object[] {
                        registerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1220_GetReconciledDetailsAsync(int registerId) {
            this.F1220_GetReconciledDetailsAsync(registerId, null);
        }
        
        /// <remarks/>
        public void F1220_GetReconciledDetailsAsync(int registerId, object userState) {
            if ((this.F1220_GetReconciledDetailsOperationCompleted == null)) {
                this.F1220_GetReconciledDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1220_GetReconciledDetailsOperationCompleted);
            }
            this.InvokeAsync("F1220_GetReconciledDetails", new object[] {
                        registerId}, this.F1220_GetReconciledDetailsOperationCompleted, userState);
        }
        
        private void OnF1220_GetReconciledDetailsOperationCompleted(object arg) {
            if ((this.F1220_GetReconciledDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1220_GetReconciledDetailsCompleted(this, new F1220_GetReconciledDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1220_ListAccountRegister", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1220_ListAccountRegister(int registerId, System.DateTime beginningDate) {
            object[] results = this.Invoke("F1220_ListAccountRegister", new object[] {
                        registerId,
                        beginningDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1220_ListAccountRegisterAsync(int registerId, System.DateTime beginningDate) {
            this.F1220_ListAccountRegisterAsync(registerId, beginningDate, null);
        }
        
        /// <remarks/>
        public void F1220_ListAccountRegisterAsync(int registerId, System.DateTime beginningDate, object userState) {
            if ((this.F1220_ListAccountRegisterOperationCompleted == null)) {
                this.F1220_ListAccountRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1220_ListAccountRegisterOperationCompleted);
            }
            this.InvokeAsync("F1220_ListAccountRegister", new object[] {
                        registerId,
                        beginningDate}, this.F1220_ListAccountRegisterOperationCompleted, userState);
        }
        
        private void OnF1220_ListAccountRegisterOperationCompleted(object arg) {
            if ((this.F1220_ListAccountRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1220_ListAccountRegisterCompleted(this, new F1220_ListAccountRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1220_GetAccountRegisterDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1220_GetAccountRegisterDetails(int registerId, System.DateTime beginningDate) {
            object[] results = this.Invoke("F1220_GetAccountRegisterDetails", new object[] {
                        registerId,
                        beginningDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1220_GetAccountRegisterDetailsAsync(int registerId, System.DateTime beginningDate) {
            this.F1220_GetAccountRegisterDetailsAsync(registerId, beginningDate, null);
        }
        
        /// <remarks/>
        public void F1220_GetAccountRegisterDetailsAsync(int registerId, System.DateTime beginningDate, object userState) {
            if ((this.F1220_GetAccountRegisterDetailsOperationCompleted == null)) {
                this.F1220_GetAccountRegisterDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1220_GetAccountRegisterDetailsOperationCompleted);
            }
            this.InvokeAsync("F1220_GetAccountRegisterDetails", new object[] {
                        registerId,
                        beginningDate}, this.F1220_GetAccountRegisterDetailsOperationCompleted, userState);
        }
        
        private void OnF1220_GetAccountRegisterDetailsOperationCompleted(object arg) {
            if ((this.F1220_GetAccountRegisterDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1220_GetAccountRegisterDetailsCompleted(this, new F1220_GetAccountRegisterDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F8904_GetEventGridDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F8904_GetEventGridDetails(int workId) {
            object[] results = this.Invoke("F8904_GetEventGridDetails", new object[] {
                        workId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F8904_GetEventGridDetailsAsync(int workId) {
            this.F8904_GetEventGridDetailsAsync(workId, null);
        }
        
        /// <remarks/>
        public void F8904_GetEventGridDetailsAsync(int workId, object userState) {
            if ((this.F8904_GetEventGridDetailsOperationCompleted == null)) {
                this.F8904_GetEventGridDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF8904_GetEventGridDetailsOperationCompleted);
            }
            this.InvokeAsync("F8904_GetEventGridDetails", new object[] {
                        workId}, this.F8904_GetEventGridDetailsOperationCompleted, userState);
        }
        
        private void OnF8904_GetEventGridDetailsOperationCompleted(object arg) {
            if ((this.F8904_GetEventGridDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F8904_GetEventGridDetailsCompleted(this, new F8904_GetEventGridDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9002_GetUserDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F9002_GetUserDetails(int applicationID) {
            object[] results = this.Invoke("F9002_GetUserDetails", new object[] {
                        applicationID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F9002_GetUserDetailsAsync(int applicationID) {
            this.F9002_GetUserDetailsAsync(applicationID, null);
        }
        
        /// <remarks/>
        public void F9002_GetUserDetailsAsync(int applicationID, object userState) {
            if ((this.F9002_GetUserDetailsOperationCompleted == null)) {
                this.F9002_GetUserDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9002_GetUserDetailsOperationCompleted);
            }
            this.InvokeAsync("F9002_GetUserDetails", new object[] {
                        applicationID}, this.F9002_GetUserDetailsOperationCompleted, userState);
        }
        
        private void OnF9002_GetUserDetailsOperationCompleted(object arg) {
            if ((this.F9002_GetUserDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9002_GetUserDetailsCompleted(this, new F9002_GetUserDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1224_AccountNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1224_AccountNames() {
            object[] results = this.Invoke("F1224_AccountNames", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1224_AccountNamesAsync() {
            this.F1224_AccountNamesAsync(null);
        }
        
        /// <remarks/>
        public void F1224_AccountNamesAsync(object userState) {
            if ((this.F1224_AccountNamesOperationCompleted == null)) {
                this.F1224_AccountNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1224_AccountNamesOperationCompleted);
            }
            this.InvokeAsync("F1224_AccountNames", new object[0], this.F1224_AccountNamesOperationCompleted, userState);
        }
        
        private void OnF1224_AccountNamesOperationCompleted(object arg) {
            if ((this.F1224_AccountNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1224_AccountNamesCompleted(this, new F1224_AccountNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1224_GetCheckNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1224_GetCheckNumber(int registerID) {
            object[] results = this.Invoke("F1224_GetCheckNumber", new object[] {
                        registerID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1224_GetCheckNumberAsync(int registerID) {
            this.F1224_GetCheckNumberAsync(registerID, null);
        }
        
        /// <remarks/>
        public void F1224_GetCheckNumberAsync(int registerID, object userState) {
            if ((this.F1224_GetCheckNumberOperationCompleted == null)) {
                this.F1224_GetCheckNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1224_GetCheckNumberOperationCompleted);
            }
            this.InvokeAsync("F1224_GetCheckNumber", new object[] {
                        registerID}, this.F1224_GetCheckNumberOperationCompleted, userState);
        }
        
        private void OnF1224_GetCheckNumberOperationCompleted(object arg) {
            if ((this.F1224_GetCheckNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1224_GetCheckNumberCompleted(this, new F1224_GetCheckNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1224_ListUnPrintedChecks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1224_ListUnPrintedChecks(int registerID) {
            object[] results = this.Invoke("F1224_ListUnPrintedChecks", new object[] {
                        registerID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1224_ListUnPrintedChecksAsync(int registerID) {
            this.F1224_ListUnPrintedChecksAsync(registerID, null);
        }
        
        /// <remarks/>
        public void F1224_ListUnPrintedChecksAsync(int registerID, object userState) {
            if ((this.F1224_ListUnPrintedChecksOperationCompleted == null)) {
                this.F1224_ListUnPrintedChecksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1224_ListUnPrintedChecksOperationCompleted);
            }
            this.InvokeAsync("F1224_ListUnPrintedChecks", new object[] {
                        registerID}, this.F1224_ListUnPrintedChecksOperationCompleted, userState);
        }
        
        private void OnF1224_ListUnPrintedChecksOperationCompleted(object arg) {
            if ((this.F1224_ListUnPrintedChecksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1224_ListUnPrintedChecksCompleted(this, new F1224_ListUnPrintedChecksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1224_CreateChecks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1224_CreateChecks(int registerID, int userID, long startingCheckNumber, string checkItems) {
            object[] results = this.Invoke("F1224_CreateChecks", new object[] {
                        registerID,
                        userID,
                        startingCheckNumber,
                        checkItems});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1224_CreateChecksAsync(int registerID, int userID, long startingCheckNumber, string checkItems) {
            this.F1224_CreateChecksAsync(registerID, userID, startingCheckNumber, checkItems, null);
        }
        
        /// <remarks/>
        public void F1224_CreateChecksAsync(int registerID, int userID, long startingCheckNumber, string checkItems, object userState) {
            if ((this.F1224_CreateChecksOperationCompleted == null)) {
                this.F1224_CreateChecksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1224_CreateChecksOperationCompleted);
            }
            this.InvokeAsync("F1224_CreateChecks", new object[] {
                        registerID,
                        userID,
                        startingCheckNumber,
                        checkItems}, this.F1224_CreateChecksOperationCompleted, userState);
        }
        
        private void OnF1224_CreateChecksOperationCompleted(object arg) {
            if ((this.F1224_CreateChecksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1224_CreateChecksCompleted(this, new F1224_CreateChecksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1502_GetAccountElementMgmt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1502_GetAccountElementMgmt(string function, string description, int type) {
            object[] results = this.Invoke("F1502_GetAccountElementMgmt", new object[] {
                        function,
                        description,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1502_GetAccountElementMgmtAsync(string function, string description, int type) {
            this.F1502_GetAccountElementMgmtAsync(function, description, type, null);
        }
        
        /// <remarks/>
        public void F1502_GetAccountElementMgmtAsync(string function, string description, int type, object userState) {
            if ((this.F1502_GetAccountElementMgmtOperationCompleted == null)) {
                this.F1502_GetAccountElementMgmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1502_GetAccountElementMgmtOperationCompleted);
            }
            this.InvokeAsync("F1502_GetAccountElementMgmt", new object[] {
                        function,
                        description,
                        type}, this.F1502_GetAccountElementMgmtOperationCompleted, userState);
        }
        
        private void OnF1502_GetAccountElementMgmtOperationCompleted(object arg) {
            if ((this.F1502_GetAccountElementMgmtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1502_GetAccountElementMgmtCompleted(this, new F1502_GetAccountElementMgmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1502_SaveAccountElementMgmt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1502_SaveAccountElementMgmt(string functionElemnts) {
            object[] results = this.Invoke("F1502_SaveAccountElementMgmt", new object[] {
                        functionElemnts});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1502_SaveAccountElementMgmtAsync(string functionElemnts) {
            this.F1502_SaveAccountElementMgmtAsync(functionElemnts, null);
        }
        
        /// <remarks/>
        public void F1502_SaveAccountElementMgmtAsync(string functionElemnts, object userState) {
            if ((this.F1502_SaveAccountElementMgmtOperationCompleted == null)) {
                this.F1502_SaveAccountElementMgmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1502_SaveAccountElementMgmtOperationCompleted);
            }
            this.InvokeAsync("F1502_SaveAccountElementMgmt", new object[] {
                        functionElemnts}, this.F1502_SaveAccountElementMgmtOperationCompleted, userState);
        }
        
        private void OnF1502_SaveAccountElementMgmtOperationCompleted(object arg) {
            if ((this.F1502_SaveAccountElementMgmtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1502_SaveAccountElementMgmtCompleted(this, new F1502_SaveAccountElementMgmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1502_DeleteAccountElementMgmt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void F1502_DeleteAccountElementMgmt(string functionId) {
            this.Invoke("F1502_DeleteAccountElementMgmt", new object[] {
                        functionId});
        }
        
        /// <remarks/>
        public void F1502_DeleteAccountElementMgmtAsync(string functionId) {
            this.F1502_DeleteAccountElementMgmtAsync(functionId, null);
        }
        
        /// <remarks/>
        public void F1502_DeleteAccountElementMgmtAsync(string functionId, object userState) {
            if ((this.F1502_DeleteAccountElementMgmtOperationCompleted == null)) {
                this.F1502_DeleteAccountElementMgmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1502_DeleteAccountElementMgmtOperationCompleted);
            }
            this.InvokeAsync("F1502_DeleteAccountElementMgmt", new object[] {
                        functionId}, this.F1502_DeleteAccountElementMgmtOperationCompleted, userState);
        }
        
        private void OnF1502_DeleteAccountElementMgmtOperationCompleted(object arg) {
            if ((this.F1502_DeleteAccountElementMgmtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1502_DeleteAccountElementMgmtCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9600_ListSearchresult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F9600_ListSearchresult(string searchValue, int appId) {
            object[] results = this.Invoke("F9600_ListSearchresult", new object[] {
                        searchValue,
                        appId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F9600_ListSearchresultAsync(string searchValue, int appId) {
            this.F9600_ListSearchresultAsync(searchValue, appId, null);
        }
        
        /// <remarks/>
        public void F9600_ListSearchresultAsync(string searchValue, int appId, object userState) {
            if ((this.F9600_ListSearchresultOperationCompleted == null)) {
                this.F9600_ListSearchresultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9600_ListSearchresultOperationCompleted);
            }
            this.InvokeAsync("F9600_ListSearchresult", new object[] {
                        searchValue,
                        appId}, this.F9600_ListSearchresultOperationCompleted, userState);
        }
        
        private void OnF9600_ListSearchresultOperationCompleted(object arg) {
            if ((this.F9600_ListSearchresultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9600_ListSearchresultCompleted(this, new F9600_ListSearchresultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F9600_ListSortResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F9600_ListSortResult(string searchValue, int appId, bool searchOrder, bool groupOrder) {
            object[] results = this.Invoke("F9600_ListSortResult", new object[] {
                        searchValue,
                        appId,
                        searchOrder,
                        groupOrder});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F9600_ListSortResultAsync(string searchValue, int appId, bool searchOrder, bool groupOrder) {
            this.F9600_ListSortResultAsync(searchValue, appId, searchOrder, groupOrder, null);
        }
        
        /// <remarks/>
        public void F9600_ListSortResultAsync(string searchValue, int appId, bool searchOrder, bool groupOrder, object userState) {
            if ((this.F9600_ListSortResultOperationCompleted == null)) {
                this.F9600_ListSortResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF9600_ListSortResultOperationCompleted);
            }
            this.InvokeAsync("F9600_ListSortResult", new object[] {
                        searchValue,
                        appId,
                        searchOrder,
                        groupOrder}, this.F9600_ListSortResultOperationCompleted, userState);
        }
        
        private void OnF9600_ListSortResultOperationCompleted(object arg) {
            if ((this.F9600_ListSortResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F9600_ListSortResultCompleted(this, new F9600_ListSortResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1530_GetInstitutionDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1530_GetInstitutionDetail(int institutionId) {
            object[] results = this.Invoke("F1530_GetInstitutionDetail", new object[] {
                        institutionId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1530_GetInstitutionDetailAsync(int institutionId) {
            this.F1530_GetInstitutionDetailAsync(institutionId, null);
        }
        
        /// <remarks/>
        public void F1530_GetInstitutionDetailAsync(int institutionId, object userState) {
            if ((this.F1530_GetInstitutionDetailOperationCompleted == null)) {
                this.F1530_GetInstitutionDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1530_GetInstitutionDetailOperationCompleted);
            }
            this.InvokeAsync("F1530_GetInstitutionDetail", new object[] {
                        institutionId}, this.F1530_GetInstitutionDetailOperationCompleted, userState);
        }
        
        private void OnF1530_GetInstitutionDetailOperationCompleted(object arg) {
            if ((this.F1530_GetInstitutionDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1530_GetInstitutionDetailCompleted(this, new F1530_GetInstitutionDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1530_SaveInstitution", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1530_SaveInstitution(int institutionId, string institutionElements) {
            object[] results = this.Invoke("F1530_SaveInstitution", new object[] {
                        institutionId,
                        institutionElements});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1530_SaveInstitutionAsync(int institutionId, string institutionElements) {
            this.F1530_SaveInstitutionAsync(institutionId, institutionElements, null);
        }
        
        /// <remarks/>
        public void F1530_SaveInstitutionAsync(int institutionId, string institutionElements, object userState) {
            if ((this.F1530_SaveInstitutionOperationCompleted == null)) {
                this.F1530_SaveInstitutionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1530_SaveInstitutionOperationCompleted);
            }
            this.InvokeAsync("F1530_SaveInstitution", new object[] {
                        institutionId,
                        institutionElements}, this.F1530_SaveInstitutionOperationCompleted, userState);
        }
        
        private void OnF1530_SaveInstitutionOperationCompleted(object arg) {
            if ((this.F1530_SaveInstitutionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1530_SaveInstitutionCompleted(this, new F1530_SaveInstitutionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1531_GetCashAccountDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1531_GetCashAccountDetail(int registerId) {
            object[] results = this.Invoke("F1531_GetCashAccountDetail", new object[] {
                        registerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1531_GetCashAccountDetailAsync(int registerId) {
            this.F1531_GetCashAccountDetailAsync(registerId, null);
        }
        
        /// <remarks/>
        public void F1531_GetCashAccountDetailAsync(int registerId, object userState) {
            if ((this.F1531_GetCashAccountDetailOperationCompleted == null)) {
                this.F1531_GetCashAccountDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1531_GetCashAccountDetailOperationCompleted);
            }
            this.InvokeAsync("F1531_GetCashAccountDetail", new object[] {
                        registerId}, this.F1531_GetCashAccountDetailOperationCompleted, userState);
        }
        
        private void OnF1531_GetCashAccountDetailOperationCompleted(object arg) {
            if ((this.F1531_GetCashAccountDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1531_GetCashAccountDetailCompleted(this, new F1531_GetCashAccountDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1531_SaveCashAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1531_SaveCashAccount(int registerId, string registerItems) {
            object[] results = this.Invoke("F1531_SaveCashAccount", new object[] {
                        registerId,
                        registerItems});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1531_SaveCashAccountAsync(int registerId, string registerItems) {
            this.F1531_SaveCashAccountAsync(registerId, registerItems, null);
        }
        
        /// <remarks/>
        public void F1531_SaveCashAccountAsync(int registerId, string registerItems, object userState) {
            if ((this.F1531_SaveCashAccountOperationCompleted == null)) {
                this.F1531_SaveCashAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1531_SaveCashAccountOperationCompleted);
            }
            this.InvokeAsync("F1531_SaveCashAccount", new object[] {
                        registerId,
                        registerItems}, this.F1531_SaveCashAccountOperationCompleted, userState);
        }
        
        private void OnF1531_SaveCashAccountOperationCompleted(object arg) {
            if ((this.F1531_SaveCashAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1531_SaveCashAccountCompleted(this, new F1531_SaveCashAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1532_GetInstitutionContactDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1532_GetInstitutionContactDetail(int contactId) {
            object[] results = this.Invoke("F1532_GetInstitutionContactDetail", new object[] {
                        contactId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1532_GetInstitutionContactDetailAsync(int contactId) {
            this.F1532_GetInstitutionContactDetailAsync(contactId, null);
        }
        
        /// <remarks/>
        public void F1532_GetInstitutionContactDetailAsync(int contactId, object userState) {
            if ((this.F1532_GetInstitutionContactDetailOperationCompleted == null)) {
                this.F1532_GetInstitutionContactDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1532_GetInstitutionContactDetailOperationCompleted);
            }
            this.InvokeAsync("F1532_GetInstitutionContactDetail", new object[] {
                        contactId}, this.F1532_GetInstitutionContactDetailOperationCompleted, userState);
        }
        
        private void OnF1532_GetInstitutionContactDetailOperationCompleted(object arg) {
            if ((this.F1532_GetInstitutionContactDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1532_GetInstitutionContactDetailCompleted(this, new F1532_GetInstitutionContactDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1532_SaveInstitutionContact", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1532_SaveInstitutionContact(int contactId, string acctEmelemts) {
            object[] results = this.Invoke("F1532_SaveInstitutionContact", new object[] {
                        contactId,
                        acctEmelemts});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1532_SaveInstitutionContactAsync(int contactId, string acctEmelemts) {
            this.F1532_SaveInstitutionContactAsync(contactId, acctEmelemts, null);
        }
        
        /// <remarks/>
        public void F1532_SaveInstitutionContactAsync(int contactId, string acctEmelemts, object userState) {
            if ((this.F1532_SaveInstitutionContactOperationCompleted == null)) {
                this.F1532_SaveInstitutionContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1532_SaveInstitutionContactOperationCompleted);
            }
            this.InvokeAsync("F1532_SaveInstitutionContact", new object[] {
                        contactId,
                        acctEmelemts}, this.F1532_SaveInstitutionContactOperationCompleted, userState);
        }
        
        private void OnF1532_SaveInstitutionContactOperationCompleted(object arg) {
            if ((this.F1532_SaveInstitutionContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1532_SaveInstitutionContactCompleted(this, new F1532_SaveInstitutionContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1030_ListDistrictDefinitionType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1030_ListDistrictDefinitionType() {
            object[] results = this.Invoke("F1030_ListDistrictDefinitionType", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1030_ListDistrictDefinitionTypeAsync() {
            this.F1030_ListDistrictDefinitionTypeAsync(null);
        }
        
        /// <remarks/>
        public void F1030_ListDistrictDefinitionTypeAsync(object userState) {
            if ((this.F1030_ListDistrictDefinitionTypeOperationCompleted == null)) {
                this.F1030_ListDistrictDefinitionTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1030_ListDistrictDefinitionTypeOperationCompleted);
            }
            this.InvokeAsync("F1030_ListDistrictDefinitionType", new object[0], this.F1030_ListDistrictDefinitionTypeOperationCompleted, userState);
        }
        
        private void OnF1030_ListDistrictDefinitionTypeOperationCompleted(object arg) {
            if ((this.F1030_ListDistrictDefinitionTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1030_ListDistrictDefinitionTypeCompleted(this, new F1030_ListDistrictDefinitionTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1030_GetDistrictDefinitionDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string F1030_GetDistrictDefinitionDetails(int districtNo) {
            object[] results = this.Invoke("F1030_GetDistrictDefinitionDetails", new object[] {
                        districtNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void F1030_GetDistrictDefinitionDetailsAsync(int districtNo) {
            this.F1030_GetDistrictDefinitionDetailsAsync(districtNo, null);
        }
        
        /// <remarks/>
        public void F1030_GetDistrictDefinitionDetailsAsync(int districtNo, object userState) {
            if ((this.F1030_GetDistrictDefinitionDetailsOperationCompleted == null)) {
                this.F1030_GetDistrictDefinitionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1030_GetDistrictDefinitionDetailsOperationCompleted);
            }
            this.InvokeAsync("F1030_GetDistrictDefinitionDetails", new object[] {
                        districtNo}, this.F1030_GetDistrictDefinitionDetailsOperationCompleted, userState);
        }
        
        private void OnF1030_GetDistrictDefinitionDetailsOperationCompleted(object arg) {
            if ((this.F1030_GetDistrictDefinitionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1030_GetDistrictDefinitionDetailsCompleted(this, new F1030_GetDistrictDefinitionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/F1030_DeleteDistrictDefinition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int F1030_DeleteDistrictDefinition(int specialDistrictID) {
            object[] results = this.Invoke("F1030_DeleteDistrictDefinition", new object[] {
                        specialDistrictID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void F1030_DeleteDistrictDefinitionAsync(int specialDistrictID) {
            this.F1030_DeleteDistrictDefinitionAsync(specialDistrictID, null);
        }
        
        /// <remarks/>
        public void F1030_DeleteDistrictDefinitionAsync(int specialDistrictID, object userState) {
            if ((this.F1030_DeleteDistrictDefinitionOperationCompleted == null)) {
                this.F1030_DeleteDistrictDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnF1030_DeleteDistrictDefinitionOperationCompleted);
            }
            this.InvokeAsync("F1030_DeleteDistrictDefinition", new object[] {
                        specialDistrictID}, this.F1030_DeleteDistrictDefinitionOperationCompleted, userState);
        }
        
        private void OnF1030_DeleteDistrictDefinitionOperationCompleted(object arg) {
            if ((this.F1030_DeleteDistrictDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.F1030_DeleteDistrictDefinitionCompleted(this, new F1030_DeleteDistrictDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RdlToCodeData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RdlToCodeData : global::System.Data.DataSet {
        
        private ParameterDataDataTable tableParameterData;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RdlToCodeData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RdlToCodeData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ParameterData"] != null)) {
                    base.Tables.Add(new ParameterDataDataTable(ds.Tables["ParameterData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ParameterDataDataTable ParameterData {
            get {
                return this.tableParameterData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RdlToCodeData cln = ((RdlToCodeData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ParameterData"] != null)) {
                    base.Tables.Add(new ParameterDataDataTable(ds.Tables["ParameterData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableParameterData = ((ParameterDataDataTable)(base.Tables["ParameterData"]));
            if ((initTable == true)) {
                if ((this.tableParameterData != null)) {
                    this.tableParameterData.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RdlToCodeData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RdlToCodeData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableParameterData = new ParameterDataDataTable();
            base.Tables.Add(this.tableParameterData);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeParameterData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RdlToCodeData ds = new RdlToCodeData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ParameterDataRowChangeEventHandler(object sender, ParameterDataRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ParameterDataDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnKeyId;
            
            private global::System.Data.DataColumn columnKeyName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParameterDataDataTable() {
                this.TableName = "ParameterData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ParameterDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ParameterDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeyIdColumn {
                get {
                    return this.columnKeyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeyNameColumn {
                get {
                    return this.columnKeyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParameterDataRow this[int index] {
                get {
                    return ((ParameterDataRow)(this.Rows[index]));
                }
            }
            
            public event ParameterDataRowChangeEventHandler ParameterDataRowChanging;
            
            public event ParameterDataRowChangeEventHandler ParameterDataRowChanged;
            
            public event ParameterDataRowChangeEventHandler ParameterDataRowDeleting;
            
            public event ParameterDataRowChangeEventHandler ParameterDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddParameterDataRow(ParameterDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParameterDataRow AddParameterDataRow(string KeyId, string KeyName) {
                ParameterDataRow rowParameterDataRow = ((ParameterDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KeyId,
                        KeyName};
                rowParameterDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowParameterDataRow);
                return rowParameterDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ParameterDataDataTable cln = ((ParameterDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ParameterDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKeyId = base.Columns["KeyId"];
                this.columnKeyName = base.Columns["KeyName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKeyId = new global::System.Data.DataColumn("KeyId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyId);
                this.columnKeyName = new global::System.Data.DataColumn("KeyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParameterDataRow NewParameterDataRow() {
                return ((ParameterDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ParameterDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ParameterDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ParameterDataRowChanged != null)) {
                    this.ParameterDataRowChanged(this, new ParameterDataRowChangeEvent(((ParameterDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ParameterDataRowChanging != null)) {
                    this.ParameterDataRowChanging(this, new ParameterDataRowChangeEvent(((ParameterDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ParameterDataRowDeleted != null)) {
                    this.ParameterDataRowDeleted(this, new ParameterDataRowChangeEvent(((ParameterDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ParameterDataRowDeleting != null)) {
                    this.ParameterDataRowDeleting(this, new ParameterDataRowChangeEvent(((ParameterDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveParameterDataRow(ParameterDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RdlToCodeData ds = new RdlToCodeData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ParameterDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ParameterDataRow : global::System.Data.DataRow {
            
            private ParameterDataDataTable tableParameterData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ParameterDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableParameterData = ((ParameterDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KeyId {
                get {
                    try {
                        return ((string)(this[this.tableParameterData.KeyIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KeyId\' in table \'ParameterData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableParameterData.KeyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KeyName {
                get {
                    try {
                        return ((string)(this[this.tableParameterData.KeyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KeyName\' in table \'ParameterData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableParameterData.KeyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeyIdNull() {
                return this.IsNull(this.tableParameterData.KeyIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeyIdNull() {
                this[this.tableParameterData.KeyIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeyNameNull() {
                return this.IsNull(this.tableParameterData.KeyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeyNameNull() {
                this[this.tableParameterData.KeyNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ParameterDataRowChangeEvent : global::System.EventArgs {
            
            private ParameterDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParameterDataRowChangeEvent(ParameterDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParameterDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1030_DeleteDistrictDefinitionRateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1030_SaveDistrictDefinitionCompletedEventHandler(object sender, F1030_SaveDistrictDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1030_SaveDistrictDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1030_SaveDistrictDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1033_ListPostTypesCompletedEventHandler(object sender, F1033_ListPostTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1033_ListPostTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1033_ListPostTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1033_ListSpecialDistrictsCompletedEventHandler(object sender, F1033_ListSpecialDistrictsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1033_ListSpecialDistrictsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1033_ListSpecialDistrictsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1500_GetDescriptionCompletedEventHandler(object sender, F1500_GetDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1500_GetDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1500_GetDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1500_GetSubFundItemsCompletedEventHandler(object sender, F1500_GetSubFundItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1500_GetSubFundItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1500_GetSubFundItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1500_GetFunctionItemsCompletedEventHandler(object sender, F1500_GetFunctionItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1500_GetFunctionItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1500_GetFunctionItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1500_ListAccountDetailsCompletedEventHandler(object sender, F1500_ListAccountDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1500_ListAccountDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1500_ListAccountDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1500_CreateOrEditAccountCompletedEventHandler(object sender, F1500_CreateOrEditAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1500_CreateOrEditAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1500_CreateOrEditAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1500_ListRegisterTypeCompletedEventHandler(object sender, F1500_ListRegisterTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1500_ListRegisterTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1500_ListRegisterTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1500_GetConfigurationValueCompletedEventHandler(object sender, F1500_GetConfigurationValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1500_GetConfigurationValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1500_GetConfigurationValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1503_GetGenericElementMgmtCompletedEventHandler(object sender, F1503_GetGenericElementMgmtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1503_GetGenericElementMgmtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1503_GetGenericElementMgmtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1503_SaveGenericElementMgmtCompletedEventHandler(object sender, F1503_SaveGenericElementMgmtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1503_SaveGenericElementMgmtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1503_SaveGenericElementMgmtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1503_DeleteGenericElementMgmtCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1515_GetSubFundSelectionCompletedEventHandler(object sender, F1515_GetSubFundSelectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1515_GetSubFundSelectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1515_GetSubFundSelectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1513_GetFundSelectionCompletedEventHandler(object sender, F1513_GetFundSelectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1513_GetFundSelectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1513_GetFundSelectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1031_ListDistrictAssessmentDetailsCompletedEventHandler(object sender, F1031_ListDistrictAssessmentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1031_ListDistrictAssessmentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1031_ListDistrictAssessmentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1031_ListDistrictAssessmentIDsCompletedEventHandler(object sender, F1031_ListDistrictAssessmentIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1031_ListDistrictAssessmentIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1031_ListDistrictAssessmentIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1031_GetDistrictAssessmentParcelIDCompletedEventHandler(object sender, F1031_GetDistrictAssessmentParcelIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1031_GetDistrictAssessmentParcelIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1031_GetDistrictAssessmentParcelIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1031_ListDistrictAssessmentCompletedEventHandler(object sender, F1031_ListDistrictAssessmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1031_ListDistrictAssessmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1031_ListDistrictAssessmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1031_SaveDistrictAssessmentDetailsCompletedEventHandler(object sender, F1031_SaveDistrictAssessmentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1031_SaveDistrictAssessmentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1031_SaveDistrictAssessmentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1031_DeleteDistrictAssessmentCompletedEventHandler(object sender, F1031_DeleteDistrictAssessmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1031_DeleteDistrictAssessmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1031_DeleteDistrictAssessmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9503_GetSubFundManagementDetailsCompletedEventHandler(object sender, F9503_GetSubFundManagementDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9503_GetSubFundManagementDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9503_GetSubFundManagementDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9503_GetSubFundItemsCompletedEventHandler(object sender, F9503_GetSubFundItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9503_GetSubFundItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9503_GetSubFundItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15005_CheckSubFundCompletedEventHandler(object sender, F15005_CheckSubFundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15005_CheckSubFundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15005_CheckSubFundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9503_CreateOrEditSubFundCompletedEventHandler(object sender, F9503_CreateOrEditSubFundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9503_CreateOrEditSubFundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9503_CreateOrEditSubFundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1501_ListRollYearCompletedEventHandler(object sender, F1501_ListRollYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1501_ListRollYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1501_ListRollYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1501_ListGLConfigDetailsCompletedEventHandler(object sender, F1501_ListGLConfigDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1501_ListGLConfigDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1501_ListGLConfigDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1501_GetGLConfigDetailsCompletedEventHandler(object sender, F1501_GetGLConfigDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1501_GetGLConfigDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1501_GetGLConfigDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1501_CreateOrEditGLConfigDetailsCompletedEventHandler(object sender, F1501_CreateOrEditGLConfigDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1501_CreateOrEditGLConfigDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1501_CreateOrEditGLConfigDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1410_GetOwnerReceiptingCompletedEventHandler(object sender, F1410_GetOwnerReceiptingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1410_GetOwnerReceiptingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1410_GetOwnerReceiptingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1410_ListOwnerReceiptingCompletedEventHandler(object sender, F1410_ListOwnerReceiptingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1410_ListOwnerReceiptingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1410_ListOwnerReceiptingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1410_DeleteOwnerReceiptingCompletedEventHandler(object sender, F1410_DeleteOwnerReceiptingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1410_DeleteOwnerReceiptingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1410_DeleteOwnerReceiptingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1410_SaveOwnerReceiptingCompletedEventHandler(object sender, F1410_SaveOwnerReceiptingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1410_SaveOwnerReceiptingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1410_SaveOwnerReceiptingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8000_GetGDocBusinessCompletedEventHandler(object sender, F8000_GetGDocBusinessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8000_GetGDocBusinessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8000_GetGDocBusinessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8000_GetGDocDiameterCompletedEventHandler(object sender, F8000_GetGDocDiameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8000_GetGDocDiameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8000_GetGDocDiameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8000_GetGDocPropertyReferenceCompletedEventHandler(object sender, F8000_GetGDocPropertyReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8000_GetGDocPropertyReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8000_GetGDocPropertyReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void wListStreetsCompletedEventHandler(object sender, wListStreetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wListStreetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wListStreetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8000_GetGDocUserCompletedEventHandler(object sender, F8000_GetGDocUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8000_GetGDocUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8000_GetGDocUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84121_GetSanitaryManholePropertiesCompletedEventHandler(object sender, F84121_GetSanitaryManholePropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84121_GetSanitaryManholePropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84121_GetSanitaryManholePropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84121_SaveSanitaryManholePropertiesCompletedEventHandler(object sender, F84121_SaveSanitaryManholePropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84121_SaveSanitaryManholePropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84121_SaveSanitaryManholePropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84121_DeleteSanitaryManholePropertiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84122_GetSanitaryManholeLocationCompletedEventHandler(object sender, F84122_GetSanitaryManholeLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84122_GetSanitaryManholeLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84122_GetSanitaryManholeLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84122_SaveSanitaryManholeLocationCompletedEventHandler(object sender, F84122_SaveSanitaryManholeLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84122_SaveSanitaryManholeLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84122_SaveSanitaryManholeLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84721_GetWaterValvePropertiesCompletedEventHandler(object sender, F84721_GetWaterValvePropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84721_GetWaterValvePropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84721_GetWaterValvePropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84721_SaveWaterValvePropertiesCompletedEventHandler(object sender, F84721_SaveWaterValvePropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84721_SaveWaterValvePropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84721_SaveWaterValvePropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84721_DeleteWaterValvePropertiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9033_ListQueryViewCompletedEventHandler(object sender, F9033_ListQueryViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9033_ListQueryViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9033_ListQueryViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9033_GetDefaultLayoutCompletedEventHandler(object sender, F9033_GetDefaultLayoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9033_GetDefaultLayoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9033_GetDefaultLayoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9033_QueryEngineCompletedEventHandler(object sender, F9033_QueryEngineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9033_QueryEngineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9033_QueryEngineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84722_GetWaterValveLocationCompletedEventHandler(object sender, F84722_GetWaterValveLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84722_GetWaterValveLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84722_GetWaterValveLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84722_SaveWaterValveLocationCompletedEventHandler(object sender, F84722_SaveWaterValveLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84722_SaveWaterValveLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84722_SaveWaterValveLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84723_GetWaterHydrantPropertiesCompletedEventHandler(object sender, F84723_GetWaterHydrantPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84723_GetWaterHydrantPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84723_GetWaterHydrantPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84723_CheckMainValveIdCompletedEventHandler(object sender, F84723_CheckMainValveIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84723_CheckMainValveIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84723_CheckMainValveIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84723_SaveWaterHydrantPropertiesCompletedEventHandler(object sender, F84723_SaveWaterHydrantPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84723_SaveWaterHydrantPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84723_SaveWaterHydrantPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84723_DeleteWaterHydrantPropertiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84725_GetWaterPipePropertiesCompletedEventHandler(object sender, F84725_GetWaterPipePropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84725_GetWaterPipePropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84725_GetWaterPipePropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84725_SaveWaterPipePropertiesCompletedEventHandler(object sender, F84725_SaveWaterPipePropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84725_SaveWaterPipePropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84725_SaveWaterPipePropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84725_DeleteWaterPipePropertiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84726_GetWaterPipeLocationCompletedEventHandler(object sender, F84726_GetWaterPipeLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84726_GetWaterPipeLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84726_GetWaterPipeLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84726_SaveWaterPipeLocationCompletedEventHandler(object sender, F84726_SaveWaterPipeLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84726_SaveWaterPipeLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84726_SaveWaterPipeLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15002_GetDistirctFundDetailsCompletedEventHandler(object sender, F15002_GetDistirctFundDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15002_GetDistirctFundDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15002_GetDistirctFundDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15002_ListAllFundsCompletedEventHandler(object sender, F15002_ListAllFundsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15002_ListAllFundsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15002_ListAllFundsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15002_CheckDistrictCompletedEventHandler(object sender, F15002_CheckDistrictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15002_CheckDistrictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15002_CheckDistrictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15002_CreateOrEditDistrictMgmtCompletedEventHandler(object sender, F15002_CreateOrEditDistrictMgmtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15002_CreateOrEditDistrictMgmtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15002_CreateOrEditDistrictMgmtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84123_GetSanitaryPipePropertiesCompletedEventHandler(object sender, F84123_GetSanitaryPipePropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84123_GetSanitaryPipePropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84123_GetSanitaryPipePropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84123_SaveSanitaryPipePropertiesCompletedEventHandler(object sender, F84123_SaveSanitaryPipePropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84123_SaveSanitaryPipePropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84123_SaveSanitaryPipePropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84123_DeleteSanitaryPipePropertiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84124_GetSanitaryPipeLocationCompletedEventHandler(object sender, F84124_GetSanitaryPipeLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84124_GetSanitaryPipeLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84124_GetSanitaryPipeLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F84124_SaveSanitaryPipeLocationCompletedEventHandler(object sender, F84124_SaveSanitaryPipeLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F84124_SaveSanitaryPipeLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F84124_SaveSanitaryPipeLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F11020_GetRealPropertyStatementCompletedEventHandler(object sender, F11020_GetRealPropertyStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F11020_GetRealPropertyStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F11020_GetRealPropertyStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1423_UpdateRealPropertyStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1423_ListMortgageNameCompletedEventHandler(object sender, F1423_ListMortgageNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1423_ListMortgageNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1423_ListMortgageNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15020_ListHistoryGridCompletedEventHandler(object sender, F15020_ListHistoryGridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15020_ListHistoryGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15020_ListHistoryGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15020_GetReceiptDetailsCompletedEventHandler(object sender, F15020_GetReceiptDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15020_GetReceiptDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15020_GetReceiptDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1003_GetMinTaxDueCompletedEventHandler(object sender, F1003_GetMinTaxDueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1003_GetMinTaxDueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1003_GetMinTaxDueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1004_GetInterestAmountCompletedEventHandler(object sender, F1004_GetInterestAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1004_GetInterestAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1004_GetInterestAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1009_GetValidReceiptTestCompletedEventHandler(object sender, F1009_GetValidReceiptTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1009_GetValidReceiptTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1009_GetValidReceiptTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1405_SaveMasterReceiptCompletedEventHandler(object sender, F1405_SaveMasterReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1405_SaveMasterReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1405_SaveMasterReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15104_GetReceiptPaymentCompletedEventHandler(object sender, F15104_GetReceiptPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15104_GetReceiptPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15104_GetReceiptPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15104_UpdateReceiptPaymentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15004_GetAgencyDetailsCompletedEventHandler(object sender, F15004_GetAgencyDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15004_GetAgencyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15004_GetAgencyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15004_CheckDuplicateAgencyCompletedEventHandler(object sender, F15004_CheckDuplicateAgencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15004_CheckDuplicateAgencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15004_CheckDuplicateAgencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15004_CreateOrEditAgencyDetailsCompletedEventHandler(object sender, F15004_CreateOrEditAgencyDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15004_CreateOrEditAgencyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15004_CreateOrEditAgencyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15007_CheckDuplicateAccountCompletedEventHandler(object sender, F15007_CheckDuplicateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15007_CheckDuplicateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15007_CheckDuplicateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9038_LoadLayoutInformationCompletedEventHandler(object sender, F9038_LoadLayoutInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9038_LoadLayoutInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9038_LoadLayoutInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9038_DeleteLayoutInformationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9038_SaveLayoutInformationCompletedEventHandler(object sender, F9038_SaveLayoutInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9038_SaveLayoutInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9038_SaveLayoutInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9001_GetNextWorkingDayCompletedEventHandler(object sender, F9001_GetNextWorkingDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9001_GetNextWorkingDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9001_GetNextWorkingDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15003_GetFundSubFundDetailsCompletedEventHandler(object sender, F15003_GetFundSubFundDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15003_GetFundSubFundDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15003_GetFundSubFundDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15003_ListAvailableSubFundsCompletedEventHandler(object sender, F15003_ListAvailableSubFundsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15003_ListAvailableSubFundsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15003_ListAvailableSubFundsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15003_ListFundTypeCompletedEventHandler(object sender, F15003_ListFundTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15003_ListFundTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15003_ListFundTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15003_CheckFundCompletedEventHandler(object sender, F15003_CheckFundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15003_CheckFundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15003_CheckFundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15003_CreateOrEditFundMgmtCompletedEventHandler(object sender, F15003_CreateOrEditFundMgmtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15003_CreateOrEditFundMgmtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15003_CreateOrEditFundMgmtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15012_GetExciseReceiptCompletedEventHandler(object sender, F15012_GetExciseReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15012_GetExciseReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15012_GetExciseReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15011_GetExciseStatementCompletedEventHandler(object sender, F15011_GetExciseStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15011_GetExciseStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15011_GetExciseStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15011_SaveExciseStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15010_GetExciseIndividualTypeCompletedEventHandler(object sender, F15010_GetExciseIndividualTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15010_GetExciseIndividualTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15010_GetExciseIndividualTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15010_GetExciseTaxAffidavitDetailsCompletedEventHandler(object sender, F15010_GetExciseTaxAffidavitDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15010_GetExciseTaxAffidavitDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15010_GetExciseTaxAffidavitDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15010_GetExciseTaxAffidavitCalulateAmountDueCompletedEventHandler(object sender, F15010_GetExciseTaxAffidavitCalulateAmountDueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15010_GetExciseTaxAffidavitCalulateAmountDueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15010_GetExciseTaxAffidavitCalulateAmountDueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15010_GetAffidavitStatementIdCompletedEventHandler(object sender, F15010_GetAffidavitStatementIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15010_GetAffidavitStatementIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15010_GetAffidavitStatementIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15010_SaveAffiDavitDetailsCompletedEventHandler(object sender, F15010_SaveAffiDavitDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15010_SaveAffiDavitDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15010_SaveAffiDavitDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15010_GetOwnerDetailsCompletedEventHandler(object sender, F15010_GetOwnerDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15010_GetOwnerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15010_GetOwnerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15010_GetDistrictSelectionCompletedEventHandler(object sender, F15010_GetDistrictSelectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15010_GetDistrictSelectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15010_GetDistrictSelectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15010_DeleteAffidavitDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15013_GetExciseTaxRateCompletedEventHandler(object sender, F15013_GetExciseTaxRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15013_GetExciseTaxRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15013_GetExciseTaxRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15013_ListExciseTaxRateCompletedEventHandler(object sender, F15013_ListExciseTaxRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15013_ListExciseTaxRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15013_ListExciseTaxRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15013_SaveExciseTaxRateCompletedEventHandler(object sender, F15013_SaveExciseTaxRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15013_SaveExciseTaxRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15013_SaveExciseTaxRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15013_DeleteExciseTaxRateCompletedEventHandler(object sender, F15013_DeleteExciseTaxRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15013_DeleteExciseTaxRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15013_DeleteExciseTaxRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15013_GetDistrictNameCompletedEventHandler(object sender, F15013_GetDistrictNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15013_GetDistrictNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15013_GetDistrictNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15013_GetAccountNameCompletedEventHandler(object sender, F15013_GetAccountNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15013_GetAccountNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15013_GetAccountNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetJournalEntryDetailsCompletedEventHandler(object sender, GetJournalEntryDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJournalEntryDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJournalEntryDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UpdateJournalEntryDetailsCompletedEventHandler(object sender, UpdateJournalEntryDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateJournalEntryDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateJournalEntryDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15019_CheckRollYearCompletedEventHandler(object sender, F15019_CheckRollYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15019_CheckRollYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15019_CheckRollYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9013_ListNextNumberConfigurationCompletedEventHandler(object sender, F9013_ListNextNumberConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9013_ListNextNumberConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9013_ListNextNumberConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9013_CheckNextNumberCompletedEventHandler(object sender, F9013_CheckNextNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9013_CheckNextNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9013_CheckNextNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9013_UpdateNextNumberConfigDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9013_ListNextNumberRollYearCompletedEventHandler(object sender, F9013_ListNextNumberRollYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9013_ListNextNumberRollYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9013_ListNextNumberRollYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15018_GetMiscReceiptCompletedEventHandler(object sender, F15018_GetMiscReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15018_GetMiscReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15018_GetMiscReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1021_GetMiscReceiptTemplateCompletedEventHandler(object sender, F1021_GetMiscReceiptTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1021_GetMiscReceiptTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1021_GetMiscReceiptTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1021_SaveMiscReceiptTemplateCompletedEventHandler(object sender, F1021_SaveMiscReceiptTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1021_SaveMiscReceiptTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1021_SaveMiscReceiptTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1022_ListMiscReceiptTemplateCompletedEventHandler(object sender, F1022_ListMiscReceiptTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1022_ListMiscReceiptTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1022_ListMiscReceiptTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1022_DeleteMiscReceiptTemplateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1025_ListRollYearCompletedEventHandler(object sender, F1025_ListRollYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1025_ListRollYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1025_ListRollYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1025_ListAutoFundTransferDetailsCompletedEventHandler(object sender, F1025_ListAutoFundTransferDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1025_ListAutoFundTransferDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1025_ListAutoFundTransferDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1025_DeleteAutoFundTransferDetailsCompletedEventHandler(object sender, F1025_DeleteAutoFundTransferDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1025_DeleteAutoFundTransferDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1025_DeleteAutoFundTransferDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1025_UpdateAutoFundTransferDetailsCompletedEventHandler(object sender, F1025_UpdateAutoFundTransferDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1025_UpdateAutoFundTransferDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1025_UpdateAutoFundTransferDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1025_CheckRollYearCompletedEventHandler(object sender, F1025_CheckRollYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1025_CheckRollYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1025_CheckRollYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RdlToCode_GetCompletedEventHandler(object sender, RdlToCode_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RdlToCode_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RdlToCode_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RdlToCode_FillComboCompletedEventHandler(object sender, RdlToCode_FillComboCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RdlToCode_FillComboCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RdlToCode_FillComboCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RdlToCode_SaveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RdlToCode_DeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F27006_ListParcelOwnershipCompletedEventHandler(object sender, F27006_ListParcelOwnershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F27006_ListParcelOwnershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F27006_ListParcelOwnershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F27006_ListALLOwnerDetailsCompletedEventHandler(object sender, F27006_ListALLOwnerDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F27006_ListALLOwnerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F27006_ListALLOwnerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F27006_SaveParcelOwnershipCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F27006_CheckOwnershipDetailsCompletedEventHandler(object sender, F27006_CheckOwnershipDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F27006_CheckOwnershipDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F27006_CheckOwnershipDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F25000_GetParcelDetailsCompletedEventHandler(object sender, F25000_GetParcelDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F25000_GetParcelDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F25000_GetParcelDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F35001_GetValueSliceHeaderCompletedEventHandler(object sender, F35001_GetValueSliceHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F35001_GetValueSliceHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F35001_GetValueSliceHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F35001_GetAdjustmentSliceValueCompletedEventHandler(object sender, F35001_GetAdjustmentSliceValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F35001_GetAdjustmentSliceValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F35001_GetAdjustmentSliceValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F35002_ListAdjustmentTypeCompletedEventHandler(object sender, F35002_ListAdjustmentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F35002_ListAdjustmentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F35002_ListAdjustmentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F35001_DeleteValueSliceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F35000_InsertOrUpdateValueSliceCompletedEventHandler(object sender, F35000_InsertOrUpdateValueSliceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F35000_InsertOrUpdateValueSliceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F35000_InsertOrUpdateValueSliceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F35000_GetAppraisalSummaryObjectsCompletedEventHandler(object sender, F35000_GetAppraisalSummaryObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F35000_GetAppraisalSummaryObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F35000_GetAppraisalSummaryObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F35000_InsertObjectCompletedEventHandler(object sender, F35000_InsertObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F35000_InsertObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F35000_InsertObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F35000_ListObjectSliceTypesCompletedEventHandler(object sender, F35000_ListObjectSliceTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F35000_ListObjectSliceTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F35000_ListObjectSliceTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F27000_GetMiscAssessmentCompletedEventHandler(object sender, F27000_GetMiscAssessmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F27000_GetMiscAssessmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F27000_GetMiscAssessmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F27000_ListMADistrictTypeCompletedEventHandler(object sender, F27000_ListMADistrictTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F27000_ListMADistrictTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F27000_ListMADistrictTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F27000_ListMADistrictItemTypeCompletedEventHandler(object sender, F27000_ListMADistrictItemTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F27000_ListMADistrictItemTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F27000_ListMADistrictItemTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F27000_SaveMADetailsCompletedEventHandler(object sender, F27000_SaveMADetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F27000_SaveMADetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F27000_SaveMADetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15015_ListStatementOwnershipCompletedEventHandler(object sender, F15015_ListStatementOwnershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15015_ListStatementOwnershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15015_ListStatementOwnershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15015_SaveStatementOwnershipCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9060_ListAuditingTablesCompletedEventHandler(object sender, F9060_ListAuditingTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9060_ListAuditingTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9060_ListAuditingTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9060_ListAuditingColumnsCompletedEventHandler(object sender, F9060_ListAuditingColumnsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9060_ListAuditingColumnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9060_ListAuditingColumnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9060_SaveAuditConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9060_DeleteAuditConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CheckInstallationCompletedEventHandler(object sender, CheckInstallationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckInstallationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckInstallationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListHistoryGridCompletedEventHandler(object sender, ListHistoryGridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListHistoryGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListHistoryGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetReceiptDetailsCompletedEventHandler(object sender, GetReceiptDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceiptDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceiptDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListTenderTypeCompletedEventHandler(object sender, ListTenderTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListTenderTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListTenderTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetValidReceiptTestCompletedEventHandler(object sender, GetValidReceiptTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValidReceiptTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValidReceiptTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveReceiptCompletedEventHandler(object sender, SaveReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetMinTaxDueCompletedEventHandler(object sender, GetMinTaxDueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMinTaxDueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMinTaxDueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetInterestAmountCompletedEventHandler(object sender, GetInterestAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInterestAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInterestAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetReceiptHeaderDetailsCompletedEventHandler(object sender, GetReceiptHeaderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceiptHeaderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceiptHeaderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListReceiptItemsCompletedEventHandler(object sender, ListReceiptItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListReceiptItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListReceiptItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetReceiptStatementHeaderDetailsCompletedEventHandler(object sender, GetReceiptStatementHeaderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceiptStatementHeaderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceiptStatementHeaderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListReceiptOwnersCompletedEventHandler(object sender, ListReceiptOwnersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListReceiptOwnersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListReceiptOwnersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetPaymentCompletedEventHandler(object sender, GetPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SavePaymentCompletedEventHandler(object sender, SavePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetTenderTypeConfigurationCompletedEventHandler(object sender, GetTenderTypeConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTenderTypeConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTenderTypeConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetCommentsCompletedEventHandler(object sender, GetCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9075_GetCommentCompletedEventHandler(object sender, F9075_GetCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9075_GetCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9075_GetCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveCommentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteCommentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetCommentsCountCompletedEventHandler(object sender, GetCommentsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetConfigDetailsCompletedEventHandler(object sender, GetConfigDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetConnectionStringCompletedEventHandler(object sender, GetConnectionStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConnectionStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAttachmentCountCompletedEventHandler(object sender, GetAttachmentCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAttachmentItemsCompletedEventHandler(object sender, GetAttachmentItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAttachementFunctionNameCompletedEventHandler(object sender, GetAttachementFunctionNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachementFunctionNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachementFunctionNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveAttachmentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteAttachmentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetProgramIdCompletedEventHandler(object sender, GetProgramIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetFilePathCompletedEventHandler(object sender, GetFilePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetRealEstateStatementCountCompletedEventHandler(object sender, GetRealEstateStatementCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRealEstateStatementCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRealEstateStatementCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetRealEstateStatementIdsCompletedEventHandler(object sender, GetRealEstateStatementIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRealEstateStatementIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRealEstateStatementIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetRealEstateStatementCompletedEventHandler(object sender, GetRealEstateStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRealEstateStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRealEstateStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListQueryCompletedEventHandler(object sender, ListQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListSortQueryCompletedEventHandler(object sender, ListSortQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSortQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSortQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveQueryCompletedEventHandler(object sender, SaveQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ExecuteQueryCompletedEventHandler(object sender, ExecuteQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CheckQueryExistCompletedEventHandler(object sender, CheckQueryExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckQueryExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckQueryExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetQueryResultCompletedEventHandler(object sender, GetQueryResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteQueryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ExecuteSnapshotCompletedEventHandler(object sender, ExecuteSnapshotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSnapshotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSnapshotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveSnapShotCompletedEventHandler(object sender, SaveSnapShotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSnapShotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSnapShotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CheckSnapShotExistCompletedEventHandler(object sender, CheckSnapShotExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSnapShotExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSnapShotExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetSnapShotResultCompletedEventHandler(object sender, GetSnapShotResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSnapShotResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSnapShotResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListSnapShotCompletedEventHandler(object sender, ListSnapShotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSnapShotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSnapShotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListSortSnapShotCompletedEventHandler(object sender, ListSortSnapShotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSortSnapShotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSortSnapShotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteSnapShotCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetReportDetailsCompletedEventHandler(object sender, GetReportDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9008_GetReportDetailsCompletedEventHandler(object sender, F9008_GetReportDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9008_GetReportDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9008_GetReportDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9008_SaveReportDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAutoPrintStatusCompletedEventHandler(object sender, GetAutoPrintStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAutoPrintStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAutoPrintStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveAutoPrintCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetMenuItemsCompletedEventHandler(object sender, GetMenuItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetFormItemsCompletedEventHandler(object sender, GetFormItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetFormTitleCompletedEventHandler(object sender, GetFormTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetFormPermissionsCompletedEventHandler(object sender, GetFormPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetUserGroupDetailsCompletedEventHandler(object sender, GetUserGroupDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGroupDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGroupDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveUserDetailsCompletedEventHandler(object sender, SaveUserDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUserDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUserDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteUserDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetGroupDetailsCompletedEventHandler(object sender, GetGroupDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void InsertGroupDetailsCompletedEventHandler(object sender, InsertGroupDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGroupDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGroupDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteGroupDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetGroupPermissionDetailsCompletedEventHandler(object sender, GetGroupPermissionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupPermissionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupPermissionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveGroupPermissionDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void LogExceptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetQueryUtilityListCompletedEventHandler(object sender, GetQueryUtilityListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryUtilityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryUtilityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteQueryUtilityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void InsertQueryUtilityCompletedEventHandler(object sender, InsertQueryUtilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertQueryUtilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertQueryUtilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetSnapshotUtilityListCompletedEventHandler(object sender, GetSnapshotUtilityListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSnapshotUtilityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSnapshotUtilityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteSnapshotUtilityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void InsertSnapshotUtilityCompletedEventHandler(object sender, InsertSnapshotUtilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSnapshotUtilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSnapshotUtilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ValidationCompletedEventHandler(object sender, ValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetUserInformationCompletedEventHandler(object sender, GetUserInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetConfigInformationCompletedEventHandler(object sender, GetConfigInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAuthenticationStateCompletedEventHandler(object sender, GetAuthenticationStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuthenticationStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuthenticationStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetSQLQueryResultCompletedEventHandler(object sender, GetSQLQueryResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSQLQueryResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSQLQueryResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetSQLDescriptionCompletedEventHandler(object sender, GetSQLDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSQLDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSQLDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetSQLStringCompletedEventHandler(object sender, GetSQLStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSQLStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSQLStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetSQLCategoryCompletedEventHandler(object sender, GetSQLCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSQLCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSQLCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveSQLQueryCompletedEventHandler(object sender, SaveSQLQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSQLQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSQLQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9015_DeleteQueryCompletedEventHandler(object sender, F9015_DeleteQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9015_DeleteQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9015_DeleteQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetCountyConfigurationCompletedEventHandler(object sender, GetCountyConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountyConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountyConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UpdateCountyConfigDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetMortgageTemplateCompletedEventHandler(object sender, GetMortgageTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMortgageTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMortgageTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListMortgageTemplateCompletedEventHandler(object sender, ListMortgageTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMortgageTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMortgageTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListMortgageImportFileTypeCompletedEventHandler(object sender, ListMortgageImportFileTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMortgageImportFileTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMortgageImportFileTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveMortgageImportTemplateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteMortgageTemplateCompletedEventHandler(object sender, DeleteMortgageTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMortgageTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMortgageTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetMortgageImportStatementIdsCompletedEventHandler(object sender, GetMortgageImportStatementIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMortgageImportStatementIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMortgageImportStatementIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetMortgageImportStatementCompletedEventHandler(object sender, GetMortgageImportStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMortgageImportStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMortgageImportStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveMortgageImportEntriesCompletedEventHandler(object sender, SaveMortgageImportEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMortgageImportEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMortgageImportEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetMortgageImportTemplateDetailsCompletedEventHandler(object sender, GetMortgageImportTemplateDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMortgageImportTemplateDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMortgageImportTemplateDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void MortgageImportCheckErrorsCompletedEventHandler(object sender, MortgageImportCheckErrorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MortgageImportCheckErrorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MortgageImportCheckErrorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CheckMortgageImportValidReceiptCompletedEventHandler(object sender, CheckMortgageImportValidReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMortgageImportValidReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMortgageImportValidReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveMortgageImportCompletedEventHandler(object sender, SaveMortgageImportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMortgageImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMortgageImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CreateReceiptCompletedEventHandler(object sender, CreateReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteMortgageImportCompletedEventHandler(object sender, DeleteMortgageImportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMortgageImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMortgageImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteMortgageImportFileEntriesCompletedEventHandler(object sender, DeleteMortgageImportFileEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMortgageImportFileEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMortgageImportFileEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetErrorEngineCompletedEventHandler(object sender, GetErrorEngineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetErrorEngineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetErrorEngineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void InsertErrorEngineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListNextNumberConfigurationCompletedEventHandler(object sender, ListNextNumberConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListNextNumberConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListNextNumberConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CheckNextNumberCompletedEventHandler(object sender, CheckNextNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckNextNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckNextNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UpdateNextNumberConfigDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1107_ExciseWorkQueue_GetWorkQueueSearchResultCompletedEventHandler(object sender, F1107_ExciseWorkQueue_GetWorkQueueSearchResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1107_ExciseWorkQueue_GetWorkQueueSearchResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1107_ExciseWorkQueue_GetWorkQueueSearchResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1109_ListManagementQueueCompletedEventHandler(object sender, F1109_ListManagementQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1109_ListManagementQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1109_ListManagementQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1109_ManagementQueueFilterResultCompletedEventHandler(object sender, F1109_ManagementQueueFilterResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1109_ManagementQueueFilterResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1109_ManagementQueueFilterResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1109_FilterSearchAffidavitCompletedEventHandler(object sender, F1109_FilterSearchAffidavitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1109_FilterSearchAffidavitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1109_FilterSearchAffidavitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1109_ListRollYearCompletedEventHandler(object sender, F1109_ListRollYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1109_ListRollYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1109_ListRollYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1108_GetSubmitAffidavitCompletedEventHandler(object sender, F1108_GetSubmitAffidavitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1108_GetSubmitAffidavitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1108_GetSubmitAffidavitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1108_ListManagementQueueCompletedEventHandler(object sender, F1108_ListManagementQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1108_ListManagementQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1108_ListManagementQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1108_ListConfigurationDetailCompletedEventHandler(object sender, F1108_ListConfigurationDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1108_ListConfigurationDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1108_ListConfigurationDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1108_GetSubmitAffidavitReplyCompletedEventHandler(object sender, F1108_GetSubmitAffidavitReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1108_GetSubmitAffidavitReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1108_GetSubmitAffidavitReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1108_SaveReplyReetXmlCompletedEventHandler(object sender, F1108_SaveReplyReetXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1108_SaveReplyReetXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1108_SaveReplyReetXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetExciseTaxStatementCompletedEventHandler(object sender, GetExciseTaxStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExciseTaxStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExciseTaxStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetExciseTaxReceiptCompletedEventHandler(object sender, GetExciseTaxReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExciseTaxReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExciseTaxReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListExciseTaxStatementCompletedEventHandler(object sender, ListExciseTaxStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListExciseTaxStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListExciseTaxStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveExciseTaxReceiptCompletedEventHandler(object sender, SaveExciseTaxReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveExciseTaxReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveExciseTaxReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetExciseTaxAffidavitStatusCompletedEventHandler(object sender, GetExciseTaxAffidavitStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExciseTaxAffidavitStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExciseTaxAffidavitStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UpdateExciseAffidavitStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListExciseRateDistrictCompletedEventHandler(object sender, ListExciseRateDistrictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListExciseRateDistrictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListExciseRateDistrictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetExciseDistrictCopyCompletedEventHandler(object sender, GetExciseDistrictCopyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExciseDistrictCopyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExciseDistrictCopyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveExciseDistrcitCopyCompletedEventHandler(object sender, SaveExciseDistrcitCopyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveExciseDistrcitCopyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveExciseDistrcitCopyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetMasterNameSearchCompletedEventHandler(object sender, GetMasterNameSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasterNameSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasterNameSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetExciseIndividualTypeCompletedEventHandler(object sender, GetExciseIndividualTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExciseIndividualTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExciseIndividualTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetExciseTaxAffidavitDetailsCompletedEventHandler(object sender, GetExciseTaxAffidavitDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExciseTaxAffidavitDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExciseTaxAffidavitDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetExciseTaxAffidavitCalulateAmountDueCompletedEventHandler(object sender, GetExciseTaxAffidavitCalulateAmountDueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExciseTaxAffidavitCalulateAmountDueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExciseTaxAffidavitCalulateAmountDueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAffidavitStatementIdCompletedEventHandler(object sender, GetAffidavitStatementIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAffidavitStatementIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAffidavitStatementIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveAffiDavitDetailsCompletedEventHandler(object sender, SaveAffiDavitDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAffiDavitDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAffiDavitDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetOwnerDetailsCompletedEventHandler(object sender, GetOwnerDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOwnerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOwnerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetDistrictSelectionCompletedEventHandler(object sender, GetDistrictSelectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistrictSelectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistrictSelectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteAffidavitDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ExecuteAffdvtQueryCompletedEventHandler(object sender, ExecuteAffdvtQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteAffdvtQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteAffdvtQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetExciseTaxRateCompletedEventHandler(object sender, GetExciseTaxRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExciseTaxRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExciseTaxRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListExciseTaxRateCompletedEventHandler(object sender, ListExciseTaxRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListExciseTaxRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListExciseTaxRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveExciseTaxRateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteExciseTaxRateCompletedEventHandler(object sender, DeleteExciseTaxRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteExciseTaxRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteExciseTaxRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetDistrictNameCompletedEventHandler(object sender, GetDistrictNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistrictNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistrictNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAccountNameCompletedEventHandler(object sender, GetAccountNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAccountSelectionDataCompletedEventHandler(object sender, GetAccountSelectionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountSelectionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountSelectionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1512_GetDistrictSelectionDataCompletedEventHandler(object sender, F1512_GetDistrictSelectionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1512_GetDistrictSelectionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1512_GetDistrictSelectionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListHelpDocumentFormCompletedEventHandler(object sender, ListHelpDocumentFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListHelpDocumentFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListHelpDocumentFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void InsertGDocEventEngineDataCompletedEventHandler(object sender, InsertGDocEventEngineDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGDocEventEngineDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGDocEventEngineDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListEventTypeStatusDetailsCompletedEventHandler(object sender, ListEventTypeStatusDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListEventTypeStatusDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListEventTypeStatusDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void LoadEventEngineDataCompletedEventHandler(object sender, LoadEventEngineDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadEventEngineDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadEventEngineDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetEventEngineDataHeaderCompletedEventHandler(object sender, GetEventEngineDataHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventEngineDataHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventEngineDataHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetWorkOrderDetailsCompletedEventHandler(object sender, GetWorkOrderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkOrderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkOrderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetGDocCommentCompletedEventHandler(object sender, GetGDocCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGDocCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGDocCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveGDocCommentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetGDocEventHeaderCompletedEventHandler(object sender, GetGDocEventHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGDocEventHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGDocEventHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListGDocEventHeaderStatusCompletedEventHandler(object sender, ListGDocEventHeaderStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListGDocEventHeaderStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListGDocEventHeaderStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteGDocEventHeaderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveGDocEventHeaderCompletedEventHandler(object sender, SaveGDocEventHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveGDocEventHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveGDocEventHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8901_GetWorkOrderEngineCompletedEventHandler(object sender, F8901_GetWorkOrderEngineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8901_GetWorkOrderEngineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8901_GetWorkOrderEngineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8901_GetWorkOrderTypeCompletedEventHandler(object sender, F8901_GetWorkOrderTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8901_GetWorkOrderTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8901_GetWorkOrderTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8901_SaveWorkOrderEngineCompletedEventHandler(object sender, F8901_SaveWorkOrderEngineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8901_SaveWorkOrderEngineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8901_SaveWorkOrderEngineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8912_GetWorkOrderCallInCompletedEventHandler(object sender, F8912_GetWorkOrderCallInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8912_GetWorkOrderCallInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8912_GetWorkOrderCallInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void wListAddressesCompletedEventHandler(object sender, wListAddressesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wListAddressesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wListAddressesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8912_SaveWorkOrderCallInCompletedEventHandler(object sender, F8912_SaveWorkOrderCallInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8912_SaveWorkOrderCallInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8912_SaveWorkOrderCallInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8910_GetWorkOrderGeneralCompletedEventHandler(object sender, F8910_GetWorkOrderGeneralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8910_GetWorkOrderGeneralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8910_GetWorkOrderGeneralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8910_SaveWorkOrderGeneralCompletedEventHandler(object sender, F8910_SaveWorkOrderGeneralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8910_SaveWorkOrderGeneralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8910_SaveWorkOrderGeneralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8016_GetStoppageEventDetailsCompletedEventHandler(object sender, F8016_GetStoppageEventDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8016_GetStoppageEventDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8016_GetStoppageEventDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8016_SaveStoppageEventDetailsCompletedEventHandler(object sender, F8016_SaveStoppageEventDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8016_SaveStoppageEventDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8016_SaveStoppageEventDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8042_GetTimeFooterDetailsCompletedEventHandler(object sender, F8042_GetTimeFooterDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8042_GetTimeFooterDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8042_GetTimeFooterDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8046_GetMaterialsFooterDetailsCompletedEventHandler(object sender, F8046_GetMaterialsFooterDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8046_GetMaterialsFooterDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8046_GetMaterialsFooterDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F27007_GetParcelHeaderSlimDetailsCompletedEventHandler(object sender, F27007_GetParcelHeaderSlimDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F27007_GetParcelHeaderSlimDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F27007_GetParcelHeaderSlimDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F15016_GetStatementHeaderSlimDetailsCompletedEventHandler(object sender, F15016_GetStatementHeaderSlimDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F15016_GetStatementHeaderSlimDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F15016_GetStatementHeaderSlimDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetPaymentItemsDetailsCompletedEventHandler(object sender, GetPaymentItemsDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentItemsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentItemsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SavePaymentItemsDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListPostTypesCompletedEventHandler(object sender, ListPostTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListPostTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListPostTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListPostingHistoryCompletedEventHandler(object sender, ListPostingHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListPostingHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListPostingHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListPostingErrorsCompletedEventHandler(object sender, ListPostingErrorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListPostingErrorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListPostingErrorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void InsertAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListPostingQueueCompletedEventHandler(object sender, ListPostingQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListPostingQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListPostingQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListPreviewPostingCompletedEventHandler(object sender, ListPreviewPostingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListPreviewPostingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListPreviewPostingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ClearTemporaryRecordsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CompilePostingRecordSetCompletedEventHandler(object sender, CompilePostingRecordSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompilePostingRecordSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompilePostingRecordSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void PerformPostingCompletedEventHandler(object sender, PerformPostingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PerformPostingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PerformPostingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetPostIdDetailsCompletedEventHandler(object sender, GetPostIdDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostIdDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostIdDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void InsertReverseGLPostCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetEventEngineEventPropertiesCompletedEventHandler(object sender, GetEventEngineEventPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventEngineEventPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventEngineEventPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveEventEngineEventPropertiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListEventEngineTVDetailsCompletedEventHandler(object sender, ListEventEngineTVDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListEventEngineTVDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListEventEngineTVDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListEventEngineDetailTypesCompletedEventHandler(object sender, ListEventEngineDetailTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListEventEngineDetailTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListEventEngineDetailTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveEventEngineTVDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UpdateEventEngineTVDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteEventEngineTVDetailsCompletedEventHandler(object sender, DeleteEventEngineTVDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEventEngineTVDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEventEngineTVDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetSandwichAndItsSliceInformationCompletedEventHandler(object sender, GetSandwichAndItsSliceInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSandwichAndItsSliceInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSandwichAndItsSliceInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetSandwichSubTitleInformationCompletedEventHandler(object sender, GetSandwichSubTitleInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSandwichSubTitleInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSandwichSubTitleInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetFormDetailsCompletedEventHandler(object sender, GetFormDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListUserNamesCompletedEventHandler(object sender, ListUserNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListUserNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListUserNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListDepositHistoryDetailsCompletedEventHandler(object sender, ListDepositHistoryDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListDepositHistoryDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListDepositHistoryDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetDepositHistorySearchResultCompletedEventHandler(object sender, GetDepositHistorySearchResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepositHistorySearchResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepositHistorySearchResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UpdateDepositHistoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListAccountNamesCompletedEventHandler(object sender, ListAccountNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAccountNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAccountNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetLinearEventTypeCompletedEventHandler(object sender, GetLinearEventTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinearEventTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinearEventTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveLinearEventTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetPointEventTypeCompletedEventHandler(object sender, GetPointEventTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPointEventTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPointEventTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SavePointEventTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1211_GetDisbursementCheckListCompletedEventHandler(object sender, F1211_GetDisbursementCheckListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1211_GetDisbursementCheckListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1211_GetDisbursementCheckListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1211_UpdateCheckStagingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1211_UpdateAgencyValidStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1211_DeleteCheckStagingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1211_CreateChecksCompletedEventHandler(object sender, F1211_CreateChecksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1211_CreateChecksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1211_CreateChecksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8056_ListInspectionDetailsCompletedEventHandler(object sender, F8056_ListInspectionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8056_ListInspectionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8056_ListInspectionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8056_SaveInspectionDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8056_UpdateInspectionDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8056_DeleteInspectionDetailsCompletedEventHandler(object sender, F8056_DeleteInspectionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8056_DeleteInspectionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8056_DeleteInspectionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1210_GetDisbursementDetailsCompletedEventHandler(object sender, F1210_GetDisbursementDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1210_GetDisbursementDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1210_GetDisbursementDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1210_DisbursementAccountNamesCompletedEventHandler(object sender, F1210_DisbursementAccountNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1210_DisbursementAccountNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1210_DisbursementAccountNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1210_SaveDisbursementCompletedEventHandler(object sender, F1210_SaveDisbursementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1210_SaveDisbursementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1210_SaveDisbursementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1214_AccountNamesCompletedEventHandler(object sender, F1214_AccountNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1214_AccountNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1214_AccountNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1214_ListRefundPaymentsCompletedEventHandler(object sender, F1214_ListRefundPaymentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1214_ListRefundPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1214_ListRefundPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1214_PrepareChecksCompletedEventHandler(object sender, F1214_PrepareChecksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1214_PrepareChecksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1214_PrepareChecksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1226_ListCashLedgerCompletedEventHandler(object sender, F1226_ListCashLedgerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1226_ListCashLedgerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1226_ListCashLedgerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1226_GetCashLedgerCompletedEventHandler(object sender, F1226_GetCashLedgerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1226_GetCashLedgerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1226_GetCashLedgerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1221_UpdateCashLedgerCompletedEventHandler(object sender, F1221_UpdateCashLedgerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1221_UpdateCashLedgerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1221_UpdateCashLedgerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1226_UpdateCashLedgerStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1226_DeleteCashLedgerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8040_ListTimeInformationCompletedEventHandler(object sender, F8040_ListTimeInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8040_ListTimeInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8040_ListTimeInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8040_ListTimeResourceInformationCompletedEventHandler(object sender, F8040_ListTimeResourceInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8040_ListTimeResourceInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8040_ListTimeResourceInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8040_SaveTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8040_UpdateTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8040_DeleteTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8902_GetHeaderCompletedEventHandler(object sender, F8902_GetHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8902_GetHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8902_GetHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8902_SaveHeaderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8902_DeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8044_ListMaterialDetailsCompletedEventHandler(object sender, F8044_ListMaterialDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8044_ListMaterialDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8044_ListMaterialDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8044_ListMaterialsResourceTypeCompletedEventHandler(object sender, F8044_ListMaterialsResourceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8044_ListMaterialsResourceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8044_ListMaterialsResourceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8044_SaveMaterialDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8044_UpdateMaterialDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8044_DeleteMaterialItemCompletedEventHandler(object sender, F8044_DeleteMaterialItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8044_DeleteMaterialItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8044_DeleteMaterialItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1220_AccountNamesCompletedEventHandler(object sender, F1220_AccountNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1220_AccountNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1220_AccountNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1220_GetReconciledDetailsCompletedEventHandler(object sender, F1220_GetReconciledDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1220_GetReconciledDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1220_GetReconciledDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1220_ListAccountRegisterCompletedEventHandler(object sender, F1220_ListAccountRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1220_ListAccountRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1220_ListAccountRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1220_GetAccountRegisterDetailsCompletedEventHandler(object sender, F1220_GetAccountRegisterDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1220_GetAccountRegisterDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1220_GetAccountRegisterDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F8904_GetEventGridDetailsCompletedEventHandler(object sender, F8904_GetEventGridDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F8904_GetEventGridDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F8904_GetEventGridDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9002_GetUserDetailsCompletedEventHandler(object sender, F9002_GetUserDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9002_GetUserDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9002_GetUserDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1224_AccountNamesCompletedEventHandler(object sender, F1224_AccountNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1224_AccountNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1224_AccountNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1224_GetCheckNumberCompletedEventHandler(object sender, F1224_GetCheckNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1224_GetCheckNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1224_GetCheckNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1224_ListUnPrintedChecksCompletedEventHandler(object sender, F1224_ListUnPrintedChecksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1224_ListUnPrintedChecksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1224_ListUnPrintedChecksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1224_CreateChecksCompletedEventHandler(object sender, F1224_CreateChecksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1224_CreateChecksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1224_CreateChecksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1502_GetAccountElementMgmtCompletedEventHandler(object sender, F1502_GetAccountElementMgmtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1502_GetAccountElementMgmtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1502_GetAccountElementMgmtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1502_SaveAccountElementMgmtCompletedEventHandler(object sender, F1502_SaveAccountElementMgmtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1502_SaveAccountElementMgmtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1502_SaveAccountElementMgmtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1502_DeleteAccountElementMgmtCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9600_ListSearchresultCompletedEventHandler(object sender, F9600_ListSearchresultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9600_ListSearchresultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9600_ListSearchresultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F9600_ListSortResultCompletedEventHandler(object sender, F9600_ListSortResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F9600_ListSortResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F9600_ListSortResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1530_GetInstitutionDetailCompletedEventHandler(object sender, F1530_GetInstitutionDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1530_GetInstitutionDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1530_GetInstitutionDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1530_SaveInstitutionCompletedEventHandler(object sender, F1530_SaveInstitutionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1530_SaveInstitutionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1530_SaveInstitutionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1531_GetCashAccountDetailCompletedEventHandler(object sender, F1531_GetCashAccountDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1531_GetCashAccountDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1531_GetCashAccountDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1531_SaveCashAccountCompletedEventHandler(object sender, F1531_SaveCashAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1531_SaveCashAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1531_SaveCashAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1532_GetInstitutionContactDetailCompletedEventHandler(object sender, F1532_GetInstitutionContactDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1532_GetInstitutionContactDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1532_GetInstitutionContactDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1532_SaveInstitutionContactCompletedEventHandler(object sender, F1532_SaveInstitutionContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1532_SaveInstitutionContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1532_SaveInstitutionContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1030_ListDistrictDefinitionTypeCompletedEventHandler(object sender, F1030_ListDistrictDefinitionTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1030_ListDistrictDefinitionTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1030_ListDistrictDefinitionTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1030_GetDistrictDefinitionDetailsCompletedEventHandler(object sender, F1030_GetDistrictDefinitionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1030_GetDistrictDefinitionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1030_GetDistrictDefinitionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void F1030_DeleteDistrictDefinitionCompletedEventHandler(object sender, F1030_DeleteDistrictDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class F1030_DeleteDistrictDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal F1030_DeleteDistrictDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591