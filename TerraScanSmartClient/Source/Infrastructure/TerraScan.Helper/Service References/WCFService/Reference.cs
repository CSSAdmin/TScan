//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8689
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://TerraScan.ServiceContracts", ConfigurationName="WCFService.ISmartClientService")]
    public interface ISmartClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetMADImportTemplateDetails" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetMADImportTemplateDetails" +
            "Response")]
        string GetMADImportTemplateDetails(string TemplateName, string Description, string FileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetSnapshotImportTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetSnapshotImportTemplateRe" +
            "sponse")]
        string GetSnapshotImportTemplate(int templateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28510_DeleteSnapshotImport" +
            "Details", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28510_DeleteSnapshotImport" +
            "DetailsResponse")]
        void F28510_DeleteSnapshotImportDetails(int importId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28510_InsertImportSnapshot" +
            "Details", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28510_InsertImportSnapshot" +
            "DetailsResponse")]
        int F28510_InsertImportSnapshotDetails(System.Nullable<int> importId, string importXML, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28510_ExecuteImport", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28510_ExecuteImportRespons" +
            "e")]
        string F28510_ExecuteImport(int importId, string importXML, int userId, bool isProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28510_ExecuteCheckForError" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28510_ExecuteCheckForError" +
            "sResponse")]
        void F28510_ExecuteCheckForErrors(int importId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28510_CreateImportRecords", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28510_CreateImportRecordsR" +
            "esponse")]
        string F28510_CreateImportRecords(int importId, int userId, bool isProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28510_SnapshotImportDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28510_SnapshotImportDetail" +
            "sResponse")]
        string F28510_SnapshotImportDetails(int importId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetSnapshotImportTemplateDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetSnapshotImportTemplateDe" +
            "tailsResponse")]
        string GetSnapshotImportTemplateDetails(string TemplateName, string Description, string FileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29555_GetPersonalSalesOwne" +
            "r", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29555_GetPersonalSalesOwne" +
            "rResponse")]
        string F29555_GetPersonalSalesOwner(System.Nullable<int> pSsaleId, System.Nullable<int> ownerId, System.Nullable<int> scheduleId, int userid, string scheduleString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29555_GetSalesScheduleandO" +
            "wners", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29555_GetSalesScheduleandO" +
            "wnersResponse")]
        string F29555_GetSalesScheduleandOwners(System.Nullable<int> scheduleId, string scheduleIds, System.Nullable<int> pSsaleId, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29555_ScheduleSaleTracking" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29555_ScheduleSaleTracking" +
            "Response")]
        string F29555_ScheduleSaleTracking(int eventId, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29555_SaveSalesOwner", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29555_SaveSalesOwnerRespon" +
            "se")]
        void F29555_SaveSalesOwner(int pSaleId, string ownerDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29555_SaveSalesSchedule", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29555_SaveSalesScheduleRes" +
            "ponse")]
        void F29555_SaveSalesSchedule(int pSaleId, string scheduleItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29555_SaveScheduleSaleTrac" +
            "king", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29555_SaveScheduleSaleTrac" +
            "kingResponse")]
        int F29555_SaveScheduleSaleTracking(int eventId, string pSaleItems, string scheduleItems, string ownerDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2201_GetPersonalPropertyDe" +
            "scription", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2201_GetPersonalPropertyDe" +
            "scriptionResponse")]
        string F2201_GetPersonalPropertyDescription(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2201_GetPersonalPropertySe" +
            "arch", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2201_GetPersonalPropertySe" +
            "archResponse")]
        string F2201_GetPersonalPropertySearch(string code, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2550_GetConfiguredState", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2550_GetConfiguredStateRes" +
            "ponse")]
        string F2550_GetConfiguredState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1406_CentralAssessedGridDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1406_CentralAssessedGridDe" +
            "tailsResponse")]
        string F1406_CentralAssessedGridDetails(string centralSearchXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1406_LoadPropertClassCombo" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1406_LoadPropertClassCombo" +
            "Response")]
        string F1406_LoadPropertClassCombo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1203LoadDueDateManagement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1203LoadDueDateManagementR" +
            "esponse")]
        string F1203LoadDueDateManagement();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1203_SaveDueDateManagement" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1203_SaveDueDateManagement" +
            "Response")]
        void F1203_SaveDueDateManagement(int userId, string dueDateXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29636_GetBOEDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29636_GetBOEDetailsRespons" +
            "e")]
        string F29636_GetBOEDetails(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29636_BOETypeDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29636_BOETypeDetailsRespon" +
            "se")]
        string F29636_BOETypeDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29636_SaveBOEDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29636_SaveBOEDetailsRespon" +
            "se")]
        void F29636_SaveBOEDetails(string boeElemenets, string boeValues, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29636_PushBOEDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29636_PushBOEDetailsRespon" +
            "se")]
        string F29636_PushBOEDetails(int boeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29636_DeleteBOEDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29636_DeleteBOEDetailsResp" +
            "onse")]
        void F29636_DeleteBOEDetails(int boeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9105_ExecuteCopyName", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9105_ExecuteCopyNameRespon" +
            "se")]
        int F9105_ExecuteCopyName(string copyData, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28210_PermitImportDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28210_PermitImportDetailsR" +
            "esponse")]
        string F28210_PermitImportDetails(int importId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28210_DeletetemplateDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28210_DeletetemplateDetail" +
            "sResponse")]
        void F28210_DeletetemplateDetails(int importId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28210_InsertImportPermitDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28210_InsertImportPermitDe" +
            "tailsResponse")]
        int F28210_InsertImportPermitDetails(System.Nullable<int> importId, string importXML, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28210_ExecuteImport", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28210_ExecuteImportRespons" +
            "e")]
        string F28210_ExecuteImport(int importId, string importXML, int userId, bool isProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28210_ExecuteCheckForError" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28210_ExecuteCheckForError" +
            "sResponse")]
        void F28210_ExecuteCheckForErrors(int importId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28210_CreateImportRecords", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28210_CreateImportRecordsR" +
            "esponse")]
        string F28210_CreateImportRecords(int importId, int userId, bool isProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetPermitImportTemplateDeta" +
            "ils", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetPermitImportTemplateDeta" +
            "ilsResponse")]
        string GetPermitImportTemplateDetails(string TemplateName, string Description, string FileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28310_MADImportDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28310_MADImportDetailsResp" +
            "onse")]
        string F28310_MADImportDetails(int importId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28310_DeleteMADImportDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28310_DeleteMADImportDetai" +
            "lsResponse")]
        void F28310_DeleteMADImportDetails(int importId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28310_InsertImportMADDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28310_InsertImportMADDetai" +
            "lsResponse")]
        int F28310_InsertImportMADDetails(System.Nullable<int> importId, string importXML, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28310_ExecuteImport", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28310_ExecuteImportRespons" +
            "e")]
        string F28310_ExecuteImport(int importId, string importXML, int userId, bool isProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28310_ExecuteCheckForError" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28310_ExecuteCheckForError" +
            "sResponse")]
        void F28310_ExecuteCheckForErrors(int importId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28310_CreateImportRecords", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28310_CreateImportRecordsR" +
            "esponse")]
        string F28310_CreateImportRecords(int importId, int userId, bool isProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35080_OwnerDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35080_OwnerDetailsResponse" +
            "")]
        string F35080_OwnerDetails(int ownerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35081_CentralAssessedGridD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35081_CentralAssessedGridD" +
            "etailsResponse")]
        string F35081_CentralAssessedGridDetails(int CentralId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35081_CentralAssessedRateD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35081_CentralAssessedRateD" +
            "etailsResponse")]
        string F35081_CentralAssessedRateDetails(int subFundId, decimal personalProperty, decimal realProperty, string description, string centralXMLList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35081_InsertOwnerAssessedG" +
            "rid", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35081_InsertOwnerAssessedG" +
            "ridResponse")]
        void F35081_InsertOwnerAssessedGrid(string centralXMLItems, int centralId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35081_DeleteOwnerGridDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35081_DeleteOwnerGridDetai" +
            "lsResponse")]
        void F35081_DeleteOwnerGridDetails(string removeXMLItems, int centralId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35085_ImportTypeCombo", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35085_ImportTypeComboRespo" +
            "nse")]
        string F35085_ImportTypeCombo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35085_CentralAssessedImpor" +
            "tDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35085_CentralAssessedImpor" +
            "tDetailsResponse")]
        string F35085_CentralAssessedImportDetails(int importId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35085_DeletetemplateDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35085_DeletetemplateDetail" +
            "sResponse")]
        void F35085_DeletetemplateDetails(int importId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35085_InsertCentralTemplat" +
            "eDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35085_InsertCentralTemplat" +
            "eDetailsResponse")]
        System.Data.DataSet F35085_InsertCentralTemplateDetails(System.Nullable<int> importId, string importXML, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35085_ExecuteImport", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35085_ExecuteImportRespons" +
            "e")]
        string F35085_ExecuteImport(int importId, string importXML, int userId, bool isProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35085_ExecuteCheckForError" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35085_ExecuteCheckForError" +
            "sResponse")]
        void F35085_ExecuteCheckForErrors(int importId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35085_CreateImportRecords", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35085_CreateImportRecordsR" +
            "esponse")]
        string F35085_CreateImportRecords(int importId, int userId, bool isProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16072_GetMiscteplateDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16072_GetMiscteplateDetail" +
            "sResponse")]
        string F16072_GetMiscteplateDetails(int misctemplateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16072_SaveMiscReceiptTempl" +
            "ate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16072_SaveMiscReceiptTempl" +
            "ateResponse")]
        int F16072_SaveMiscReceiptTemplate(System.Nullable<int> misctemplateId, string miscHeaderDetails, string accountDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16072_DeleteMisctemplateDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16072_DeleteMisctemplateDe" +
            "tailsResponse")]
        void F16072_DeleteMisctemplateDetails(int misctemplateId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16072_DeleteMiscGridtempla" +
            "te", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16072_DeleteMiscGridtempla" +
            "teResponse")]
        void F16072_DeleteMiscGridtemplate(int misctemplateId, string miscIds, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16071_GetJournalTeplateDet" +
            "ails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16071_GetJournalTeplateDet" +
            "ailsResponse")]
        string F16071_GetJournalTeplateDetails(int templateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16071_SaveHeaderTemplateDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16071_SaveHeaderTemplateDe" +
            "tailsResponse")]
        int F16071_SaveHeaderTemplateDetails(System.Nullable<int> templateId, int rollYear, string description, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16071_SaveGridTemplateDeta" +
            "ils", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16071_SaveGridTemplateDeta" +
            "ilsResponse")]
        void F16071_SaveGridTemplateDetails(System.Nullable<int> templateId, string gridDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16071_DeleteJournalHeaderD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16071_DeleteJournalHeaderD" +
            "etailsResponse")]
        void F16071_DeleteJournalHeaderDetails(int templateId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16071_DeleteJournalGridDet" +
            "ails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16071_DeleteJournalGridDet" +
            "ailsResponse")]
        void F16071_DeleteJournalGridDetails(int templateId, string gridDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F14062_GridResultDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F14062_GridResultDetailsRes" +
            "ponse")]
        string F14062_GridResultDetails(string ownerIds, string statementIds, string parcelIds, string scheduleIds, string stateIds, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F14062_GetStatementPullList" +
            "Details", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F14062_GetStatementPullList" +
            "DetailsResponse")]
        string F14062_GetStatementPullListDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1407_GetPullListStatus", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1407_GetPullListStatusResp" +
            "onse")]
        string F1407_GetPullListStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1407_GetPullListType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1407_GetPullListTypeRespon" +
            "se")]
        string F1407_GetPullListType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F14062_SaveGridDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F14062_SaveGridDetailsRespo" +
            "nse")]
        void F14062_SaveGridDetails(string pullListItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F14062_DeleteStatementPullL" +
            "ist", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F14062_DeleteStatementPullL" +
            "istResponse")]
        string F14062_DeleteStatementPullList(string pullListItems, int userId, bool isProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F11024_GetMultipleJournalTe" +
            "mplateDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F11024_GetMultipleJournalTe" +
            "mplateDetailsResponse")]
        string F11024_GetMultipleJournalTemplateDetails(int jetTemplateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F11024_SaveMultipleJournalT" +
            "emplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F11024_SaveMultipleJournalT" +
            "emplateResponse")]
        void F11024_SaveMultipleJournalTemplate(string transferDate, int userId, string description, string journalTemplateDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F11024_SearchTemplateDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F11024_SearchTemplateDetail" +
            "sResponse")]
        string F11024_SearchTemplateDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29555_DeedtypeComboBox", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29555_DeedtypeComboBoxResp" +
            "onse")]
        string F29555_DeedtypeComboBox();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29555_SaveTransferOwnershi" +
            "p", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29555_SaveTransferOwnershi" +
            "pResponse")]
        string F29555_SaveTransferOwnership(int eventId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28100_GetBOEDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28100_GetBOEDetailsRespons" +
            "e")]
        string F28100_GetBOEDetails(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28100_GetTotalAmount", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28100_GetTotalAmountRespon" +
            "se")]
        string F28100_GetTotalAmount(int boeId, int eventId, string assessedValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28100_SaveBOEDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28100_SaveBOEDetailsRespon" +
            "se")]
        int F28100_SaveBOEDetails(int eventId, string boeItems, string assessedValues, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28100_DeleteBOEDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28100_DeleteBOEDetailsResp" +
            "onse")]
        void F28100_DeleteBOEDetails(System.Nullable<int> boeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28100_PushBOEDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28100_PushBOEDetailsRespon" +
            "se")]
        void F28100_PushBOEDetails(int boeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28100_GetLocalValues", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28100_GetLocalValuesRespon" +
            "se")]
        string F28100_GetLocalValues(string assessedValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28100_GetCountyValues", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28100_GetCountyValuesRespo" +
            "nse")]
        string F28100_GetCountyValues(bool isLocal, string assessedValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28100_GetStateValues", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28100_GetStateValuesRespon" +
            "se")]
        string F28100_GetStateValues(bool isLocal, bool isCounty, string assessedValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29551_GetParcelSaleComboDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29551_GetParcelSaleComboDe" +
            "tailsResponse")]
        string F29551_GetParcelSaleComboDetails(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29551_GetParcelSaleTrackin" +
            "gDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29551_GetParcelSaleTrackin" +
            "gDetailsResponse")]
        string F29551_GetParcelSaleTrackingDetails(int eventId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29551_GetOwnerDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29551_GetOwnerDetailsRespo" +
            "nse")]
        string F29551_GetOwnerDetails(System.Nullable<int> saleId, System.Nullable<int> ownerId, System.Nullable<int> parcelId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29551_SaveParcelSaleDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29551_SaveParcelSaleDetail" +
            "sResponse")]
        int F29551_SaveParcelSaleDetails(int eventId, string saleItems, string parcelItems, string ownerItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29551_GetParcelOwnerDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29551_GetParcelOwnerDetail" +
            "sResponse")]
        string F29551_GetParcelOwnerDetails(System.Nullable<int> parcelId, string parcelCollection, System.Nullable<int> saleId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29551_CreateSaleVersions", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29551_CreateSaleVersionsRe" +
            "sponse")]
        string F29551_CreateSaleVersions(int eventId, int userId, string checkedParcels);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29551_TransferOwnership", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29551_TransferOwnershipRes" +
            "ponse")]
        string F29551_TransferOwnership(int eventId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29551_UpdateSaleParcel", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29551_UpdateSaleParcelResp" +
            "onse")]
        string F29551_UpdateSaleParcel(int eventId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9045GetConfiguration", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9045GetConfigurationRespon" +
            "se")]
        string F9045GetConfiguration(int genericSearchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9045GetSearchResults", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9045GetSearchResultsRespon" +
            "se")]
        string F9045GetSearchResults(int genericSearchId, string searchString, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3201_GetSketchLinkData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3201_GetSketchLinkDataResp" +
            "onse")]
        string F3201_GetSketchLinkData(int parcelId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3201_SaveSketchLinkData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3201_SaveSketchLinkDataRes" +
            "ponse")]
        string F3201_SaveSketchLinkData(string linkXML, int parcelId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1500_GetSampleFormDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1500_GetSampleFormDetailsR" +
            "esponse")]
        string F1500_GetSampleFormDetails(int FormID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/InsertSampleFormDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/InsertSampleFormDetailsResp" +
            "onse")]
        int InsertSampleFormDetails(int FormID, string SampleFormDetails, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetApplicationId", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetApplicationIdResponse")]
        string GetApplicationId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetMenuIdDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetMenuIdDetailsResponse")]
        string GetMenuIdDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1500_DeleteFormIDDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1500_DeleteFormIDDetailsRe" +
            "sponse")]
        void F1500_DeleteFormIDDetails(int FormID, int GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/InsertFieldUseDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/InsertFieldUseDetailsRespon" +
            "se")]
        int InsertFieldUseDetails(int KeyID, string KeyField, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ClassCode_RGB", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ClassCode_RGBResponse")]
        System.Data.DataSet ClassCode_RGB(string storedProcedureName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/f2200GetFarmExemptAmount", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/f2200GetFarmExemptAmountRes" +
            "ponse")]
        string f2200GetFarmExemptAmount(int scheduleId, bool isFarmExempt, int ExemptRollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35080_CentralAssessedOwner" +
            "Details", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35080_CentralAssessedOwner" +
            "DetailsResponse")]
        string F35080_CentralAssessedOwnerDetails(int CentralId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35080_PropertyClassCombo", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35080_PropertyClassComboRe" +
            "sponse")]
        string F35080_PropertyClassCombo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35080_DeleteOwnerDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35080_DeleteOwnerDetailsRe" +
            "sponse")]
        void F35080_DeleteOwnerDetails(int centralId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35080_InsertOwnerCentralDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35080_InsertOwnerCentralDe" +
            "tailsResponse")]
        int F35080_InsertOwnerCentralDetails(System.Nullable<int> centralId, string centralXML, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35051_GetScheduleLineItemD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35051_GetScheduleLineItemD" +
            "etailsResponse")]
        string F35051_GetScheduleLineItemDetails(int scheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35051_SaveScheduleLineItem" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35051_SaveScheduleLineItem" +
            "Response")]
        int F35051_SaveScheduleLineItem(int scheduleId, string scheduleItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35051_DeleteScheduleLineIt" +
            "em", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35051_DeleteScheduleLineIt" +
            "emResponse")]
        int F35051_DeleteScheduleLineItem(int scheduleId, string scheduleItemIds, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35051_GetDeprPercentage", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35051_GetDeprPercentageRes" +
            "ponse")]
        string F35051_GetDeprPercentage(short rollYear, int deprTableId, short year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetPropertyHeaderDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetPropertyHeaderDetailsRes" +
            "ponse")]
        string GetPropertyHeaderDetails(int scheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36065_CheckDeprRollYear", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36065_CheckDeprRollYearRes" +
            "ponse")]
        int F36065_CheckDeprRollYear(System.Nullable<int> deprYearId, int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36065_GetDeprDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36065_GetDeprDetailsRespon" +
            "se")]
        string F36065_GetDeprDetails(int deprYearId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36065_SaveDepreciation", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36065_SaveDepreciationResp" +
            "onse")]
        int F36065_SaveDepreciation(System.Nullable<int> deprYearId, string deprYearItems, string depreciationItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36065_DeleteDepreciattion", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36065_DeleteDepreciattionR" +
            "esponse")]
        void F36065_DeleteDepreciattion(System.Nullable<int> deprYearId, string depreciationItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15020_GetReceiptTypes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15020_GetReceiptTypesRespo" +
            "nse")]
        string F15020_GetReceiptTypes(int userId, short formId, int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1504_GetCopyAccountSubFund" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1504_GetCopyAccountSubFund" +
            "Response")]
        string F1504_GetCopyAccountSubFund();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1504_GetAccountDetail", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1504_GetAccountDetailRespo" +
            "nse")]
        string F1504_GetAccountDetail(int accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1504_SaveCopyAccountDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1504_SaveCopyAccountDetail" +
            "sResponse")]
        string F1504_SaveCopyAccountDetails(int rollYear, string subFund, string description, string function, string bars, string accObject, string line, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F32012_GetCatalogData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F32012_GetCatalogDataRespon" +
            "se")]
        string F32012_GetCatalogData(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F32012_SaveCatalog", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F32012_SaveCatalogResponse")]
        System.Data.DataSet F32012_SaveCatalog(int objectId, string catalogData, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3205pcgetSketchFilePath", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3205pcgetSketchFilePathRes" +
            "ponse")]
        string F3205pcgetSketchFilePath(int parcelId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3205pcgetSketchLinksExist", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3205pcgetSketchLinksExistR" +
            "esponse")]
        string F3205pcgetSketchLinksExist(int parcelId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3205pcinsSketchImage", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3205pcinsSketchImageRespon" +
            "se")]
        string F3205pcinsSketchImage(int parcelId, int userId, int pageCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveApexSketch", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveApexSketchResponse")]
        void SaveApexSketch(string SketchDataXML, int parcelId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3205_pcexeReCalcValues", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3205_pcexeReCalcValuesResp" +
            "onse")]
        string F3205_pcexeReCalcValues(int userId, int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1403_GetParcelType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1403_GetParcelTypeResponse" +
            "")]
        string F1403_GetParcelType(System.Nullable<int> parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1403_GetSearchResult", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1403_GetSearchResultRespon" +
            "se")]
        string F1403_GetSearchResult(string parcelSearchXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1403_GetSaleTrackingRollYe" +
            "ar", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1403_GetSaleTrackingRollYe" +
            "arResponse")]
        string F1403_GetSaleTrackingRollYear(int eventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1404_ListScheduleSearch", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1404_ListScheduleSearchRes" +
            "ponse")]
        string F1404_ListScheduleSearch(string ScheduleConditionXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1404_GetScheduleType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1404_GetScheduleTypeRespon" +
            "se")]
        string F1404_GetScheduleType(System.Nullable<int> scheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1404_GetScheduleTrackingRo" +
            "llYear", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1404_GetScheduleTrackingRo" +
            "llYearResponse")]
        string F1404_GetScheduleTrackingRollYear(int eventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1405_ListStateSearch", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1405_ListStateSearchRespon" +
            "se")]
        string F1405_ListStateSearch(string StateConditionXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28000_GetDiscretionaryDeta" +
            "ils", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28000_GetDiscretionaryDeta" +
            "ilsResponse")]
        string F28000_GetDiscretionaryDetails(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28000_GetClass", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28000_GetClassResponse")]
        string F28000_GetClass(int stateId, int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28000_GetExemptionAmount", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28000_GetExemptionAmountRe" +
            "sponse")]
        string F28000_GetExemptionAmount(int rollYear, int exemptionYear, decimal subjectAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28000_SaveDiscretionaryDet" +
            "ail", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28000_SaveDiscretionaryDet" +
            "ailResponse")]
        int F28000_SaveDiscretionaryDetail(int eventId, System.Nullable<int> discretionaryId, string discretionaryItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F28000_DeletediscretionaryD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F28000_DeletediscretionaryD" +
            "etailsResponse")]
        void F28000_DeletediscretionaryDetails(System.Nullable<int> discretionaryId, string discretionaryItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9025FormValidationDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9025FormValidationDetailsR" +
            "esponse")]
        int F9025FormValidationDetails(int formid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9025SaveValidationDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9025SaveValidationDetailsR" +
            "esponse")]
        int F9025SaveValidationDetails(int formid, int userid, int keyid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F81004_GetSelectionDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F81004_GetSelectionDetailsR" +
            "esponse")]
        string F81004_GetSelectionDetails(int eventId, int form);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F81004_GetSelectionCatalogD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F81004_GetSelectionCatalogD" +
            "etailsResponse")]
        string F81004_GetSelectionCatalogDetails(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F81004_SaveSelectionItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F81004_SaveSelectionItemsRe" +
            "sponse")]
        int F81004_SaveSelectionItems(int eventId, string selectionItemsXml, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetFrozenValue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetFrozenValueResponse")]
        string GetFrozenValue(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveFrozenDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveFrozenDetailsResponse")]
        void SaveFrozenDetails(string frozenElements, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteFrozenDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteFrozenDetailsResponse" +
            "")]
        void DeleteFrozenDetails(int eventId, int frozenId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetExemptionType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetExemptionTypeResponse")]
        string GetExemptionType(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetExemptionDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetExemptionDetailsResponse" +
            "")]
        string GetExemptionDetails(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetExemptionLoss", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetExemptionLossResponse")]
        decimal GetExemptionLoss(decimal lossValue, decimal maxValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveExemptionDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveExemptionDetailsRespons" +
            "e")]
        void SaveExemptionDetails(string exemptionElements, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteExemptionDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteExemptionDetailsRespo" +
            "nse")]
        void DeleteExemptionDetails(int eventId, int exemptionEventId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetScheduleItemCodes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetScheduleItemCodesRespons" +
            "e")]
        string GetScheduleItemCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveScheduleItemCodes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveScheduleItemCodesRespon" +
            "se")]
        void SaveScheduleItemCodes(string scheduleCodeElements, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteScheduleItemCodes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteScheduleItemCodesResp" +
            "onse")]
        void DeleteScheduleItemCodes(string itemCodeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/WCFTriggerTestMethod", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/WCFTriggerTestMethodRespons" +
            "e")]
        string WCFTriggerTestMethod();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2409_ReviewstatusInspectio" +
            "nType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2409_ReviewstatusInspectio" +
            "nTypeResponse")]
        string F2409_ReviewstatusInspectionType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2409_Reviewstatus", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2409_ReviewstatusResponse")]
        string F2409_Reviewstatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2409_ReviewstatusInspectio" +
            "nByUser", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2409_ReviewstatusInspectio" +
            "nByUserResponse")]
        string F2409_ReviewstatusInspectionByUser(int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2409_ListReviewstatus", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2409_ListReviewstatusRespo" +
            "nse")]
        string F2409_ListReviewstatus(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2409UpdateParcelReviewDeta" +
            "ils", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2409UpdateParcelReviewDeta" +
            "ilsResponse")]
        void F2409UpdateParcelReviewDetails(string reviewXML, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2205CreateSchedule", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2205CreateScheduleResponse" +
            "")]
        int F2205CreateSchedule(System.Nullable<int> scheduleId, bool isNewSchedule, string scheduleHeaderItems, string scheduleItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35055_GetPPLineItemsDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35055_GetPPLineItemsDetail" +
            "sResponse")]
        string F35055_GetPPLineItemsDetails(int scheduleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35055_GetValueCalculation", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35055_GetValueCalculationR" +
            "esponse")]
        string F35055_GetValueCalculation(int scheduleId, int ppDeprTableId, long originalValue, int trend, short year, short rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35055_SaveScheduleLineItem" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35055_SaveScheduleLineItem" +
            "Response")]
        int F35055_SaveScheduleLineItem(int scheduleId, string scheduleItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35055_UpdateScheduleLineIt" +
            "em", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35055_UpdateScheduleLineIt" +
            "emResponse")]
        int F35055_UpdateScheduleLineItem(int scheduleId, string scheduleItems, int userId, short rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35055_DeleteScheduleLineIt" +
            "em", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35055_DeleteScheduleLineIt" +
            "emResponse")]
        int F35055_DeleteScheduleLineItem(int scheduleId, string scheduleItemIds, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/CheckTrendRollYear", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/CheckTrendRollYearResponse")]
        int CheckTrendRollYear(System.Nullable<int> trendYearId, int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetTrendDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetTrendDetailsResponse")]
        string GetTrendDetails(int trendYearId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveTrend", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveTrendResponse")]
        int SaveTrend(System.Nullable<int> trendYearId, string trendYearItems, string trendItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteTrend", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteTrendResponse")]
        void DeleteTrend(System.Nullable<int> trendYearId, string trendItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2204CreateNewScheduleCopy", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2204CreateNewScheduleCopyR" +
            "esponse")]
        int F2204CreateNewScheduleCopy(int scheduleId, string scheduleItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29630GetBoardOfEqualizatio" +
            "nDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29630GetBoardOfEqualizatio" +
            "nDetailsResponse")]
        string F29630GetBoardOfEqualizationDetails(int boeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29630SaveBoardOfEqualizati" +
            "onDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29630SaveBoardOfEqualizati" +
            "onDetailsResponse")]
        void F29630SaveBoardOfEqualizationDetails(string boeElements, string boeValues, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29630DeleteBoardOfEqualiza" +
            "tionDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29630DeleteBoardOfEqualiza" +
            "tionDetailsResponse")]
        void F29630DeleteBoardOfEqualizationDetails(int boeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29630PushBoardOfEqualizati" +
            "onDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29630PushBoardOfEqualizati" +
            "onDetailsResponse")]
        void F29630PushBoardOfEqualizationDetails(int boeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9041GetQueryDescription", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9041GetQueryDescriptionRes" +
            "ponse")]
        string F9041GetQueryDescription(int queryViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F82006_GetContractorList", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F82006_GetContractorListRes" +
            "ponse")]
        string F82006_GetContractorList(int contractorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F82006_SaveContractorList", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F82006_SaveContractorListRe" +
            "sponse")]
        int F82006_SaveContractorList(System.Nullable<int> contractorId, string contractorXml, string contractorEmployeeXml, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F82006_DeleteContractorList" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F82006_DeleteContractorList" +
            "Response")]
        void F82006_DeleteContractorList(int contractorId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F82006_DeleteContractorEmpl" +
            "oyee", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F82006_DeleteContractorEmpl" +
            "oyeeResponse")]
        void F82006_DeleteContractorEmployee(int contractorId, int employeeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9042_GetTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9042_GetTemplateResponse")]
        string F9042_GetTemplate(int templateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9042_ListTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9042_ListTemplateResponse")]
        string F9042_ListTemplate(string queryView);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetSnapshotDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetSnapshotDetailsResponse")]
        string GetSnapshotDetails(int FormNum, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetSnapshotOperationCount", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetSnapshotOperationCountRe" +
            "sponse")]
        string GetSnapshotOperationCount(int OperationId, int LOSnapshotId, int ROSnapshotId, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/insertSnapshotDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/insertSnapshotDetailsRespon" +
            "se")]
        void insertSnapshotDetails(int OperationId, int LOSnapshotId, int ROSnapshotId, int RecordCount, string NewSnapshotName, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F81003_GetSelectionCatalogD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F81003_GetSelectionCatalogD" +
            "etailsResponse")]
        string F81003_GetSelectionCatalogDetails(int catalogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F81003_ListSelectionCategor" +
            "y", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F81003_ListSelectionCategor" +
            "yResponse")]
        string F81003_ListSelectionCategory(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F81003_SaveSelectionCatalog" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F81003_SaveSelectionCatalog" +
            "Response")]
        int F81003_SaveSelectionCatalog(System.Nullable<int> catalogId, string selectionItemsXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F81003_DeleteSelectionCatal" +
            "og", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F81003_DeleteSelectionCatal" +
            "ogResponse")]
        void F81003_DeleteSelectionCatalog(int catalogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9510GetWebFormXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9510GetWebFormXMLResponse")]
        string F9510GetWebFormXML(int form, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9075_ListTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9075_ListTemplateResponse")]
        string F9075_ListTemplate(int form, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9075_DeleteCommentIds", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9075_DeleteCommentIdsRespo" +
            "nse")]
        void F9075_DeleteCommentIds(string commentIds, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9076_getTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9076_getTemplateResponse")]
        string F9076_getTemplate(int templateid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9076SaveNewCommentTemplate" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9076SaveNewCommentTemplate" +
            "Response")]
        int F9076SaveNewCommentTemplate(System.Nullable<int> templateId, string commentItemsXml, int isOverwrite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9076_DeleteNewCommentTempl" +
            "ate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9076_DeleteNewCommentTempl" +
            "ateResponse")]
        void F9076_DeleteNewCommentTemplate(int templateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F429505_ListAllComoboxes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F429505_ListAllComoboxesRes" +
            "ponse")]
        string F429505_ListAllComoboxes(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListLandCodes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListLandCodesResponse")]
        string ListLandCodes(int nbhdid, int rollyear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29505_GetBaseParcelValue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29505_GetBaseParcelValueRe" +
            "sponse")]
        string F29505_GetBaseParcelValue(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29505_CreateParcel", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29505_CreateParcelResponse" +
            "")]
        string F29505_CreateParcel(int makeSubId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29505_SaveDivisionParcels", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29505_SaveDivisionParcelsR" +
            "esponse")]
        int F29505_SaveDivisionParcels(int eventId, string makeSubItemsXml, string makeSubParcelsXml, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29505_SaveSubDivision", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29505_SaveSubDivisionRespo" +
            "nse")]
        int F29505_SaveSubDivision(int makeSubID, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29505_GetLandCode", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29505_GetLandCodeResponse")]
        string F29505_GetLandCode(int landType1, int landType2, int landType3, int nbhdid, int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27010GetDistrict", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27010GetDistrictResponse")]
        string F27010GetDistrict(int parcelId, int madTypeId, int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27010CheckDefaultDistrict", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27010CheckDefaultDistrictR" +
            "esponse")]
        int F27010CheckDefaultDistrict(int parcelId, int madTypeId, int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27010GetMessage", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27010GetMessageResponse")]
        string F27010GetMessage(int parcelId, int madTypeId, int madDistrictId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27010GetMiscData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27010GetMiscDataResponse")]
        string F27010GetMiscData(int madDistrictId, int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27010GetOthersMiscData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27010GetOthersMiscDataResp" +
            "onse")]
        string F27010GetOthersMiscData(int madDistrictId, int parcelId, string procedureName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27010GetDefaultMiscData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27010GetDefaultMiscDataRes" +
            "ponse")]
        string F27010GetDefaultMiscData(int parcelId, int madTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27010_SaveMiscAssessment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27010_SaveMiscAssessmentRe" +
            "sponse")]
        int F27010_SaveMiscAssessment(int parcelId, string miscType, string madItem, string miscItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84401_GetSignsProperties", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84401_GetSignsPropertiesRe" +
            "sponse")]
        string F84401_GetSignsProperties(int featureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84401_SaveSignsProperties", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84401_SaveSignsPropertiesR" +
            "esponse")]
        int F84401_SaveSignsProperties(int featureId, string signsProperties, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84401_DeleteSignsPropertie" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84401_DeleteSignsPropertie" +
            "sResponse")]
        void F84401_DeleteSignsProperties(int featureId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29531AssociationLinkType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29531AssociationLinkTypeRe" +
            "sponse")]
        string F29531AssociationLinkType(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29531_FillAssociationLinkG" +
            "rid", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29531_FillAssociationLinkG" +
            "ridResponse")]
        string F29531_FillAssociationLinkGrid(int keyid, int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29531_SaveAssociationLink", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29531_SaveAssociationLinkR" +
            "esponse")]
        int F29531_SaveAssociationLink(int associationid, string associationLinkItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/UpdateAssociationLinkDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/UpdateAssociationLinkDetail" +
            "sResponse")]
        void UpdateAssociationLinkDetails(string associationDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29531_GetLinkText", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29531_GetLinkTextResponse")]
        string F29531_GetLinkText(int cfgid, int keyid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29531_DeleteAssociationLin" +
            "k", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29531_DeleteAssociationLin" +
            "kResponse")]
        void F29531_DeleteAssociationLink(int associationId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29610_GetHoHExemptionDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29610_GetHoHExemptionDetai" +
            "lsResponse")]
        string F29610_GetHoHExemptionDetails(int eventid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29610_GetCalculationOfHoH", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29610_GetCalculationOfHoHR" +
            "esponse")]
        string F29610_GetCalculationOfHoH(int scheduleid, int exemptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29610_GetOwnerPercent", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29610_GetOwnerPercentRespo" +
            "nse")]
        string F29610_GetOwnerPercent(int ownerId, int scheduleid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29610_SaveHoHExemptionDeta" +
            "ils", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29610_SaveHoHExemptionDeta" +
            "ilsResponse")]
        int F29610_SaveHoHExemptionDetails(int eventId, string HoHItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9610QuickFind", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9610QuickFindResponse")]
        string F9610QuickFind(int form, string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9110GetMasterNameSearch", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9110GetMasterNameSearchRes" +
            "ponse")]
        string F9110GetMasterNameSearch(string lastName, string firstName, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1411ParcelStatementSearch", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1411ParcelStatementSearchR" +
            "esponse")]
        string F1411ParcelStatementSearch(string searchNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29620_GetAglandApplication" +
            "Details", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29620_GetAglandApplication" +
            "DetailsResponse")]
        string F29620_GetAglandApplicationDetails(int eventid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29620_SaveAglandApplicatio" +
            "nDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29620_SaveAglandApplicatio" +
            "nDetailsResponse")]
        int F29620_SaveAglandApplicationDetails(int eventId, int ownerId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35075_GetStateAssessedOwne" +
            "rDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35075_GetStateAssessedOwne" +
            "rDetailsResponse")]
        string F35075_GetStateAssessedOwnerDetails(int stateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35075_SaveStateAssessedOwn" +
            "er", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35075_SaveStateAssessedOwn" +
            "erResponse")]
        int F35075_SaveStateAssessedOwner(System.Nullable<int> stateId, string assessedItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35076_SaveStateAssessedGri" +
            "d", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35076_SaveStateAssessedGri" +
            "dResponse")]
        int F35076_SaveStateAssessedGrid(System.Nullable<int> stateId, string codeItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35075_DeleteStateAssessed", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35075_DeleteStateAssessedR" +
            "esponse")]
        int F35075_DeleteStateAssessed(int stateId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35076_DeleteStateAssessedD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35076_DeleteStateAssessedD" +
            "etailsResponse")]
        int F35076_DeleteStateAssessedDetails(int stateIemId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25050GetParcelTypeDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25050GetParcelTypeDetailsR" +
            "esponse")]
        string F25050GetParcelTypeDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25050GetScheduleTypeDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25050GetScheduleTypeDetail" +
            "sResponse")]
        string F25050GetScheduleTypeDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetPenaltyPercent", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetPenaltyPercentResponse")]
        decimal GetPenaltyPercent(string filingDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2200_GetFarmExemptAmount", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2200_GetFarmExemptAmountRe" +
            "sponse")]
        decimal F2200_GetFarmExemptAmount(int scheduleId, bool isFarmExempt, int ExemptRollYear, bool isEx259, decimal ex259Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2200_Get259ExemptionAmount" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2200_Get259ExemptionAmount" +
            "Response")]
        string F2200_Get259ExemptionAmount(int scheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49920_ListInstrumentLoad", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49920_ListInstrumentLoadRe" +
            "sponse")]
        string F49920_ListInstrumentLoad();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49920_ListInstrumentSearch" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49920_ListInstrumentSearch" +
            "Response")]
        string F49920_ListInstrumentSearch(string instrumentcondition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49911_ListPartiesField", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49911_ListPartiesFieldResp" +
            "onse")]
        string F49911_ListPartiesField();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49911_InsertPartiesFieldDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49911_InsertPartiesFieldDe" +
            "tailsResponse")]
        int F49911_InsertPartiesFieldDetails(int instid, string grantorItems, string granteeItems, int userId, int isCopy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49912_ListLegalField", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49912_ListLegalFieldRespon" +
            "se")]
        string F49912_ListLegalField(int instID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49912_InsertLegalFieldDeta" +
            "ils", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49912_InsertLegalFieldDeta" +
            "ilsResponse")]
        int F49912_InsertLegalFieldDetails(int instid, string legalItems, int userId, int isCopy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49912_ListSubDivisionCombo" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49912_ListSubDivisionCombo" +
            "Response")]
        string F49912_ListSubDivisionCombo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36061_ListDepr", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36061_ListDeprResponse")]
        string F36061_ListDepr(int nbhdId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36061_ListDeprControlItems" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36061_ListDeprControlItems" +
            "Response")]
        string F36061_ListDeprControlItems(int nbhdId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36061_SaveDeprControlItems" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36061_SaveDeprControlItems" +
            "Response")]
        int F36061_SaveDeprControlItems(System.Nullable<int> nbhdId, string deprControlItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36062_LandInfluenceItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36062_LandInfluenceItemsRe" +
            "sponse")]
        string F36062_LandInfluenceItems(int nbhdId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36062_SaveInfluenceControl" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36062_SaveInfluenceControl" +
            "Response")]
        int F36062_SaveInfluenceControl(System.Nullable<int> nbhdId, string InfluenceItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35050_GetScheduleLineItemD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35050_GetScheduleLineItemD" +
            "etailsResponse")]
        string F35050_GetScheduleLineItemDetails(int scheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35050_GetScheduleItem", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35050_GetScheduleItemRespo" +
            "nse")]
        string F35050_GetScheduleItem();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35050_GetListTableDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35050_GetListTableDetailsR" +
            "esponse")]
        string F35050_GetListTableDetails(int itemcategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35050_GetListOutTableDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35050_GetListOutTableDetai" +
            "lsResponse")]
        string F35050_GetListOutTableDetails(int ScheduleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35050_GetScheduleCategory", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35050_GetScheduleCategoryR" +
            "esponse")]
        string F35050_GetScheduleCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35050_SaveScheduleLineItem" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35050_SaveScheduleLineItem" +
            "Response")]
        int F35050_SaveScheduleLineItem(int scheduleId, string scheduleItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35050_CalculateAmount", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35050_CalculateAmountRespo" +
            "nse")]
        string F35050_CalculateAmount(int ScheduleItemID, int Rollyear, int Year, int DeprDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35050_GetDepreciationValue" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35050_GetDepreciationValue" +
            "Response")]
        string F35050_GetDepreciationValue(int scheduleId, int recv, int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35050_DeleteScheduleLineIt" +
            "em", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35050_DeleteScheduleLineIt" +
            "emResponse")]
        int F35050_DeleteScheduleLineItem(int scheduleLineId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35050_GetDeprPercentage", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35050_GetDeprPercentageRes" +
            "ponse")]
        string F35050_GetDeprPercentage(int rollyear, int deprtableID, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1402_ListScheduleSearch", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1402_ListScheduleSearchRes" +
            "ponse")]
        string F1402_ListScheduleSearch(string ScheduleConditionXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListQueryEngineGridFunction" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListQueryEngineGridFunction" +
            "Response")]
        System.Data.DataSet ListQueryEngineGridFunction(int queryViewId, string filterValue, string sortOrder, string summaryValue, string columnValue, string keyIdCollection, string isFilter, string maxRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListQueryEngineGridSnapshot" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListQueryEngineGridSnapshot" +
            "Response")]
        System.Data.DataSet ListQueryEngineGridSnapshot(int snapShotId, int queryViewId, string filterValue, string sortOrder, string summaryValue, string columnValue, string keyIdCollection, int isFilter, string maxRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListColumns", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListColumnsResponse")]
        System.Data.DataSet ListColumns(int queryViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27010GetRollYear", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27010GetRollYearResponse")]
        int F27010GetRollYear(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27010GetAssessmentType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27010GetAssessmentTypeResp" +
            "onse")]
        string F27010GetAssessmentType(int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3510_ListNeighborhoodType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3510_ListNeighborhoodTypeR" +
            "esponse")]
        string F3510_ListNeighborhoodType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3510_ListNeighborhoodSelec" +
            "tion", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3510_ListNeighborhoodSelec" +
            "tionResponse")]
        string F3510_ListNeighborhoodSelection(string neighborhood, string childof, string rollyear, string type, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2010_ListStateCodeSelectio" +
            "n", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2010_ListStateCodeSelectio" +
            "nResponse")]
        string F2010_ListStateCodeSelection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9066_SaveData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9066_SaveDataResponse")]
        void F9066_SaveData(string insertValue, string updateValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1430_GetCalculatorDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1430_GetCalculatorDetailsR" +
            "esponse")]
        string F1430_GetCalculatorDetails(int statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1430_GetInterestDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1430_GetInterestDetailsRes" +
            "ponse")]
        string F1430_GetInterestDetails(int statementId, System.DateTime interestDate, decimal taxAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1440_SaveRecieptinSnapShot" +
            "BatchButtonControl", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1440_SaveRecieptinSnapShot" +
            "BatchButtonControlResponse")]
        int F1440_SaveRecieptinSnapShotBatchButtonControl(int snapshotId, System.Nullable<int> receiptId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F82001_GetBuildingPermitDet" +
            "ails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F82001_GetBuildingPermitDet" +
            "ailsResponse")]
        string F82001_GetBuildingPermitDetails(int eventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F82001_InsertBuildingPermit" +
            "Details", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F82001_InsertBuildingPermit" +
            "DetailsResponse")]
        int F82001_InsertBuildingPermitDetails(int permitId, string buildingPermitItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F82002_ListContractorManage" +
            "mentData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F82002_ListContractorManage" +
            "mentDataResponse")]
        string F82002_ListContractorManagementData(System.Nullable<int> iContractorID, string ContractorXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F82002_DeleteContractorMana" +
            "gement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F82002_DeleteContractorMana" +
            "gementResponse")]
        void F82002_DeleteContractorManagement(int contractorId, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F82002_InsertBuildingPermit" +
            "Details", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F82002_InsertBuildingPermit" +
            "DetailsResponse")]
        int F82002_InsertBuildingPermitDetails(System.Nullable<int> ContractorID, string ContractorItems, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36060_GetDepreciationTable" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36060_GetDepreciationTable" +
            "sResponse")]
        string F36060_GetDepreciationTables(int deprTableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36060_SaveDepreciationTabl" +
            "es", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36060_SaveDepreciationTabl" +
            "esResponse")]
        int F36060_SaveDepreciationTables(int deprTableId, string deprecationItem, string otherDeprItem, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36060_DeleteDepreciationTa" +
            "bles", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36060_DeleteDepreciationTa" +
            "blesResponse")]
        void F36060_DeleteDepreciationTables(int deprTableId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49910_GetInstrumentHeaderD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49910_GetInstrumentHeaderD" +
            "etailsResponse")]
        string F49910_GetInstrumentHeaderDetails(int instId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49910_GetInstrumentTypeDet" +
            "ails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49910_GetInstrumentTypeDet" +
            "ailsResponse")]
        string F49910_GetInstrumentTypeDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49910_SaveInstrumentHeader" +
            "Details", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49910_SaveInstrumentHeader" +
            "DetailsResponse")]
        int F49910_SaveInstrumentHeaderDetails(int instId, string instrumentItems, string paymentItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49910CheckInstrumentHeader" +
            "Details", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49910CheckInstrumentHeader" +
            "DetailsResponse")]
        int F49910CheckInstrumentHeaderDetails(int instId, string instrumentItems, string paymentItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49910_DeleteInstrumentHead" +
            "er", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49910_DeleteInstrumentHead" +
            "erResponse")]
        int F49910_DeleteInstrumentHeader(int instId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49910_CopyInstrumentHeader" +
            "Details", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49910_CopyInstrumentHeader" +
            "DetailsResponse")]
        string F49910_CopyInstrumentHeaderDetails(int instrumentId, int instrumentValue, int grantorValue, int granteeValue, int legalValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49910_GetGranterAddressDet" +
            "ails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49910_GetGranterAddressDet" +
            "ailsResponse")]
        string F49910_GetGranterAddressDetails(int grantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F49910_GetFeeDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F49910_GetFeeDetailsRespons" +
            "e")]
        string F49910_GetFeeDetails(int insTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2200_ListEditScheduleDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2200_ListEditScheduleDetai" +
            "lsResponse")]
        string F2200_ListEditScheduleDetails(int SheduleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25050_GetScheduleDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25050_GetScheduleDetailsRe" +
            "sponse")]
        string F25050_GetScheduleDetails(int ScheduleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2005_GetValidUser", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2005_GetValidUserResponse")]
        int F2005_GetValidUser(int scheduleId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2005_UpdateParcelLockDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2005_UpdateParcelLockDetai" +
            "lsResponse")]
        int F2005_UpdateParcelLockDetails(int scheduleId, int lockValue, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2005_GetScheduleUserName", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2005_GetScheduleUserNameRe" +
            "sponse")]
        string F2005_GetScheduleUserName(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2200_InsertEditSchedule", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2200_InsertEditScheduleRes" +
            "ponse")]
        string F2200_InsertEditSchedule(System.Nullable<int> ScheduleID, string ScheduleItems, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2200_UpdateEditSchedule", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2200_UpdateEditScheduleRes" +
            "ponse")]
        int F2200_UpdateEditSchedule(int ScheduleID, string ScheduleItems, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2200_DeleteEditSchedule", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2200_DeleteEditScheduleRes" +
            "ponse")]
        int F2200_DeleteEditSchedule(int ScheduleID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2200_GetAssessmentTypeDeta" +
            "ils", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2200_GetAssessmentTypeDeta" +
            "ilsResponse")]
        string F2200_GetAssessmentTypeDetails(string assessmentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25000_ChkOutType2XML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25000_ChkOutType2XMLRespon" +
            "se")]
        TerraScan.BusinessEntities.F25000FieldUseData F25000_ChkOutType2XML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutNBHDXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutNBHDXMLResponse" +
            "")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutNBHDXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutMiscXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutMiscXMLResponse" +
            "")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutMiscXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutUserXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutUserXMLResponse" +
            "")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutUserXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutEventXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutEventXMLRespons" +
            "e")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutEventXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutParcelXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutParcelXMLRespon" +
            "se")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutParcelXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutOwnerXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutOwnerXMLRespons" +
            "e")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutOwnerXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230ChkOutDeprMiscXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230ChkOutDeprMiscXMLRespo" +
            "nse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230ChkOutDeprMiscXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230ChkOutDeprXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230ChkOutDeprXMLResponse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230ChkOutDeprXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutEstimateCompXML" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutEstimateCompXML" +
            "Response")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutEstimateCompXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutVSTGCitemXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutVSTGCitemXMLRes" +
            "ponse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutVSTGCitemXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutMSCEstimateXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutMSCEstimateXMLR" +
            "esponse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutMSCEstimateXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutEstimateResultX" +
            "ML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutEstimateResultX" +
            "MLResponse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutEstimateResultXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutMSCEstimateOccu" +
            "pancyXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutMSCEstimateOccu" +
            "pancyXMLResponse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutMSCEstimateOccupancyXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutEstimateBuildin" +
            "gXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutEstimateBuildin" +
            "gXMLResponse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutEstimateBuildingXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutLandValuesXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutLandValuesXMLRe" +
            "sponse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutLandValuesXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutTerraGonXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutTerraGonXMLResp" +
            "onse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutTerraGonXML(int snapShotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutEstimateCompone" +
            "ntXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutEstimateCompone" +
            "ntXMLResponse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutEstimateComponentXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutCommentXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutCommentXMLRespo" +
            "nse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutCommentXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutVSTGComponentXM" +
            "L", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutVSTGComponentXM" +
            "LResponse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutVSTGComponentXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutFileXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutFileXMLResponse" +
            "")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutFileXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutVSTGGonBldgXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutVSTGGonBldgXMLR" +
            "esponse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutVSTGGonBldgXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ListLockedParcelID", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ListLockedParcelIDRes" +
            "ponse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ListLockedParcelID(out int RowendValue, System.Nullable<int> SnapShotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_LockParcelID", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_LockParcelIDResponse")]
        int F3230_LockParcelID(System.Nullable<int> SnapShotID, System.Nullable<int> LockAdminBy, System.Nullable<int> UserID, string UnlockParcelXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_InsertChkInXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_InsertChkInXMLRespons" +
            "e")]
        int F3230_InsertChkInXML(string xmlInsContent, string tableXml, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_InsertAddedRecordXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_InsertAddedRecordXMLR" +
            "esponse")]
        int F3230_InsertAddedRecordXML(string xmlInsContent, string tableXml, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_InsertChkOutXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_InsertChkOutXMLRespon" +
            "se")]
        int F3230_InsertChkOutXML(string xmlInsContent, string tableXml, int userId, bool IsDelete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3200_GetSketchData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3200_GetSketchDataResponse" +
            "")]
        string F3200_GetSketchData(int objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3200_GetStyleList", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3200_GetStyleListResponse")]
        string F3200_GetStyleList(int objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3200_SaveSketchData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3200_SaveSketchDataRespons" +
            "e")]
        System.Data.DataSet F3200_SaveSketchData(int objectId, string sketchData, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3200_CheckSmartPart", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3200_CheckSmartPartRespons" +
            "e")]
        int F3200_CheckSmartPart(int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetWebFormXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetWebFormXMLResponse")]
        string GetWebFormXML(System.Nullable<int> keyId, int form, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9065_GetPreviewDetail", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9065_GetPreviewDetailRespo" +
            "nse")]
        string F9065_GetPreviewDetail(int snapShotId, string snapShotDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9065_InsertApplicationConf" +
            "iguration", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9065_InsertApplicationConf" +
            "igurationResponse")]
        int F9065_InsertApplicationConfiguration(string configXml, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9065_GetcfgConfiguration", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9065_GetcfgConfigurationRe" +
            "sponse")]
        string F9065_GetcfgConfiguration(string cfgname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_UpdateApplicationStat" +
            "us", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_UpdateApplicationStat" +
            "usResponse")]
        int F3230_UpdateApplicationStatus(bool isCheckedOut, bool isOnline, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_GetSnapshotDetail", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_GetSnapshotDetailResp" +
            "onse")]
        string F3230_GetSnapshotDetail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_DeleteCheckOutTable", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_DeleteCheckOutTableRe" +
            "sponse")]
        int F3230_DeleteCheckOutTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_InsertFieldElement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_InsertFieldElementRes" +
            "ponse")]
        int F3230_InsertFieldElement(string fieldElement, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_GetPreviewDetail", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_GetPreviewDetailRespo" +
            "nse")]
        string F3230_GetPreviewDetail(int snapShotId, string snapShotDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_InsertApplicationConf" +
            "iguration", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_InsertApplicationConf" +
            "igurationResponse")]
        int F3230_InsertApplicationConfiguration(string configXml, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_GetcfgConfiguration", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_GetcfgConfigurationRe" +
            "sponse")]
        string F3230_GetcfgConfiguration(string cfgname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_AddValues", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_AddValuesResponse")]
        int F3230_AddValues(int KeyID, string KeyName, int Form, System.Nullable<int> ModuleID, int InsertedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutConfigXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutConfigXMLRespon" +
            "se")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutConfigXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutCommonXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutCommonXMLRespon" +
            "se")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutCommonXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/f3230_ChkOutCorrectionXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/f3230_ChkOutCorrectionXMLRe" +
            "sponse")]
        TerraScan.BusinessEntities.F3230FieldUseData f3230_ChkOutCorrectionXML(int snapShotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/f3230_ChkOutSaleXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/f3230_ChkOutSaleXMLResponse" +
            "")]
        TerraScan.BusinessEntities.F3230FieldUseData f3230_ChkOutSaleXML(int snapShotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/f3230_ChkOutReceiptXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/f3230_ChkOutReceiptXMLRespo" +
            "nse")]
        TerraScan.BusinessEntities.F3230FieldUseData f3230_ChkOutReceiptXML(int snapShotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/f3230_ChkOutStatementXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/f3230_ChkOutStatementXMLRes" +
            "ponse")]
        TerraScan.BusinessEntities.F3230FieldUseData f3230_ChkOutStatementXML(int snapShotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutFormXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutFormXMLResponse" +
            "")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutFormXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230GetApexFilePath", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230GetApexFilePathRespons" +
            "e")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230GetApexFilePath(int snapShotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutDistrictXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutDistrictXMLResp" +
            "onse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutDistrictXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutLegalXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutLegalXMLRespons" +
            "e")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutLegalXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutMisc_CatalogXML" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutMisc_CatalogXML" +
            "Response")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutMisc_CatalogXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutMiscTableXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutMiscTableXMLRes" +
            "ponse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutMiscTableXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutMOwnerXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutMOwnerXMLRespon" +
            "se")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutMOwnerXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutObjectXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutObjectXMLRespon" +
            "se")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutObjectXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutValueSliceXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutValueSliceXMLRe" +
            "sponse")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutValueSliceXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25000_ChkOutLandXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25000_ChkOutLandXMLRespons" +
            "e")]
        TerraScan.BusinessEntities.F25000FieldUseData F25000_ChkOutLandXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25000_ChkOutVersionXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25000_ChkOutVersionXMLResp" +
            "onse")]
        TerraScan.BusinessEntities.F25000FieldUseData F25000_ChkOutVersionXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutSitusXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkOutSitusXMLRespons" +
            "e")]
        TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutSitusXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25000_ChkOutSeniorExemptio" +
            "nXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25000_ChkOutSeniorExemptio" +
            "nXMLResponse")]
        TerraScan.BusinessEntities.F25000FieldUseData F25000_ChkOutSeniorExemptionXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25000_ChkOutAssessmentType" +
            "XML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25000_ChkOutAssessmentType" +
            "XMLResponse")]
        TerraScan.BusinessEntities.F25000FieldUseData F25000_ChkOutAssessmentTypeXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25000_ChkOutParcelValueXML" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25000_ChkOutParcelValueXML" +
            "Response")]
        TerraScan.BusinessEntities.F25000FieldUseData F25000_ChkOutParcelValueXML(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInFileXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInFileXMLResponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInFileXML(out int RowendValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInInsertedFileXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInInsertedFileXMLR" +
            "esponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInInsertedFileXML();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_UpdateFile", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_UpdateFileResponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_UpdateFile(string updatexmlContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_InsertFile", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_InsertFileResponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_InsertFile(string insertxmlContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInLandValuesXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInLandValuesXMLRes" +
            "ponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInLandValuesXML(out int RowendValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInLandXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInLandXMLResponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInLandXML(out int RowendValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInMiscXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInMiscXMLResponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInMiscXML(out int RowendValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInMSC_EstimateXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInMSC_EstimateXMLR" +
            "esponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInMSC_EstimateXML(out int RowendValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInObjectXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInObjectXMLRespons" +
            "e")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInObjectXML(out int RowendValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInParcelValueXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInParcelValueXMLRe" +
            "sponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInParcelValueXML(out int RowendValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInParcelXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInParcelXMLRespons" +
            "e")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInParcelXML(out int RowendValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInTerraGonXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInTerraGonXMLRespo" +
            "nse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInTerraGonXML(out int RowendValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInType2XML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInType2XMLResponse" +
            "")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInType2XML(out int RowendValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInType6XML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInType6XMLResponse" +
            "")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInType6XML(out int RowendValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInValueSliceXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInValueSliceXMLRes" +
            "ponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInValueSliceXML(out int RowendValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInTypesXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInTypesXMLResponse" +
            "")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInTypesXML();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInLandCodeXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInLandCodeXMLRespo" +
            "nse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInLandCodeXML();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_GetChkOutParcelIDs", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_GetChkOutParcelIDsRes" +
            "ponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_GetChkOutParcelIDs(int SnapShotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_GetCheckOutDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_GetCheckOutDetailsRes" +
            "ponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_GetCheckOutDetails(int SnapShotID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_SaveChkOutParcelIDs", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_SaveChkOutParcelIDsRe" +
            "sponse")]
        int F3230_SaveChkOutParcelIDs(string ParcelXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_SaveCheckOutDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_SaveCheckOutDetailsRe" +
            "sponse")]
        int F3230_SaveCheckOutDetails(string CheckOutXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ParcelID", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ParcelIDResponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ParcelID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInDeprXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInDeprXMLResponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInDeprXML();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInInsertXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInInsertXMLRespons" +
            "e")]
        string F3230_ChkInInsertXML(out string ChkInInsertXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInTerraGonInsertXM" +
            "L", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInTerraGonInsertXM" +
            "LResponse")]
        string F3230_ChkInTerraGonInsertXML(out string ChkInInsertXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInEstimateComponen" +
            "tGroupXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInEstimateComponen" +
            "tGroupXMLResponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInEstimateComponentGroupXML();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInNBHDXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInNBHDXMLResponse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInNBHDXML();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9065_UpdateApplicationStat" +
            "us", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9065_UpdateApplicationStat" +
            "usResponse")]
        int F9065_UpdateApplicationStatus(bool isCheckedOut, bool isOnline, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9065_GetSnapshotDetail", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9065_GetSnapshotDetailResp" +
            "onse")]
        string F9065_GetSnapshotDetail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9065_GetAuditCount", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9065_GetAuditCountResponse" +
            "")]
        int F9065_GetAuditCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9065_DeleteCheckOutTable", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9065_DeleteCheckOutTableRe" +
            "sponse")]
        int F9065_DeleteCheckOutTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9065_InsertFieldElement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9065_InsertFieldElementRes" +
            "ponse")]
        int F9065_InsertFieldElement(string fieldElement, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36035_GetLandCodeBaseValue" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36035_GetLandCodeBaseValue" +
            "Response")]
        string F36035_GetLandCodeBaseValue(string landCode, int valueSliceId, System.Nullable<int> AglandID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36035_ListInfluenceType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36035_ListInfluenceTypeRes" +
            "ponse")]
        string F36035_ListInfluenceType(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36035_ListLandProgram", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36035_ListLandProgramRespo" +
            "nse")]
        string F36035_ListLandProgram();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36035_GetUseBaseDollarPerU" +
            "nit", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36035_GetUseBaseDollarPerU" +
            "nitResponse")]
        string F36035_GetUseBaseDollarPerUnit(byte programId, byte useAdjustmentType, string useAdjustment, decimal useBaseValue, int rollYear, decimal useMultiplier, decimal units);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36035_ExecuteVFormula", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36035_ExecuteVFormulaRespo" +
            "nse")]
        string F36035_ExecuteVFormula(string vformula, decimal units);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F39135_LandDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F39135_LandDetailsResponse")]
        string F39135_LandDetails(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F39135_Landtypes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F39135_LandtypesResponse")]
        string F39135_Landtypes(int valueSliceId, int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F39135_LandUseTypes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F39135_LandUseTypesResponse" +
            "")]
        string F39135_LandUseTypes(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F39135_GetLandTotals", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F39135_GetLandTotalsRespons" +
            "e")]
        string F39135_GetLandTotals(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F39135_WeightedRating", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F39135_WeightedRatingRespon" +
            "se")]
        string F39135_WeightedRating(string landCode, decimal units, System.Nullable<int> landUse, int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F39135_CalculatedBaseValue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F39135_CalculatedBaseValueR" +
            "esponse")]
        string F39135_CalculatedBaseValue(string LandCode, int adjustmentTypeID, decimal units, decimal baseCostUnit, decimal adjustment, System.Nullable<int> AglandID, int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F39135_AdjustmentType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F39135_AdjustmentTypeRespon" +
            "se")]
        string F39135_AdjustmentType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F39135_InsertLandDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F39135_InsertLandDetailsRes" +
            "ponse")]
        int F39135_InsertLandDetails(int luid, string landUnitItems, string influenceItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F81001_GetEventFeeCatalog", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F81001_GetEventFeeCatalogRe" +
            "sponse")]
        string F81001_GetEventFeeCatalog(int feeCatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F81001_SaveEventFeeCatalog", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F81001_SaveEventFeeCatalogR" +
            "esponse")]
        int F81001_SaveEventFeeCatalog(int feeCatId, string feeCatalogItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F81001_DeleteEventFeeCatalo" +
            "g", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F81001_DeleteEventFeeCatalo" +
            "gResponse")]
        void F81001_DeleteEventFeeCatalog(int feeCatId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F81001_CheckEventFeeCatalog" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F81001_CheckEventFeeCatalog" +
            "Response")]
        int F81001_CheckEventFeeCatalog(int feeCatId, string formNumber, System.DateTime effectiveDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36040_ListNeighborhoodType" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36040_ListNeighborhoodType" +
            "Response")]
        string F36040_ListNeighborhoodType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36040_ListCropCatalog", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36040_ListCropCatalogRespo" +
            "nse")]
        string F36040_ListCropCatalog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36040_DeleteCropCatalog", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36040_DeleteCropCatalogRes" +
            "ponse")]
        int F36040_DeleteCropCatalog(int cropVId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36040_SaveCropCatalog", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36040_SaveCropCatalogRespo" +
            "nse")]
        int F36040_SaveCropCatalog(System.Nullable<int> cropUnqiueId, string cropCatalogItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36040_ListCropNeighborhood" +
            "Type", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36040_ListCropNeighborhood" +
            "TypeResponse")]
        string F36040_ListCropNeighborhoodType(int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36041_GetCrop", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36041_GetCropResponse")]
        string F36041_GetCrop(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36041_GetCropCode", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36041_GetCropCodeResponse")]
        string F36041_GetCropCode(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36041_SaveCropCodeDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36041_SaveCropCodeDetailsR" +
            "esponse")]
        int F36041_SaveCropCodeDetails(int valueSliceId, string cropItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36041_DeleteCrop", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36041_DeleteCropResponse")]
        void F36041_DeleteCrop(int cropId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36041_DeleteCropIds", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36041_DeleteCropIdsRespons" +
            "e")]
        void F36041_DeleteCropIds(string cropIds, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F81002_GetEventFee", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F81002_GetEventFeeResponse")]
        string F81002_GetEventFee(int eventId, int form);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F81002_SaveEventFee", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F81002_SaveEventFeeResponse" +
            "")]
        int F81002_SaveEventFee(int eventId, string feeItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F81002_DeleteEventFee", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F81002_DeleteEventFeeRespon" +
            "se")]
        void F81002_DeleteEventFee(int eventId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInCommentXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInCommentXMLRespon" +
            "se")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInCommentXML(out int RowendValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInEstimateXML", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3230_ChkInEstimateXMLRespo" +
            "nse")]
        TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInEstimateXML(out int RowendValue, string TableName, int StartRow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27080_DeleteExemption", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27080_DeleteExemptionRespo" +
            "nse")]
        void F27080_DeleteExemption(int userId, int exemptionId, string exemptionCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27080_SaveExemptionType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27080_SaveExemptionTypeRes" +
            "ponse")]
        int F27080_SaveExemptionType(int exemptionId, string seniorExemption, string exemptionType, int checkError, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29530_FillAssociationEvent" +
            "Grid", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29530_FillAssociationEvent" +
            "GridResponse")]
        string F29530_FillAssociationEventGrid(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29500_GetBaseParcelValue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29500_GetBaseParcelValueRe" +
            "sponse")]
        string F29500_GetBaseParcelValue(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29500_ParcelSplitLoad", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29500_ParcelSplitLoadRespo" +
            "nse")]
        string F29500_ParcelSplitLoad(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29500_SaveParcelSplit", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29500_SaveParcelSplitRespo" +
            "nse")]
        int F29500_SaveParcelSplit(string splitDefinitionXml, string splitHeaderXml, string parcelSplitXml, string parcelObjectXml, string cropXml, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29500_CreateParcel", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29500_CreateParcelResponse" +
            "")]
        string F29500_CreateParcel(int splitId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36032_ListLandItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36032_ListLandItemsRespons" +
            "e")]
        string F36032_ListLandItems(System.Nullable<int> rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36032_ListLandCodeDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36032_ListLandCodeDetailsR" +
            "esponse")]
        string F36032_ListLandCodeDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36032_DeleteLandCode", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36032_DeleteLandCodeRespon" +
            "se")]
        int F36032_DeleteLandCode(int landCodeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36032_SaveLandCodeDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36032_SaveLandCodeDetailsR" +
            "esponse")]
        int F36032_SaveLandCodeDetails(System.Nullable<int> landCodeId, string landItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29510_GetBaseParcelValue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29510_GetBaseParcelValueRe" +
            "sponse")]
        string F29510_GetBaseParcelValue(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29510_GetCombineParcelDeta" +
            "ils", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29510_GetCombineParcelDeta" +
            "ilsResponse")]
        System.Data.DataSet F29510_GetCombineParcelDetails(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29510_SaveCombineParcelDet" +
            "ails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29510_SaveCombineParcelDet" +
            "ailsResponse")]
        int F29510_SaveCombineParcelDetails(System.Nullable<int> combineId, string parcelNumber, string combineItems, int userId, bool IsAttachment, bool IsComment, bool IsPermit, bool IsAssociation, bool IsNewConstruction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29510_CreateCombinedParcel" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29510_CreateCombinedParcel" +
            "Response")]
        string F29510_CreateCombinedParcel(int combineId, string eventId, string parcelNumber, int userId, bool IsAttachment, bool IsComment, bool IsPermit, bool IsAssociation, bool IsNewConstruction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36033_ListLandCodeValues", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36033_ListLandCodeValuesRe" +
            "sponse")]
        string F36033_ListLandCodeValues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36035_ListShapeDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36035_ListShapeDetailsResp" +
            "onse")]
        string F36035_ListShapeDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36033_ListIndividualLandCo" +
            "deValuesItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36033_ListIndividualLandCo" +
            "deValuesItemsResponse")]
        string F36033_ListIndividualLandCodeValuesItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36033_ListNeighborhoodType" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36033_ListNeighborhoodType" +
            "Response")]
        string F36033_ListNeighborhoodType(int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36033_DeleteLandCodevalue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36033_DeleteLandCodevalueR" +
            "esponse")]
        int F36033_DeleteLandCodevalue(int luvId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36033_SaveLandCodeValue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36033_SaveLandCodeValueRes" +
            "ponse")]
        int F36033_SaveLandCodeValue(System.Nullable<int> landUnqiueId, string landValueItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F39133_ListLandCodeValues", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F39133_ListLandCodeValuesRe" +
            "sponse")]
        string F39133_ListLandCodeValues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F39133_ListIndividualLandCo" +
            "deValuesItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F39133_ListIndividualLandCo" +
            "deValuesItemsResponse")]
        string F39133_ListIndividualLandCodeValuesItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F39133_ListNeighborhoodType" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F39133_ListNeighborhoodType" +
            "Response")]
        string F39133_ListNeighborhoodType(int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F39133_DeleteLandCodevalue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F39133_DeleteLandCodevalueR" +
            "esponse")]
        int F39133_DeleteLandCodevalue(int luvId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F39133_SaveLandCodeValue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F39133_SaveLandCodeValueRes" +
            "ponse")]
        int F39133_SaveLandCodeValue(System.Nullable<int> landUnqiueId, string landValueItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F39133_CalculateNonCropValu" +
            "e", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F39133_CalculateNonCropValu" +
            "eResponse")]
        string F39133_CalculateNonCropValue(int rollYear, System.Nullable<decimal> CropRate, System.Nullable<decimal> NonCropRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36035_ListLandDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36035_ListLandDetailsRespo" +
            "nse")]
        string F36035_ListLandDetails(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36035_ListLandTypeDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36035_ListLandTypeDetailsR" +
            "esponse")]
        string F36035_ListLandTypeDetails(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36035_InsertLandDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36035_InsertLandDetailsRes" +
            "ponse")]
        int F36035_InsertLandDetails(int luid, string landUnitItems, string influenceItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36035_DeleteLandDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36035_DeleteLandDetailsRes" +
            "ponse")]
        void F36035_DeleteLandDetails(int luid, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36035_GetLandCode", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36035_GetLandCodeResponse")]
        string F36035_GetLandCode(int rollYear, int landType1, int landType2, int landType3, int valuesliceId, System.Nullable<int> AglandID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36011_RecalcMiscImprovemen" +
            "t", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36011_RecalcMiscImprovemen" +
            "tResponse")]
        string F36011_RecalcMiscImprovement(bool withprimary, System.Nullable<int> yearIn, string condition, System.Nullable<int> economicLife, System.Nullable<int> effectiveAge, System.Nullable<decimal> physDeprPerc, System.Nullable<decimal> funcDeprPerc, System.Nullable<decimal> BaseCost, System.Nullable<decimal> physDepr, System.Nullable<decimal> funcDepr, int valueSliceId, int miscCodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36010_GetMiscImprovementCa" +
            "talog", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36010_GetMiscImprovementCa" +
            "talogResponse")]
        string F36010_GetMiscImprovementCatalog(int miscCodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36010_SaveMiscImprovementC" +
            "atalog", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36010_SaveMiscImprovementC" +
            "atalogResponse")]
        int F36010_SaveMiscImprovementCatalog(int miscCodeId, string miscCatalogItems, int userId, string miscCatalogChoiceItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36010_DeleteMiscImprovemen" +
            "tCatalog", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36010_DeleteMiscImprovemen" +
            "tCatalogResponse")]
        void F36010_DeleteMiscImprovementCatalog(int miscCodeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36010_CheckMiscImprovement" +
            "Catalog", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36010_CheckMiscImprovement" +
            "CatalogResponse")]
        int F36010_CheckMiscImprovementCatalog(int miscCodeId, string miscCode, int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36010_ListDeprTable", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36010_ListDeprTableRespons" +
            "e")]
        string F36010_ListDeprTable(int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36001_GetMarshalAndSwiftCo" +
            "mmercial", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36001_GetMarshalAndSwiftCo" +
            "mmercialResponse")]
        string F36001_GetMarshalAndSwiftCommercial(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36001_SaveMarshalAndSwiftC" +
            "ommercial", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36001_SaveMarshalAndSwiftC" +
            "ommercialResponse")]
        int F36001_SaveMarshalAndSwiftCommercial(int valueSliceId, string estimateDetails, string occupancyDetails, string componentDetails, string depreciationXml, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9080_GetRollYearManagement" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9080_GetRollYearManagement" +
            "Response")]
        string F9080_GetRollYearManagement(short rollYear, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9080_ListRollYearManagemen" +
            "t", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9080_ListRollYearManagemen" +
            "tResponse")]
        string F9080_ListRollYearManagement(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9080_ExecRollYearStep", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9080_ExecRollYearStepRespo" +
            "nse")]
        string F9080_ExecRollYearStep(short rollOverId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2550_ListParcelDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2550_ListParcelDetailsResp" +
            "onse")]
        string F2550_ListParcelDetails(string parcelId, string scheduleId, string stateId, string centralXmlIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2550_ExecTaxRollCorrection" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2550_ExecTaxRollCorrection" +
            "sResponse")]
        int F2550_ExecTaxRollCorrections(string parcelItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2550_ListCorrectionCode", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2550_ListCorrectionCodeRes" +
            "ponse")]
        string F2550_ListCorrectionCode();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2550_ListAttachmentDetails" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2550_ListAttachmentDetails" +
            "Response")]
        string F2550_ListAttachmentDetails(int formId, string keyIds, int userId, int moduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2550_DeleteAttachmentDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2550_DeleteAttachmentDetai" +
            "lsResponse")]
        void F2550_DeleteAttachmentDetails(int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2550_SaveCorrectionParcels" +
            "Temp", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2550_SaveCorrectionParcels" +
            "TempResponse")]
        int F2550_SaveCorrectionParcelsTemp(System.Nullable<int> correctionId, string correctionTempItems, string corrParcelIds, string statementsIds, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2551_ListEditStatementDeta" +
            "ils", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2551_ListEditStatementDeta" +
            "ilsResponse")]
        string F2551_ListEditStatementDetails(int parcelId, short typeId, int statementId, int ownerId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2551_LoadStatementGridDeta" +
            "ils", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2551_LoadStatementGridDeta" +
            "ilsResponse")]
        string F2551_LoadStatementGridDetails(int parcelId, short typeId, int statementId, int ownerId, string itemXML, string changeXML, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveEditStatementtDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveEditStatementtDetailsRe" +
            "sponse")]
        int SaveEditStatementtDetails(int parcelId, short typeId, int statementId, int ownerId, string itemXML, string headerXML, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2552_ListStatementSelectio" +
            "nDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2552_ListStatementSelectio" +
            "nDetailsResponse")]
        string F2552_ListStatementSelectionDetails(int parcelId, int typeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1401_GetParcelType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1401_GetParcelTypeResponse" +
            "")]
        string F1401_GetParcelType(System.Nullable<int> parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1401_GetSearchResult", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1401_GetSearchResultRespon" +
            "se")]
        string F1401_GetSearchResult(string parcelSearchXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3001_GetObjectDetail", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3001_GetObjectDetailRespon" +
            "se")]
        string F3001_GetObjectDetail(int objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3001_SaveObjectManagement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3001_SaveObjectManagementR" +
            "esponse")]
        int F3001_SaveObjectManagement(int objectId, string objectItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3001_DeleteObjectManagemen" +
            "t", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3001_DeleteObjectManagemen" +
            "tResponse")]
        void F3001_DeleteObjectManagement(int objectId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3001_GetParcelDescription", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3001_GetParcelDescriptionR" +
            "esponse")]
        string F3001_GetParcelDescription(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3001_CopyObject", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3001_CopyObjectResponse")]
        int F3001_CopyObject(int objectId, string objectXml, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetUserNetName", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetUserNetNameResponse")]
        System.Data.DataSet GetUserNetName(string userFullName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27080_ListExemptionTypeCom" +
            "bo", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27080_ListExemptionTypeCom" +
            "boResponse")]
        string F27080_ListExemptionTypeCombo(int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27080_FillExemptionTypeGri" +
            "d", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27080_FillExemptionTypeGri" +
            "dResponse")]
        string F27080_FillExemptionTypeGrid(int exemptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27080_GetExemptionError", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27080_GetExemptionErrorRes" +
            "ponse")]
        string F27080_GetExemptionError(int exemptionId, string exemptionCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8062_SaveComponentsConfigu" +
            "ration", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8062_SaveComponentsConfigu" +
            "rationResponse")]
        void F8062_SaveComponentsConfiguration(string componentsConfig, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8062_DeleteComponentsConfi" +
            "guration", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8062_DeleteComponentsConfi" +
            "gurationResponse")]
        int F8062_DeleteComponentsConfiguration(int componentId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8058_ListResourcesConfigDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8058_ListResourcesConfigDe" +
            "tailsResponse")]
        string F8058_ListResourcesConfigDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8058_InsertResourcesConfig" +
            "Details", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8058_InsertResourcesConfig" +
            "DetailsResponse")]
        int F8058_InsertResourcesConfigDetails(int equipmentId, string equiptResource, int applicationId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8058_DeleteResourcesConfig" +
            "Details", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8058_DeleteResourcesConfig" +
            "DetailsResponse")]
        int F8058_DeleteResourcesConfigDetails(int equipmentId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1013_ListUnpaidReceipts", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1013_ListUnpaidReceiptsRes" +
            "ponse")]
        string F1013_ListUnpaidReceipts(System.Nullable<int> userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1013_SaveBatchPayment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1013_SaveBatchPaymentRespo" +
            "nse")]
        int F1013_SaveBatchPayment(int ppaymentId, int userId, string paymentItemsXml, string receiptItemsXml, string receiptDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1013_ListSnapShotItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1013_ListSnapShotItemsResp" +
            "onse")]
        string F1013_ListSnapShotItems(int snapShotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1013_DeleteReceiptItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1013_DeleteReceiptItemsRes" +
            "ponse")]
        int F1013_DeleteReceiptItems(int paymentId, string receiptItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8060_ListPartsConfig", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8060_ListPartsConfigRespon" +
            "se")]
        string F8060_ListPartsConfig(int componentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8060_ListComponents", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8060_ListComponentsRespons" +
            "e")]
        string F8060_ListComponents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8060_SavePartsConfiguratio" +
            "n", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8060_SavePartsConfiguratio" +
            "nResponse")]
        void F8060_SavePartsConfiguration(int partId, string partsConfig, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8060_DeletePartsConfigurat" +
            "ion", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8060_DeletePartsConfigurat" +
            "ionResponse")]
        int F8060_DeletePartsConfiguration(int partId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9102_GetOwnerStatusDetails" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9102_GetOwnerStatusDetails" +
            "Response")]
        string F9102_GetOwnerStatusDetails(int typeId, int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F95005_ListReferenceData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F95005_ListReferenceDataRes" +
            "ponse")]
        System.Data.DataSet F95005_ListReferenceData(int masterFormNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F95005_SaveReferenceData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F95005_SaveReferenceDataRes" +
            "ponse")]
        int F95005_SaveReferenceData(string referenceData, string deletedData, string tableName, string keyColumn, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F96000_GetOwnerManagementDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F96000_GetOwnerManagementDe" +
            "tailsResponse")]
        string F96000_GetOwnerManagementDetails(int ownerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F96000_ListOwnerStatusType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F96000_ListOwnerStatusTypeR" +
            "esponse")]
        string F96000_ListOwnerStatusType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F96000_CountryComboDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F96000_CountryComboDetailsR" +
            "esponse")]
        string F96000_CountryComboDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F96000_InsertOwnerManagemen" +
            "tDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F96000_InsertOwnerManagemen" +
            "tDetailsResponse")]
        int F96000_InsertOwnerManagementDetails(int ownerId, string ownerDetails, string ownerStatus, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F96000_DeleteData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F96000_DeleteDataResponse")]
        void F96000_DeleteData(int statusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListDeprTable", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListDeprTableRespons" +
            "e")]
        string F36011_ListDeprTable(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListMiscCode", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListMiscCodeResponse" +
            "")]
        string F36011_ListMiscCode(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListMiscImprovements" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListMiscImprovements" +
            "Response")]
        string F36011_ListMiscImprovements(int miscId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListCatalogCode", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListCatalogCodeRespo" +
            "nse")]
        string F36011_ListCatalogCode(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36011_DeleteMICode", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36011_DeleteMICodeResponse" +
            "")]
        void F36011_DeleteMICode(int miscId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36011_SaveMiscImprovement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36011_SaveMiscImprovementR" +
            "esponse")]
        int F36011_SaveMiscImprovement(int miscmId, string miscItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListQualityComm", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListQualityCommRespo" +
            "nse")]
        string F36011_ListQualityComm();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListQualityRes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListQualityResRespon" +
            "se")]
        string F36011_ListQualityRes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListCondition", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListConditionRespons" +
            "e")]
        string F36011_ListCondition();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListDeprFuncCategory" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36011_ListDeprFuncCategory" +
            "Response")]
        string F36011_ListDeprFuncCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36012_ListMiscCatalogChoic" +
            "e", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36012_ListMiscCatalogChoic" +
            "eResponse")]
        string F36012_ListMiscCatalogChoice(int miscCodeId, int fieldNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25009_ListSubdivision", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25009_ListSubdivisionRespo" +
            "nse")]
        string F25009_ListSubdivision();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25003_ListSitusMangement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25003_ListSitusMangementRe" +
            "sponse")]
        string F25003_ListSitusMangement(int parcelId, int situsId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25003_ListStreet", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25003_ListStreetResponse")]
        string F25003_ListStreet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25003_ListUnitType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25003_ListUnitTypeResponse" +
            "")]
        string F25003_ListUnitType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25003_SaveListMangement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25003_SaveListMangementRes" +
            "ponse")]
        int F25003_SaveListMangement(int situsId, string situsItems, bool isFuturePush, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25003_DeleteSitusManagemen" +
            "t", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25003_DeleteSitusManagemen" +
            "tResponse")]
        void F25003_DeleteSitusManagement(int situsId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetObjectDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetObjectDetailsResponse")]
        string GetObjectDetails(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetObjectTypesList", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetObjectTypesListResponse")]
        string GetObjectTypesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetValueSlicesList", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetValueSlicesListResponse")]
        string GetValueSlicesList(int parcelId, int objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetMiscImprovementsList", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetMiscImprovementsListResp" +
            "onse")]
        string GetMiscImprovementsList(int valuesliceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3602_ProcessMiscImprovemen" +
            "ts", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3602_ProcessMiscImprovemen" +
            "tsResponse")]
        string F3602_ProcessMiscImprovements(string copyMove, int parcelId, bool isNewObject, int existingObjectId, int newObjectTypeId, bool isNewValueslice, int existingValueslice, string miscImprovements, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1060_ListSuspendedPayment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1060_ListSuspendedPaymentR" +
            "esponse")]
        string F1060_ListSuspendedPayment(string searchDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9040_ListBatchButtonSnapSh" +
            "ots", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9040_ListBatchButtonSnapSh" +
            "otsResponse")]
        string F9040_ListBatchButtonSnapShots(int formsSliceNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9040_SaveBatchButtonSnapSh" +
            "ots", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9040_SaveBatchButtonSnapSh" +
            "otsResponse")]
        int F9040_SaveBatchButtonSnapShots(int snapShotId, string snapShotDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9040_ListSnapShots", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9040_ListSnapShotsResponse" +
            "")]
        string F9040_ListSnapShots(int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9040_SaveSnapShot", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9040_SaveSnapShotResponse")]
        int F9040_SaveSnapShot(int snapShotId, string snapShotxml, string snapshotItemsxml, string filterXML, string pinType, int userId, int parentSnapShotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9040_DeleteSnapShot", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9040_DeleteSnapShotRespons" +
            "e")]
        void F9040_DeleteSnapShot(int snapshotId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9070_GetReportListingDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9070_GetReportListingDetai" +
            "lsResponse")]
        string F9070_GetReportListingDetails(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F95101_ListAuditTrail", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F95101_ListAuditTrailRespon" +
            "se")]
        string F95101_ListAuditTrail(int form, int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25008_ParcelMiscellaneousD" +
            "ata", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25008_ParcelMiscellaneousD" +
            "ataResponse")]
        string F25008_ParcelMiscellaneousData(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25008_ParcelMiscellaneousC" +
            "onfigData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25008_ParcelMiscellaneousC" +
            "onfigDataResponse")]
        string F25008_ParcelMiscellaneousConfigData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25008_SaveParcelMiscellane" +
            "ous", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25008_SaveParcelMiscellane" +
            "ousResponse")]
        void F25008_SaveParcelMiscellaneous(int parcelId, string miscellaneous, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35101_GetNeighborhoodGroup" +
            "Header", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35101_GetNeighborhoodGroup" +
            "HeaderResponse")]
        string F35101_GetNeighborhoodGroupHeader(int nbhdGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35101_SaveNeighborhoodGrou" +
            "pHeader", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35101_SaveNeighborhoodGrou" +
            "pHeaderResponse")]
        int F35101_SaveNeighborhoodGroupHeader(int nbhdGroupId, string neighborhoodGroupHeader, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35101_DeleteNeighborhoodGr" +
            "oupHeader", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35101_DeleteNeighborhoodGr" +
            "oupHeaderResponse")]
        void F35101_DeleteNeighborhoodGroupHeader(int nbhdGroupId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3040_GetZoningDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3040_GetZoningDetailsRespo" +
            "nse")]
        string F3040_GetZoningDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3040_SaveZoningDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3040_SaveZoningDetailsResp" +
            "onse")]
        int F3040_SaveZoningDetails(string zoningDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15035SuspendedPayments", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15035SuspendedPaymentsResp" +
            "onse")]
        string F15035SuspendedPayments(int receiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15035_DeleteSuspendedPayme" +
            "nt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15035_DeleteSuspendedPayme" +
            "ntResponse")]
        void F15035_DeleteSuspendedPayment(int receiptId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15035_CheckSuspendedAccoun" +
            "ts", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15035_CheckSuspendedAccoun" +
            "tsResponse")]
        int F15035_CheckSuspendedAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8062_ListComponentsConfigu" +
            "ration", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8062_ListComponentsConfigu" +
            "rationResponse")]
        string F8062_ListComponentsConfiguration(int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8062_ListFeatureClass", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8062_ListFeatureClassRespo" +
            "nse")]
        string F8062_ListFeatureClass(int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveUserDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveUserDetailsResponse")]
        string SaveUserDetails(int userId, string nameDisplay, string nameFull, string nameNet, string email, int active, int administrator, int appraiser, int applicationId, int loginUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/UpdateCountyConfigDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/UpdateCountyConfigDetailsRe" +
            "sponse")]
        void UpdateCountyConfigDetails(int configId, string configDescription, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/UpdateDepositHistory", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/UpdateDepositHistoryRespons" +
            "e")]
        void UpdateDepositHistory(int clid, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/UpdateEventEngineTVDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/UpdateEventEngineTVDetailsR" +
            "esponse")]
        void UpdateEventEngineTVDetails(string eventItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/UpdateExciseAffidavitStatus" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/UpdateExciseAffidavitStatus" +
            "Response")]
        void UpdateExciseAffidavitStatus(int statementId, int treasurerStatus, int statusId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/UpdateJournalEntryDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/UpdateJournalEntryDetailsRe" +
            "sponse")]
        int UpdateJournalEntryDetails(int statementId, int receiptSourceId, string journalItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/UpdateNextNumberConfigDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/UpdateNextNumberConfigDetai" +
            "lsResponse")]
        void UpdateNextNumberConfigDetails(int nextNumId, int nextNum, string formula, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/Validation", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ValidationResponse")]
        bool Validation(string userNameText, string passwordText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/wListAddresses", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/wListAddressesResponse")]
        string wListAddresses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/wListStreets", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/wListStreetsResponse")]
        string wListStreets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27006_CheckOwnershipDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27006_CheckOwnershipDetail" +
            "sResponse")]
        int F27006_CheckOwnershipDetails(string ownershipDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36000_GetHouseTypeCollecti" +
            "on", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36000_GetHouseTypeCollecti" +
            "onResponse")]
        string F36000_GetHouseTypeCollection(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36000_GetDeprPercentage", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36000_GetDeprPercentageRes" +
            "ponse")]
        string F36000_GetDeprPercentage(int age, decimal objectCondition, int deprTableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36000_GetDeprTableNameId", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36000_GetDeprTableNameIdRe" +
            "sponse")]
        int F36000_GetDeprTableNameId(int valueSliceId, int propertyQuality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36000_SaveDepreciationDeta" +
            "ils", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36000_SaveDepreciationDeta" +
            "ilsResponse")]
        int F36000_SaveDepreciationDetails(string depreciationXml, int valueSliceId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15110_GetReceiptActions", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15110_GetReceiptActionsRes" +
            "ponse")]
        string F15110_GetReceiptActions(int receiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1557_InsertRefundInterest", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1557_InsertRefundInterestR" +
            "esponse")]
        void F1557_InsertRefundInterest(int receiptID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1555_GetReceiptDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1555_GetReceiptDetailsResp" +
            "onse")]
        string F1555_GetReceiptDetails(int receiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1556_ReverseReceiptDetails" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1556_ReverseReceiptDetails" +
            "Response")]
        string F1556_ReverseReceiptDetails(int receiptId, int sharedPaymentId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25011_GetMasterStreetList", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25011_GetMasterStreetListR" +
            "esponse")]
        string F25011_GetMasterStreetList(int streetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25011_ListMasterStreetList" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25011_ListMasterStreetList" +
            "Response")]
        string F25011_ListMasterStreetList(int streetID, string streetName, string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25011_ListStreetCityDirect" +
            "ionalSuffixDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25011_ListStreetCityDirect" +
            "ionalSuffixDetailsResponse")]
        string F25011_ListStreetCityDirectionalSuffixDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25011_SaveStreetListManage" +
            "ment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25011_SaveStreetListManage" +
            "mentResponse")]
        int F25011_SaveStreetListManagement(int streetId, string streetListMgmt, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25011_DeleteStreetList", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25011_DeleteStreetListResp" +
            "onse")]
        int F25011_DeleteStreetList(int streetId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2000_ListParcelStatus", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2000_ListParcelStatusRespo" +
            "nse")]
        string F2000_ListParcelStatus(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2000_UpdateParcelStatus", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2000_UpdateParcelStatusRes" +
            "ponse")]
        int F2000_UpdateParcelStatus(int parcelId, string description, string parcelType, int isexempt, int isownerPrimary, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2000_DeleteParcelStatus", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2000_DeleteParcelStatusRes" +
            "ponse")]
        void F2000_DeleteParcelStatus(int parcelId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListRecordLockStatus", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListRecordLockStatusRespons" +
            "e")]
        string ListRecordLockStatus(int formNo, int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/CheckInstallation1", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/CheckInstallation1Response")]
        string CheckInstallation1(string checkInstall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetDatabaseSchema", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetDatabaseSchemaResponse")]
        byte[] GetDatabaseSchema();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25009_GetLegalManagement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25009_GetLegalManagementRe" +
            "sponse")]
        string F25009_GetLegalManagement(int parcelId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25009_SaveLegalManagement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25009_SaveLegalManagementR" +
            "esponse")]
        int F25009_SaveLegalManagement(int legalId, string legalItems, bool isFuturePush, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/RdlToCode_Delete", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/RdlToCode_DeleteResponse")]
        void RdlToCode_Delete(string deletexmlString, string formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/RdlToCode_FillCombo", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/RdlToCode_FillComboResponse" +
            "")]
        System.Data.DataSet RdlToCode_FillCombo(string storedProcedureName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/RdlToCode_Get", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/RdlToCode_GetResponse")]
        System.Data.DataSet RdlToCode_Get(string getxmlString, string formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/RdlToCode_Save", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/RdlToCode_SaveResponse")]
        int RdlToCode_Save(string savexmlString, string formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveAffiDavitDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveAffiDavitDetailsRespons" +
            "e")]
        int SaveAffiDavitDetails(int statementId, string partiesAddress, string parcelDetails, string exciseAffidavitDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveAttachments", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveAttachmentsResponse")]
        string SaveAttachments(
                    System.Nullable<int> fileId, 
                    string extension, 
                    int formId, 
                    int keyId, 
                    int fileTypeId, 
                    string source, 
                    int primary, 
                    string description, 
                    string eventDate, 
                    int userId, 
                    int publicValue, 
                    int isroll, 
                    int linktype, 
                    string aurl, 
                    int pfileid, 
                    string sourceConfig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GenerateThumbnail", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GenerateThumbnailResponse")]
        void GenerateThumbnail(System.Nullable<int> fileId, int userId, string fileIdXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveAutoPrint", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveAutoPrintResponse")]
        void SaveAutoPrint(int formId, int userId, bool autoPrint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveComments", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveCommentsResponse")]
        void SaveComments(int commentId, int formId, int keyId, System.DateTime commentDate, int userId, string comments, int printOnReceipt, int publicComment, int ispriority, int isroll, int commentPriorityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveEventEngineEventPropert" +
            "ies", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveEventEngineEventPropert" +
            "iesResponse")]
        void SaveEventEngineEventProperties(string eventItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveEventEngineTVDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveEventEngineTVDetailsRes" +
            "ponse")]
        void SaveEventEngineTVDetails(string eventItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveExciseDistrcitCopy", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveExciseDistrcitCopyRespo" +
            "nse")]
        int SaveExciseDistrcitCopy(int district, int basedOnYear, int newDistrictYear, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveExciseTaxRate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveExciseTaxRateResponse")]
        void SaveExciseTaxRate(int exciseRateId, string exciseTaxDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveExciseTaxReceipt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveExciseTaxReceiptRespons" +
            "e")]
        string SaveExciseTaxReceipt(string statementItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveGDocComment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveGDocCommentResponse")]
        void SaveGDocComment(int eventId, string comment, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveGDocEventHeader", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveGDocEventHeaderResponse" +
            "")]
        string SaveGDocEventHeader(string eventItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveGroupPermissionDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveGroupPermissionDetailsR" +
            "esponse")]
        void SaveGroupPermissionDetails(int groupId, string formPermissions, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveLinearEventType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveLinearEventTypeResponse" +
            "")]
        void SaveLinearEventType(string eventItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveMortgageImport", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveMortgageImportResponse")]
        string SaveMortgageImport(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime receiptDate, System.DateTime interestDate, bool payCode, int userId, int rollYear, int ppaymentId, int firstHalfPayCode, bool resetErrorCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveMortgageImportEntries", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveMortgageImportEntriesRe" +
            "sponse")]
        string SaveMortgageImportEntries(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime receiptDate, System.DateTime interestDate, bool payCode, int userId, int rollYear, int ppaymentId, int firstHalfpaycode, string mortgageImportEntries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveMortgageImportTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveMortgageImportTemplateR" +
            "esponse")]
        void SaveMortgageImportTemplate(
                    int templateId, 
                    string templateName, 
                    int typeId, 
                    int userId, 
                    string description, 
                    string filePath, 
                    int statementIdPos, 
                    int statementIdWid, 
                    int statementNumPos, 
                    int statementNumWid, 
                    int amountPos, 
                    int amountWid, 
                    int commentPos, 
                    int commentWid, 
                    int bankCodePos, 
                    int bankCodeWid, 
                    int loanNumPos, 
                    int loanNumWid, 
                    int taxPayNamePos, 
                    int taxPayNameWid, 
                    int ParcelNumPos, 
                    int ParcelNumWid, 
                    int PostTypePos, 
                    int PostTypeWid, 
                    int OwnerIDPos, 
                    int OwnerIDWid, 
                    int CartIdPos, 
                    int CartidWid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SavePermitImportTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SavePermitImportTemplateRes" +
            "ponse")]
        int SavePermitImportTemplate(System.Nullable<int> templateId, string permitImportXML, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveIncomeSourceDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveIncomeSourceDetailsResp" +
            "onse")]
        int SaveIncomeSourceDetails(System.Nullable<int> IncomeSourceID, string IncomeSourceItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveMADImportTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveMADImportTemplateRespon" +
            "se")]
        int SaveMADImportTemplate(System.Nullable<int> templateId, string madImportXML, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveSnapshotImportTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveSnapshotImportTemplateR" +
            "esponse")]
        int SaveSnapshotImportTemplate(System.Nullable<int> templateId, string madImportXML, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SavePayment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SavePaymentResponse")]
        int SavePayment(int ppaymentId, string paymentItems, int userId, int ownerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SavePaymentItemsDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SavePaymentItemsDetailsResp" +
            "onse")]
        void SavePaymentItemsDetails(int registerId, decimal amount, int userId, string paymentItemsDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SavePointEventType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SavePointEventTypeResponse")]
        void SavePointEventType(string eventItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveQuery", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveQueryResponse")]
        System.Data.DataSet SaveQuery(string savedQueryName, int formId, string savedQueryNote, int userId, System.DateTime savedQueryDate, string savedQuery, string whereCondn, bool canOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveReceipt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveReceiptResponse")]
        string SaveReceipt(string receiptItems, string paymentItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveSnapShot", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveSnapShotResponse")]
        System.Data.DataSet SaveSnapShot(string snapshotName, int formId, string snapshotNote, int userId, System.DateTime snapshotDate, string snapshotQuery, string whereCondn, string keyIDs, bool canOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveSQLQuery", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveSQLQueryResponse")]
        int SaveSQLQuery(int categoryId, string description, string statement, int moduleId, int userId, int sqlId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListExciseRateDistrict", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListExciseRateDistrictRespo" +
            "nse")]
        string ListExciseRateDistrict(string district, int year, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListExciseTaxRate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListExciseTaxRateResponse")]
        string ListExciseTaxRate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListExciseTaxStatement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListExciseTaxStatementRespo" +
            "nse")]
        string ListExciseTaxStatement();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListGDocEventHeaderStatus", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListGDocEventHeaderStatusRe" +
            "sponse")]
        string ListGDocEventHeaderStatus(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListHelpDocumentForm", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListHelpDocumentFormRespons" +
            "e")]
        string ListHelpDocumentForm(string formFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListHistoryGrid", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListHistoryGridResponse")]
        string ListHistoryGrid(int statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListMortgageImportFileType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListMortgageImportFileTypeR" +
            "esponse")]
        string ListMortgageImportFileType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListMortgageTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListMortgageTemplateRespons" +
            "e")]
        string ListMortgageTemplate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListPermitImportFileType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListPermitImportFileTypeRes" +
            "ponse")]
        string ListPermitImportFileType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListUnitTerms", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListUnitTermsResponse")]
        string ListUnitTerms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListDistrictType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListDistrictTypeResponse")]
        string ListDistrictType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListMADImportFileType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListMADImportFileTypeRespon" +
            "se")]
        string ListMADImportFileType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListSnapshotImportFileType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListSnapshotImportFileTypeR" +
            "esponse")]
        string ListSnapshotImportFileType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListNextNumberConfiguration" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListNextNumberConfiguration" +
            "Response")]
        string ListNextNumberConfiguration();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListPostingErrors", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListPostingErrorsResponse")]
        string ListPostingErrors(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListPostingHistory", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListPostingHistoryResponse")]
        string ListPostingHistory(int count, int postTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListPostingQueue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListPostingQueueResponse")]
        string ListPostingQueue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListPostTypes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListPostTypesResponse")]
        string ListPostTypes(int form);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListPreviewPosting", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListPreviewPostingResponse")]
        string ListPreviewPosting(System.DateTime postDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListQuery", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListQueryResponse")]
        System.Data.DataSet ListQuery(int formId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListReceiptItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListReceiptItemsResponse")]
        string ListReceiptItems(int receiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15101_UpdateTransactionIte" +
            "ms", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15101_UpdateTransactionIte" +
            "msResponse")]
        int F15101_UpdateTransactionItems(string transactionItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListReceiptOwners", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListReceiptOwnersResponse")]
        string ListReceiptOwners(int receiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListSnapShot", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListSnapShotResponse")]
        System.Data.DataSet ListSnapShot(int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListSortQuery", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListSortQueryResponse")]
        System.Data.DataSet ListSortQuery(int savedQueryId, string orderByCondition, int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListSortSnapShot", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListSortSnapShotResponse")]
        System.Data.DataSet ListSortSnapShot(int snapShotId, string orderByCondition, int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListTenderType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListTenderTypeResponse")]
        string ListTenderType(bool allowOverUnder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListUserNames", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListUserNamesResponse")]
        string ListUserNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/LoadEventEngineData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/LoadEventEngineDataResponse" +
            "")]
        string LoadEventEngineData(int featureClassId, int featureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/LogException", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/LogExceptionResponse")]
        void LogException(int eventId, int priority, string severity, string title, System.DateTime timeStamp, string machineName, string appDomainName, string processId, string processName, string managedThreadName, string win32ThreadId, string message, string formattedMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/MortgageImportCheckErrors", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/MortgageImportCheckErrorsRe" +
            "sponse")]
        string MortgageImportCheckErrors(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime recieptDate, System.DateTime interestDate, bool payCode, int userId, int rollYear, int firstHalfpaycode, int ppaymentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/PerformPosting", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/PerformPostingResponse")]
        string PerformPosting(System.DateTime postDate, string selectedPostTypes, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetReceiptDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetReceiptDetailsResponse")]
        string GetReceiptDetails(int receiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetReceiptHeaderDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetReceiptHeaderDetailsResp" +
            "onse")]
        string GetReceiptHeaderDetails(int receiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetReceiptListDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetReceiptListDetailsRespon" +
            "se")]
        string GetReceiptListDetails(int receiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15100_SaveReceiptHeaderrec" +
            "eiptNumber", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15100_SaveReceiptHeaderrec" +
            "eiptNumberResponse")]
        void F15100_SaveReceiptHeaderreceiptNumber(int receiptId, string receiptNumber, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetReceiptStatementHeaderDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetReceiptStatementHeaderDe" +
            "tailsResponse")]
        string GetReceiptStatementHeaderDetails(int receiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetReportDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetReportDetailsResponse")]
        System.Data.DataSet GetReportDetails(int reportId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetSandwichAndItsSliceInfor" +
            "mation", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetSandwichAndItsSliceInfor" +
            "mationResponse")]
        string GetSandwichAndItsSliceInformation(int form, int keyId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetSandwichSubTitleInformat" +
            "ion", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetSandwichSubTitleInformat" +
            "ionResponse")]
        string GetSandwichSubTitleInformation(int form, int keyId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetSnapShotResult", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetSnapShotResultResponse")]
        string GetSnapShotResult(int snapShotId, string orderByCondn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetSnapshotUtilityList", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetSnapshotUtilityListRespo" +
            "nse")]
        string GetSnapshotUtilityList(int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetSQLCategory", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetSQLCategoryResponse")]
        string GetSQLCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetSQLDescription", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetSQLDescriptionResponse")]
        string GetSQLDescription(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetSQLQueryResult", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetSQLQueryResultResponse")]
        System.Data.DataSet GetSQLQueryResult(string sqlQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetSQLString", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetSQLStringResponse")]
        string GetSQLString(int categoryId, int sqlId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetTenderTypeConfiguration", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetTenderTypeConfigurationR" +
            "esponse")]
        string GetTenderTypeConfiguration();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetUserGroupDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetUserGroupDetailsResponse" +
            "")]
        string GetUserGroupDetails(int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetUserInformation", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetUserInformationResponse")]
        System.Data.DataSet GetUserInformation(string userName, int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetValidReceiptTest", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetValidReceiptTestResponse" +
            "")]
        string GetValidReceiptTest(int statementId, System.DateTime receiptDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetWorkOrderDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetWorkOrderDetailsResponse" +
            "")]
        string GetWorkOrderDetails(int featureClassId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/InsertAccount", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/InsertAccountResponse")]
        void InsertAccount(int userId, int errorTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/InsertErrorEngine", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/InsertErrorEngineResponse")]
        void InsertErrorEngine(string errorDate, int userId, string userIP, int errorTypeId, string parameter, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/InsertGDocEventEngineData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/InsertGDocEventEngineDataRe" +
            "sponse")]
        int InsertGDocEventEngineData(string eventEngineInsertData, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetGDocEventEngineFeatureCl" +
            "assId", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetGDocEventEngineFeatureCl" +
            "assIdResponse")]
        int GetGDocEventEngineFeatureClassId(int featureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/InsertGroupDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/InsertGroupDetailsResponse")]
        string InsertGroupDetails(int groupId, string groupName, string description, string userGroup, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/InsertQueryUtility", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/InsertQueryUtilityResponse")]
        int InsertQueryUtility(int queryId, string queryName, int formId, string description, int userId, string whereCondition, string userWhereCondition, int overrideValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/InsertReverseGLPost", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/InsertReverseGLPostResponse" +
            "")]
        void InsertReverseGLPost(int postId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/InsertSnapshotUtility", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/InsertSnapshotUtilityRespon" +
            "se")]
        int InsertSnapshotUtility(int snapshotId, string snapshotName, int snapshotFormId, string description, int recordCount, int userId, int overrideValue, string keyIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListAccountNames", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListAccountNamesResponse")]
        string ListAccountNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListDepositHistoryDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListDepositHistoryDetailsRe" +
            "sponse")]
        string ListDepositHistoryDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListEventEngineDetailTypes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListEventEngineDetailTypesR" +
            "esponse")]
        string ListEventEngineDetailTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListEventEngineTVDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListEventEngineTVDetailsRes" +
            "ponse")]
        string ListEventEngineTVDetails(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListEventTypeStatusDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListEventTypeStatusDetailsR" +
            "esponse")]
        string ListEventTypeStatusDetails(int featureClassId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetFormPermissions", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetFormPermissionsResponse")]
        System.Data.DataSet GetFormPermissions(int userId, int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetFormTitle", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetFormTitleResponse")]
        string GetFormTitle(int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetGDocComment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetGDocCommentResponse")]
        string GetGDocComment(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetGDocEventHeader", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetGDocEventHeaderResponse")]
        string GetGDocEventHeader(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetGroupDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetGroupDetailsResponse")]
        string GetGroupDetails(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetGroupPermissionDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetGroupPermissionDetailsRe" +
            "sponse")]
        string GetGroupPermissionDetails(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetInterestAmount", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetInterestAmountResponse")]
        decimal GetInterestAmount(int statmentId, string interestDate, decimal taxDueAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetJournalEntryDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetJournalEntryDetailsRespo" +
            "nse")]
        string GetJournalEntryDetails(int receiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetLinearEventType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetLinearEventTypeResponse")]
        string GetLinearEventType(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetMasterNameSearch", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetMasterNameSearchResponse" +
            "")]
        string GetMasterNameSearch(string lastName, string firstName, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetMenuItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetMenuItemsResponse")]
        System.Data.DataSet GetMenuItems(int userId, int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetMinTaxDue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetMinTaxDueResponse")]
        decimal GetMinTaxDue(int statmentId, string interestDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetMortgageImportStatement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetMortgageImportStatementR" +
            "esponse")]
        string GetMortgageImportStatement(int importId, bool nextAvailableRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetMortgageImportStatementI" +
            "ds", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetMortgageImportStatementI" +
            "dsResponse")]
        System.Data.DataSet GetMortgageImportStatementIds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetMortgageImportTemplateDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetMortgageImportTemplateDe" +
            "tailsResponse")]
        string GetMortgageImportTemplateDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetMortgageTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetMortgageTemplateResponse" +
            "")]
        string GetMortgageTemplate(int templateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetPermitImportTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetPermitImportTemplateResp" +
            "onse")]
        string GetPermitImportTemplate(int templateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetIncomeSourceDetail", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetIncomeSourceDetailRespon" +
            "se")]
        string GetIncomeSourceDetail(int IncomeSourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetMADImportTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetMADImportTemplateRespons" +
            "e")]
        string GetMADImportTemplate(int templateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetOwnerDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetOwnerDetailsResponse")]
        string GetOwnerDetails(int ownerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetPayment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetPaymentResponse")]
        string GetPayment(int ppaymentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetMultiplePayment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetMultiplePaymentResponse")]
        string GetMultiplePayment(string ppaymentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetPaymentItemsDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetPaymentItemsDetailsRespo" +
            "nse")]
        string GetPaymentItemsDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1019_GetPayeeDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1019_GetPayeeDetailsRespon" +
            "se")]
        string F1019_GetPayeeDetails(int PayeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetPointEventType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetPointEventTypeResponse")]
        string GetPointEventType(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetPostIdDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetPostIdDetailsResponse")]
        string GetPostIdDetails(int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetProgramId", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetProgramIdResponse")]
        string GetProgramId(int fileTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetQueryResult", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetQueryResultResponse")]
        string GetQueryResult(int queryId, string orderByCondn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetQueryUtilityList", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetQueryUtilityListResponse" +
            "")]
        string GetQueryUtilityList(int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetRealEstateStatement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetRealEstateStatementRespo" +
            "nse")]
        string GetRealEstateStatement(int statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetRealEstateStatementCount" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetRealEstateStatementCount" +
            "Response")]
        int GetRealEstateStatementCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetRealEstateStatementIds", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetRealEstateStatementIdsRe" +
            "sponse")]
        string GetRealEstateStatementIds(string orderField, string orderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetAttachementFunctionName", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetAttachementFunctionNameR" +
            "esponse")]
        string GetAttachementFunctionName(int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetAttachmentCount", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetAttachmentCountResponse")]
        int GetAttachmentCount(int formId, int receiptId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetAttachmentItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetAttachmentItemsResponse")]
        string GetAttachmentItems(int formId, int keyId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetAuthenticationState", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetAuthenticationStateRespo" +
            "nse")]
        System.Data.DataSet GetAuthenticationState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetAutoPrintStatus", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetAutoPrintStatusResponse")]
        int GetAutoPrintStatus(int formId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetComments", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetCommentsResponse")]
        string GetComments(int keyId, int formId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetCommentsCount", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetCommentsCountResponse")]
        string GetCommentsCount(int formId, int keyId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetConfigDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetConfigDetailsResponse")]
        string GetConfigDetails(string configName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetConfigInformation", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetConfigInformationRespons" +
            "e")]
        System.Data.DataSet GetConfigInformation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetConnectionString", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetConnectionStringResponse" +
            "")]
        string GetConnectionString(int msversionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetCountyConfiguration", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetCountyConfigurationRespo" +
            "nse")]
        System.Data.DataSet GetCountyConfiguration(int applicationId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetDepositHistorySearchResu" +
            "lt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetDepositHistorySearchResu" +
            "ltResponse")]
        string GetDepositHistorySearchResult(int form, string whereCondnSql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictName", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictNameResponse")]
        string GetDistrictName(int districtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictSelection", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictSelectionRespons" +
            "e")]
        string GetDistrictSelection(int exciseRateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetErrorEngine", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetErrorEngineResponse")]
        string GetErrorEngine(int errorTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetEventEngineDataHeader", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetEventEngineDataHeaderRes" +
            "ponse")]
        string GetEventEngineDataHeader(int featureClassId, int featureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetEventEngineEventProperti" +
            "es", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetEventEngineEventProperti" +
            "esResponse")]
        string GetEventEngineEventProperties(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseDistrictCopy", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseDistrictCopyRespon" +
            "se")]
        string GetExciseDistrictCopy(int exciserateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseIndividualType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseIndividualTypeResp" +
            "onse")]
        string GetExciseIndividualType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxAffidavitCalula" +
            "teAmountDue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxAffidavitCalula" +
            "teAmountDueResponse")]
        string GetExciseTaxAffidavitCalulateAmountDue(System.DateTime saleDate, System.DateTime paymentDate, int exciseRateId, int taxCode, double taxableSaleAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxAffidavitDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxAffidavitDetail" +
            "sResponse")]
        string GetExciseTaxAffidavitDetails(int statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxAffidavitStatus" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxAffidavitStatus" +
            "Response")]
        string GetExciseTaxAffidavitStatus(int statementId, int treasurerStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxRate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxRateResponse")]
        string GetExciseTaxRate(int exciseRateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxReceipt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxReceiptResponse" +
            "")]
        string GetExciseTaxReceipt(int statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxStatement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxStatementRespon" +
            "se")]
        string GetExciseTaxStatement(int statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetFilePath", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetFilePathResponse")]
        string GetFilePath(string source, int formId, int keyId, string extension, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9005_GetOriginalFilePath", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9005_GetOriginalFilePathRe" +
            "sponse")]
        string F9005_GetOriginalFilePath(int fileId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetFormDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetFormDetailsResponse")]
        string GetFormDetails(int form, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetParcelDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetParcelDetailsResponse")]
        string GetParcelDetails(int keyID, bool IsNext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetTranslatedFormDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetTranslatedFormDetailsRes" +
            "ponse")]
        string GetTranslatedFormDetails(int formNo, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9002_GetFormManagementDeta" +
            "ils", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9002_GetFormManagementDeta" +
            "ilsResponse")]
        string F9002_GetFormManagementDetails(int form, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetFormItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetFormItemsResponse")]
        System.Data.DataSet GetFormItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9013_ListNextNumberConfigu" +
            "ration", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9013_ListNextNumberConfigu" +
            "rationResponse")]
        string F9013_ListNextNumberConfiguration(int rollYear, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9013_ListNextNumberRollYea" +
            "r", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9013_ListNextNumberRollYea" +
            "rResponse")]
        string F9013_ListNextNumberRollYear(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9013_UpdateNextNumberConfi" +
            "gDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9013_UpdateNextNumberConfi" +
            "gDetailsResponse")]
        void F9013_UpdateNextNumberConfigDetails(int nextNumId, int nextNum, string formula, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9015_DeleteQuery", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9015_DeleteQueryResponse")]
        int F9015_DeleteQuery(int sqlId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9033_GetDefaultLayout", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9033_GetDefaultLayoutRespo" +
            "nse")]
        string F9033_GetDefaultLayout(int queryViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9033_GetSystemSnapShotReco" +
            "rdSet", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9033_GetSystemSnapShotReco" +
            "rdSetResponse")]
        System.Data.DataSet F9033_GetSystemSnapShotRecordSet(int systemSnapShotId, int masterFormNO, string filterValue, string sortOrder, string summaryValue, string columnValue, string keyIdCollection, int isFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9033_ListQueryView", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9033_ListQueryViewResponse" +
            "")]
        string F9033_ListQueryView(int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9033_ListQuerySnapShot", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9033_ListQuerySnapShotResp" +
            "onse")]
        string F9033_ListQuerySnapShot(int queryViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9033_ListQueryLayout", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9033_ListQueryLayoutRespon" +
            "se")]
        string F9033_ListQueryLayout(int queryViewId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9033_InsertSnapShotItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9033_InsertSnapShotItemsRe" +
            "sponse")]
        int F9033_InsertSnapShotItems(System.Nullable<int> userId, string systemSnapShotxml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9033_QueryEngine", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9033_QueryEngineResponse")]
        System.Data.DataSet F9033_QueryEngine(int queryViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9033_GetSnapShotRecordSet", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9033_GetSnapShotRecordSetR" +
            "esponse")]
        System.Data.DataSet F9033_GetSnapShotRecordSet(int snapShotId, int queryViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9033_GetSystemSnapshotCoun" +
            "t", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9033_GetSystemSnapshotCoun" +
            "tResponse")]
        string F9033_GetSystemSnapshotCount(int systemSnapShotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9039ListQueryViewColumn", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9039ListQueryViewColumnRes" +
            "ponse")]
        string F9039ListQueryViewColumn(int queryViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9039GetCommandResult", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9039GetCommandResultRespon" +
            "se")]
        string F9039GetCommandResult(int replaceId, string commandResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9039UpdateQueryData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9039UpdateQueryDataRespons" +
            "e")]
        string F9039UpdateQueryData(int queryViewId, string keyField, string keyId, string updateField, int doprocessValue, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9038_DeleteLayoutInformati" +
            "on", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9038_DeleteLayoutInformati" +
            "onResponse")]
        void F9038_DeleteLayoutInformation(int queryLayoutId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9038_LoadLayoutInformation" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9038_LoadLayoutInformation" +
            "Response")]
        string F9038_LoadLayoutInformation(int queryViewId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9038_SaveLayoutInformation" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9038_SaveLayoutInformation" +
            "Response")]
        int F9038_SaveLayoutInformation(int queryLayoutId, string layoutManagement, string layoutxmlValue, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9060_DeleteAuditConfigurat" +
            "ion", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9060_DeleteAuditConfigurat" +
            "ionResponse")]
        void F9060_DeleteAuditConfiguration(int auditTableId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9060_ListAuditingColumns", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9060_ListAuditingColumnsRe" +
            "sponse")]
        string F9060_ListAuditingColumns(string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9060_ListAuditingTables", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9060_ListAuditingTablesRes" +
            "ponse")]
        string F9060_ListAuditingTables(string tableType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9060_SaveAuditConfiguratio" +
            "n", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9060_SaveAuditConfiguratio" +
            "nResponse")]
        void F9060_SaveAuditConfiguration(string tableName, string auditColumns, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9075_GetComment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9075_GetCommentResponse")]
        string F9075_GetComment(int keyId, int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9503_CreateOrEditSubFund", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9503_CreateOrEditSubFundRe" +
            "sponse")]
        int F9503_CreateOrEditSubFund(System.Nullable<int> subFundId, string subFundElments, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9503_GetSubFundItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9503_GetSubFundItemsRespon" +
            "se")]
        string F9503_GetSubFundItems(string subFund, short rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9503_GetSubFundManagementD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9503_GetSubFundManagementD" +
            "etailsResponse")]
        string F9503_GetSubFundManagementDetails(System.Nullable<int> subFundId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9600_ListSearchresult", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9600_ListSearchresultRespo" +
            "nse")]
        string F9600_ListSearchresult(string searchValue, int appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9600_ListSortResult", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9600_ListSortResultRespons" +
            "e")]
        string F9600_ListSortResult(string searchValue, int appId, bool searchOrder, bool groupOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetAccountName", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetAccountNameResponse")]
        string GetAccountName(int accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetAccountSelectionData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetAccountSelectionDataResp" +
            "onse")]
        string GetAccountSelectionData(string subFund, string bars, string functionName, string objectname, string line, int rollYear, string desciption, int iscash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetAffidavitStatementId", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetAffidavitStatementIdResp" +
            "onse")]
        string GetAffidavitStatementId(int formId, string orderField, string orderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84124_SaveSanitaryPipeLoca" +
            "tion", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84124_SaveSanitaryPipeLoca" +
            "tionResponse")]
        int F84124_SaveSanitaryPipeLocation(int keyId, string sanitaryPipeLocation, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84721_DeleteWaterValveProp" +
            "erties", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84721_DeleteWaterValveProp" +
            "ertiesResponse")]
        void F84721_DeleteWaterValveProperties(int valveId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84721_GetWaterValvePropert" +
            "ies", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84721_GetWaterValvePropert" +
            "iesResponse")]
        string F84721_GetWaterValveProperties(int valveId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84721_SaveWaterValveProper" +
            "ties", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84721_SaveWaterValveProper" +
            "tiesResponse")]
        int F84721_SaveWaterValveProperties(int valveId, string waterValveProperties, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84722_GetWaterValveLocatio" +
            "n", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84722_GetWaterValveLocatio" +
            "nResponse")]
        string F84722_GetWaterValveLocation(int keyId, int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84722_SaveWaterValveLocati" +
            "on", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84722_SaveWaterValveLocati" +
            "onResponse")]
        int F84722_SaveWaterValveLocation(int keyId, string waterValveLocation, int formId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84723_CheckMainValveId", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84723_CheckMainValveIdResp" +
            "onse")]
        int F84723_CheckMainValveId(int mainValveId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84723_DeleteWaterHydrantPr" +
            "operties", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84723_DeleteWaterHydrantPr" +
            "opertiesResponse")]
        void F84723_DeleteWaterHydrantProperties(int hydrantId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84723_GetWaterHydrantPrope" +
            "rties", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84723_GetWaterHydrantPrope" +
            "rtiesResponse")]
        string F84723_GetWaterHydrantProperties(int hydrantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84723_SaveWaterHydrantProp" +
            "erties", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84723_SaveWaterHydrantProp" +
            "ertiesResponse")]
        int F84723_SaveWaterHydrantProperties(int hydrantId, string waterHydrantPropties, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84725_DeleteWaterPipePrope" +
            "rties", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84725_DeleteWaterPipePrope" +
            "rtiesResponse")]
        void F84725_DeleteWaterPipeProperties(int pipeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84725_GetWaterPipeProperti" +
            "es", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84725_GetWaterPipeProperti" +
            "esResponse")]
        string F84725_GetWaterPipeProperties(int pipeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84725_SaveWaterPipePropert" +
            "ies", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84725_SaveWaterPipePropert" +
            "iesResponse")]
        int F84725_SaveWaterPipeProperties(int pipeId, string waterPipeProperties, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84726_GetWaterPipeLocation" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84726_GetWaterPipeLocation" +
            "Response")]
        string F84726_GetWaterPipeLocation(int pipeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84726_SaveWaterPipeLocatio" +
            "n", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84726_SaveWaterPipeLocatio" +
            "nResponse")]
        int F84726_SaveWaterPipeLocation(int pipeId, string waterPipeLocation, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetSystemId", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetSystemIdResponse")]
        int GetSystemId(int userId, int formNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8901_GetWorkOrderEngine", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8901_GetWorkOrderEngineRes" +
            "ponse")]
        string F8901_GetWorkOrderEngine(int systemId, int isopen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8901_GetWorkOrderType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8901_GetWorkOrderTypeRespo" +
            "nse")]
        string F8901_GetWorkOrderType(int systemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8901_SaveWorkOrderEngine", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8901_SaveWorkOrderEngineRe" +
            "sponse")]
        string F8901_SaveWorkOrderEngine(string workOrderItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8902_Delete", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8902_DeleteResponse")]
        void F8902_Delete(int workId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8902_GetHeader", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8902_GetHeaderResponse")]
        string F8902_GetHeader(int workId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8902_SaveHeader", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8902_SaveHeaderResponse")]
        void F8902_SaveHeader(string header, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8904_GetEventGridDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8904_GetEventGridDetailsRe" +
            "sponse")]
        string F8904_GetEventGridDetails(int workId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8910_GetWorkOrderGeneral", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8910_GetWorkOrderGeneralRe" +
            "sponse")]
        string F8910_GetWorkOrderGeneral(int workorderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8910_SaveWorkOrderGeneral", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8910_SaveWorkOrderGeneralR" +
            "esponse")]
        string F8910_SaveWorkOrderGeneral(string workOrderGeneral, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8912_GetWorkOrderCallIn", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8912_GetWorkOrderCallInRes" +
            "ponse")]
        string F8912_GetWorkOrderCallIn(int workorderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8912_SaveWorkOrderCallIn", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8912_SaveWorkOrderCallInRe" +
            "sponse")]
        string F8912_SaveWorkOrderCallIn(string workOrderCall, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9001_GetNextWorkingDay", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9001_GetNextWorkingDayResp" +
            "onse")]
        System.DateTime F9001_GetNextWorkingDay();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9002_GetUserDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9002_GetUserDetailsRespons" +
            "e")]
        string F9002_GetUserDetails(int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9008_GetReportDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9008_GetReportDetailsRespo" +
            "nse")]
        string F9008_GetReportDetails(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9008_SaveReportDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9008_SaveReportDetailsResp" +
            "onse")]
        void F9008_SaveReportDetails(int userId, string printerConf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F9013_CheckNextNumber", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F9013_CheckNextNumberRespon" +
            "se")]
        System.Data.DataSet F9013_CheckNextNumber(int rollYear, int nextNum, string formula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8000_GetGDocBusiness", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8000_GetGDocBusinessRespon" +
            "se")]
        string F8000_GetGDocBusiness();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8000_GetGDocDiameter", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8000_GetGDocDiameterRespon" +
            "se")]
        string F8000_GetGDocDiameter(int featureClassId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8000_GetGDocPropertyRefere" +
            "nce", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8000_GetGDocPropertyRefere" +
            "nceResponse")]
        string F8000_GetGDocPropertyReference(int featureClassId, string refField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8000_GetGDocUser", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8000_GetGDocUserResponse")]
        string F8000_GetGDocUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8016_GetStoppageEventDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8016_GetStoppageEventDetai" +
            "lsResponse")]
        string F8016_GetStoppageEventDetails(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8016_SaveStoppageEventDeta" +
            "ils", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8016_SaveStoppageEventDeta" +
            "ilsResponse")]
        string F8016_SaveStoppageEventDetails(string eventItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8040_DeleteTime", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8040_DeleteTimeResponse")]
        void F8040_DeleteTime(int timeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8040_CheckEventId", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8040_CheckEventIdResponse")]
        int F8040_CheckEventId(int formId, int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8040_ListTimeInformation", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8040_ListTimeInformationRe" +
            "sponse")]
        string F8040_ListTimeInformation(int formId, int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8040_ListTimeResourceInfor" +
            "mation", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8040_ListTimeResourceInfor" +
            "mationResponse")]
        string F8040_ListTimeResourceInformation(int isactive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8040_SaveTime", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8040_SaveTimeResponse")]
        void F8040_SaveTime(string timeDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8040_UpdateTime", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8040_UpdateTimeResponse")]
        void F8040_UpdateTime(string timeDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8042_GetTimeFooterDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8042_GetTimeFooterDetailsR" +
            "esponse")]
        string F8042_GetTimeFooterDetails(int eventId, int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8044_DeleteMaterialItem", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8044_DeleteMaterialItemRes" +
            "ponse")]
        int F8044_DeleteMaterialItem(int materialId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8044_ListMaterialDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8044_ListMaterialDetailsRe" +
            "sponse")]
        string F8044_ListMaterialDetails(int formId, int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8044_ListMaterialsResource" +
            "Type", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8044_ListMaterialsResource" +
            "TypeResponse")]
        string F8044_ListMaterialsResourceType(int flagActiveAndAll, int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8044_SaveMaterialDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8044_SaveMaterialDetailsRe" +
            "sponse")]
        void F8044_SaveMaterialDetails(string materialItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8044_UpdateMaterialDetails" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8044_UpdateMaterialDetails" +
            "Response")]
        void F8044_UpdateMaterialDetails(string materialItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8046_GetMaterialsFooterDet" +
            "ails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8046_GetMaterialsFooterDet" +
            "ailsResponse")]
        string F8046_GetMaterialsFooterDetails(int eventId, int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8056_DeleteInspectionDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8056_DeleteInspectionDetai" +
            "lsResponse")]
        int F8056_DeleteInspectionDetails(int inspectionId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8056_ListInspectionDetails" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8056_ListInspectionDetails" +
            "Response")]
        string F8056_ListInspectionDetails(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8056_SaveInspectionDetails" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8056_SaveInspectionDetails" +
            "Response")]
        void F8056_SaveInspectionDetails(string eventItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F8056_UpdateInspectionDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F8056_UpdateInspectionDetai" +
            "lsResponse")]
        void F8056_UpdateInspectionDetails(string eventItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84121_DeleteSanitaryManhol" +
            "eProperties", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84121_DeleteSanitaryManhol" +
            "ePropertiesResponse")]
        void F84121_DeleteSanitaryManholeProperties(int manholeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84121_GetSanitaryManholePr" +
            "operties", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84121_GetSanitaryManholePr" +
            "opertiesResponse")]
        string F84121_GetSanitaryManholeProperties(int manholeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84121_SaveSanitaryManholeP" +
            "roperties", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84121_SaveSanitaryManholeP" +
            "ropertiesResponse")]
        int F84121_SaveSanitaryManholeProperties(int manholeId, string sanitaryManholeProperties, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84122_GetSanitaryManholeLo" +
            "cation", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84122_GetSanitaryManholeLo" +
            "cationResponse")]
        string F84122_GetSanitaryManholeLocation(int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84122_SaveSanitaryManholeL" +
            "ocation", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84122_SaveSanitaryManholeL" +
            "ocationResponse")]
        int F84122_SaveSanitaryManholeLocation(int keyId, string sanitaryManholeLocation, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84123_DeleteSanitaryPipePr" +
            "operties", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84123_DeleteSanitaryPipePr" +
            "opertiesResponse")]
        void F84123_DeleteSanitaryPipeProperties(int pipeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84123_GetSanitaryPipePrope" +
            "rties", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84123_GetSanitaryPipePrope" +
            "rtiesResponse")]
        string F84123_GetSanitaryPipeProperties(int pipeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84123_SaveSanitaryPipeProp" +
            "erties", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84123_SaveSanitaryPipeProp" +
            "ertiesResponse")]
        int F84123_SaveSanitaryPipeProperties(int pipeId, string sanitaryPipeProperties, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F84124_GetSanitaryPipeLocat" +
            "ion", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F84124_GetSanitaryPipeLocat" +
            "ionResponse")]
        string F84124_GetSanitaryPipeLocation(int keyId, int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35100_GetNeighborhoodHeade" +
            "rUserDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35100_GetNeighborhoodHeade" +
            "rUserDetailsResponse")]
        string F35100_GetNeighborhoodHeaderUserDetails(int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35100_SaveNeighborhoodHead" +
            "erDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35100_SaveNeighborhoodHead" +
            "erDetailsResponse")]
        int F35100_SaveNeighborhoodHeaderDetails(int nbhId, string nbhDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F3511_ExeNeighborhoodDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F3511_ExeNeighborhoodDetail" +
            "sResponse")]
        int F3511_ExeNeighborhoodDetails(int nbhId, string newnbhdName, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35100_DeleteNeighborhoodHe" +
            "ader", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35100_DeleteNeighborhoodHe" +
            "aderResponse")]
        void F35100_DeleteNeighborhoodHeader(int nbhdId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DuplicateNeighborhoodHeader" +
            "Check", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DuplicateNeighborhoodHeader" +
            "CheckResponse")]
        int DuplicateNeighborhoodHeaderCheck(int nbhId, string nbhDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29550_GetParcelSaleTrackin" +
            "gDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29550_GetParcelSaleTrackin" +
            "gDetailsResponse")]
        string F29550_GetParcelSaleTrackingDetails(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29550_GetPushOwner", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29550_GetPushOwnerResponse" +
            "")]
        string F29550_GetPushOwner(int saleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29550_GetParcelDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29550_GetParcelDetailsResp" +
            "onse")]
        string F29550_GetParcelDetails(string parcelIdDetails, int neewParcelId, int saleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29550_GetParcelSaleTrackin" +
            "gComboDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29550_GetParcelSaleTrackin" +
            "gComboDetailsResponse")]
        string F29550_GetParcelSaleTrackingComboDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29550_GetParcelsOwnerDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29550_GetParcelsOwnerDetai" +
            "lsResponse")]
        string F29550_GetParcelsOwnerDetails(string parcelIdDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29550_saveParcelSaleDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29550_saveParcelSaleDetail" +
            "sResponse")]
        int F29550_saveParcelSaleDetails(int eventId, string saleItems, string parcelItems, string ownerItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29600_GetSeniorExemptionDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29600_GetSeniorExemptionDe" +
            "tailsResponse")]
        string F29600_GetSeniorExemptionDetails(int eventId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29600_GetSeniorExemptionCo" +
            "de", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29600_GetSeniorExemptionCo" +
            "deResponse")]
        string F29600_GetSeniorExemptionCode(string effectiveDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29600_saveSeniorExemptionD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29600_saveSeniorExemptionD" +
            "etailsResponse")]
        int F29600_saveSeniorExemptionDetails(int eventId, string seniorExemptDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27081_GetTIFDistrictDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27081_GetTIFDistrictDetail" +
            "sResponse")]
        string F27081_GetTIFDistrictDetails(int TIFIdDistId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27081_SaveTIFDistrictDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27081_SaveTIFDistrictDetai" +
            "lsResponse")]
        int F27081_SaveTIFDistrictDetails(System.Nullable<int> TIFIdDistId, string TIFDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27081_DeleteTIFDistrictDet" +
            "ails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27081_DeleteTIFDistrictDet" +
            "ailsResponse")]
        string F27081_DeleteTIFDistrictDetails(int TIFIdDistId, int userId, bool IsReadyToDelete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27081_GetTIFComboBoxDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27081_GetTIFComboBoxDetail" +
            "sResponse")]
        string F27081_GetTIFComboBoxDetails(int RollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F34100_GetAglandDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F34100_GetAglandDetailsResp" +
            "onse")]
        string F34100_GetAglandDetails(int AglandID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F34100_SaveAglandDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F34100_SaveAglandDetailsRes" +
            "ponse")]
        int F34100_SaveAglandDetails(System.Nullable<int> AglandID, string AglandDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F34100_DeleteAglandDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F34100_DeleteAglandDetailsR" +
            "esponse")]
        void F34100_DeleteAglandDetails(int Agland, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F34110_GetTopDollarDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F34110_GetTopDollarDetailsR" +
            "esponse")]
        string F34110_GetTopDollarDetails(int TopDollarID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F34110_SaveTopDollarDetails" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F34110_SaveTopDollarDetails" +
            "Response")]
        int F34110_SaveTopDollarDetails(System.Nullable<int> TopDollarID, string TopDollarDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F34110_DeleteTopDollarDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F34110_DeleteTopDollarDetai" +
            "lsResponse")]
        void F34110_DeleteTopDollarDetails(int TopDollarId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F34110_CropTopDollar", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F34110_CropTopDollarRespons" +
            "e")]
        string F34110_CropTopDollar(decimal CropDollar, decimal CountyFactor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29660_GetTIFEventDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29660_GetTIFEventDetailsRe" +
            "sponse")]
        string F29660_GetTIFEventDetails(int EventId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F29660_SaveTIFEventDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F29660_SaveTIFEventDetailsR" +
            "esponse")]
        int F29660_SaveTIFEventDetails(System.Nullable<int> EventId, int TIfId, decimal BaseValue, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetNeighborhoodCfgDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetNeighborhoodCfgDetailsRe" +
            "sponse")]
        string GetNeighborhoodCfgDetails(int nbhdId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetNeighborhoodCfgChoice", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetNeighborhoodCfgChoiceRes" +
            "ponse")]
        string GetNeighborhoodCfgChoice(int nbhdId, int nbhdCfgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35102_SaveNeighborhoodCfgD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35102_SaveNeighborhoodCfgD" +
            "etailsResponse")]
        void F35102_SaveNeighborhoodCfgDetails(int neighborhoodConfigId, string neighborhoodConfigDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListNeighborhoodParcelLocks" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListNeighborhoodParcelLocks" +
            "Response")]
        string ListNeighborhoodParcelLocks(int neighborId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/UpdateParcelLockingDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/UpdateParcelLockingDetailsR" +
            "esponse")]
        string UpdateParcelLockingDetails(int keyId, int valueLock, int adminLock, int lockAppraisal, int primaryId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15050_SaveFeeManagement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15050_SaveFeeManagementRes" +
            "ponse")]
        int F15050_SaveFeeManagement(int feeId, string description, decimal amount, int accountId, int userId, byte feeTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15050_ApplyFees", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15050_ApplyFeesResponse")]
        int F15050_ApplyFees(string feeXML, decimal amount, string description, int accountId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15050_ListFeeTypes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15050_ListFeeTypesResponse" +
            "")]
        string F15050_ListFeeTypes(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15050_RemoveTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15050_RemoveTemplateRespon" +
            "se")]
        void F15050_RemoveTemplate(int feeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27000_GetMiscAssessment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27000_GetMiscAssessmentRes" +
            "ponse")]
        string F27000_GetMiscAssessment(int madistrictId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27000_ListMADistrictItemTy" +
            "pe", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27000_ListMADistrictItemTy" +
            "peResponse")]
        string F27000_ListMADistrictItemType(int madistrictTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27000_ListMADistrictType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27000_ListMADistrictTypeRe" +
            "sponse")]
        string F27000_ListMADistrictType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27000_SaveMADetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27000_SaveMADetailsRespons" +
            "e")]
        int F27000_SaveMADetails(string distributionItems, string subHeaderItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27006_ListALLOwnerDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27006_ListALLOwnerDetailsR" +
            "esponse")]
        string F27006_ListALLOwnerDetails(string firstName, string lastName, string address1, string address2, string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27006_ListParcelOwnership", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27006_ListParcelOwnershipR" +
            "esponse")]
        string F27006_ListParcelOwnership(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27006_SaveParcelOwnership", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27006_SaveParcelOwnershipR" +
            "esponse")]
        void F27006_SaveParcelOwnership(string parcelOwnership, int parcelId, int userId, bool isfuturePush);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27007_GetParcelHeaderSlimD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27007_GetParcelHeaderSlimD" +
            "etailsResponse")]
        string F27007_GetParcelHeaderSlimDetails(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListMOwnerType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListMOwnerTypeResponse")]
        string ListMOwnerType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27008_ListParcelOwnership", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27008_ListParcelOwnershipR" +
            "esponse")]
        string F27008_ListParcelOwnership(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27008_SaveParcelOwnership", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27008_SaveParcelOwnershipR" +
            "esponse")]
        void F27008_SaveParcelOwnership(string parcelOwnership, int parcelId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F27008_GetOwnerDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F27008_GetOwnerDetailsRespo" +
            "nse")]
        string F27008_GetOwnerDetails(int ownerId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35000_GetAppraisalSummaryO" +
            "bjects", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35000_GetAppraisalSummaryO" +
            "bjectsResponse")]
        string F35000_GetAppraisalSummaryObjects(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35000_CheckAppraisalSummar" +
            "yUser", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35000_CheckAppraisalSummar" +
            "yUserResponse")]
        string F35000_CheckAppraisalSummaryUser(int valueSliceId, int objectId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35000_InsertObject", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35000_InsertObjectResponse" +
            "")]
        int F35000_InsertObject(int parcelId, short objectTypeId, string description, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35000_SaveAppraisal", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35000_SaveAppraisalRespons" +
            "e")]
        void F35000_SaveAppraisal(int parcelId, string propertiesXML, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35000_InsertOrUpdateValueS" +
            "lice", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35000_InsertOrUpdateValueS" +
            "liceResponse")]
        int F35000_InsertOrUpdateValueSlice(System.Nullable<int> valueSliceId, string valueSliceHeaderItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35000_ListObjectSliceTypes" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35000_ListObjectSliceTypes" +
            "Response")]
        string F35000_ListObjectSliceTypes(System.Nullable<int> ParcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35000_ListSliceTypes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35000_ListSliceTypesRespon" +
            "se")]
        string F35000_ListSliceTypes(int objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35000_ObjectTotal", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35000_ObjectTotalResponse")]
        string F35000_ObjectTotal(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35001_DeleteValueSlice", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35001_DeleteValueSliceResp" +
            "onse")]
        void F35001_DeleteValueSlice(int valueSliceId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35001_GetAdjustmentSliceVa" +
            "lue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35001_GetAdjustmentSliceVa" +
            "lueResponse")]
        string F35001_GetAdjustmentSliceValue(int valueSliceId, byte type, bool isvalue, decimal adjustmentValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35001_GetValueSliceHeader", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35001_GetValueSliceHeaderR" +
            "esponse")]
        string F35001_GetValueSliceHeader(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F35002_ListAdjustmentType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F35002_ListAdjustmentTypeRe" +
            "sponse")]
        string F35002_ListAdjustmentType(System.Nullable<int> masterFromNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/SaveNeighborhoodHeaderDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/SaveNeighborhoodHeaderDetai" +
            "lsResponse")]
        int SaveNeighborhoodHeaderDetails(int nbhId, string nbhDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetParentNeighborhoodHeader" +
            "Details", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetParentNeighborhoodHeader" +
            "DetailsResponse")]
        string GetParentNeighborhoodHeaderDetails(int rollyear, int type, int parentNeighborhood);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetNeighborhoodHeaderDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetNeighborhoodHeaderDetail" +
            "sResponse")]
        string GetNeighborhoodHeaderDetails(int neighborId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteNeighborhoodHeader", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteNeighborhoodHeaderRes" +
            "ponse")]
        int DeleteNeighborhoodHeader(int nbhdId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25090_GetParcelOwnerShip", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25090_GetParcelOwnerShipRe" +
            "sponse")]
        string F25090_GetParcelOwnerShip(int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25090_GetPhotos", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25090_GetPhotosResponse")]
        string F25090_GetPhotos(int keyId, int form);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25090_ParcelSale", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25090_ParcelSaleResponse")]
        string F25090_ParcelSale(int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25000_GetCheckOutDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25000_GetCheckOutDetailsRe" +
            "sponse")]
        TerraScan.BusinessEntities.F25000FieldUseData F25000_GetCheckOutDetails(int snapShotId, string snapShotValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25051_GetParcelDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25051_GetParcelDetailsResp" +
            "onse")]
        string F25051_GetParcelDetails(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25051OwnerOccupied", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25051OwnerOccupiedResponse" +
            "")]
        string F25051OwnerOccupied();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25051ParcelClassTypes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25051ParcelClassTypesRespo" +
            "nse")]
        string F25051ParcelClassTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/f25051ParcelHeaderDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/f25051ParcelHeaderDetailsRe" +
            "sponse")]
        int f25051ParcelHeaderDetails(int parcelId, string parcelDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListPrimaryImprovement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListPrimaryImprovementRespo" +
            "nse")]
        string ListPrimaryImprovement();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListPrimaryLandType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListPrimaryLandTypeResponse" +
            "")]
        string ListPrimaryLandType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/UpdateParcelHeaderDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/UpdateParcelHeaderDetailsRe" +
            "sponse")]
        int UpdateParcelHeaderDetails(int parcelId, string parcelDetails, bool isCopyHeader, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/UpdateParcelHeaderFormDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/UpdateParcelHeaderFormDetai" +
            "lsResponse")]
        int UpdateParcelHeaderFormDetails(int parcelId, string parcelDetails, int userId, int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F26000_GetParcelFormDetails" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F26000_GetParcelFormDetails" +
            "Response")]
        string F26000_GetParcelFormDetails(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F26000_ExemptionDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F26000_ExemptionDetailsResp" +
            "onse")]
        string F26000_ExemptionDetails(int parcelId, string exemptionCode, System.Nullable<decimal> exemptionFromAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F26000_ExemptFieldDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F26000_ExemptFieldDetailsRe" +
            "sponse")]
        string F26000_ExemptFieldDetails(int parcelId, int exmptionId, string exemptionCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F26000_ClassCodeDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F26000_ClassCodeDetailsResp" +
            "onse")]
        string F26000_ClassCodeDetails(string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/PrimaryImprovementList", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/PrimaryImprovementListRespo" +
            "nse")]
        string PrimaryImprovementList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/PrimaryLandTypeList", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/PrimaryLandTypeListResponse" +
            "")]
        string PrimaryLandTypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F26000_GetApprisalType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F26000_GetApprisalTypeRespo" +
            "nse")]
        string F26000_GetApprisalType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/f2101_GetLocationSelection", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/f2101_GetLocationSelectionR" +
            "esponse")]
        string f2101_GetLocationSelection(string locationCode, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/f2102_GetGroupingSelection", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/f2102_GetGroupingSelectionR" +
            "esponse")]
        string f2102_GetGroupingSelection(string groupCode, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/f2103_GetExemptionSelection" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/f2103_GetExemptionSelection" +
            "Response")]
        string f2103_GetExemptionSelection(string exemptionCode, string description, System.Nullable<decimal> percent, System.Nullable<decimal> maximum, System.Nullable<int> rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetParcelTypeDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetParcelTypeDetailsRespons" +
            "e")]
        string GetParcelTypeDetails(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetParcelAttachmentDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetParcelAttachmentDetailsR" +
            "esponse")]
        string GetParcelAttachmentDetails(int oldParcelID, int newParcelID, int userID, int moduleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/CreateNewParcelCopy", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/CreateNewParcelCopyResponse" +
            "")]
        int CreateNewParcelCopy(int parcelId, int parcelTypeId, int copyAllObjects, int copyAllSlices, int copyAttachments, int copyComments, string parcelElements, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2001_getParcelLockingDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2001_getParcelLockingDetai" +
            "lsResponse")]
        string F2001_getParcelLockingDetails(int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetParcelType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetParcelTypeResponse")]
        string GetParcelType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2001_getParcelLockingUsern" +
            "ame", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2001_getParcelLockingUsern" +
            "ameResponse")]
        string F2001_getParcelLockingUsername(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2001_GetValidUserName", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2001_GetValidUserNameRespo" +
            "nse")]
        int F2001_GetValidUserName(int prcelId, int userId, string formNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F2001_UpdateParcelLockingDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F2001_UpdateParcelLockingDe" +
            "tailsResponse")]
        int F2001_UpdateParcelLockingDetails(int keyId, int valueLock, int adminLock, int lockAppraisal, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15050_ComboData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15050_ComboDataResponse")]
        string F15050_ComboData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15050_getDatas", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15050_getDatasResponse")]
        string F15050_getDatas(int feeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15018_GetMiscReceipt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15018_GetMiscReceiptRespon" +
            "se")]
        string F15018_GetMiscReceipt(int receiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1024_SaveDistrictDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1024_SaveDistrictDetailsRe" +
            "sponse")]
        string F1024_SaveDistrictDetails(int levyOption, int districtId, decimal amountValue, int userId, bool IsReplace, string SubFundXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictDistributionData" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictDistributionData" +
            "Response")]
        string GetDistrictDistributionData(int LevyOptionId, int districtId, decimal amount, int userId, string subfundsXML, bool isreplace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictDataResponse")]
        string GetDistrictData(int districtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15018_ListAccountDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15018_ListAccountDetailsRe" +
            "sponse")]
        string F15018_ListAccountDetails(string filterValue, System.Nullable<int> rollYear, System.Nullable<int> formNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15019_CheckRollYear", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15019_CheckRollYearRespons" +
            "e")]
        int F15019_CheckRollYear(int statementId, int receiptSourceId, string journalItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1502_DeleteAccountElementM" +
            "gmt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1502_DeleteAccountElementM" +
            "gmtResponse")]
        void F1502_DeleteAccountElementMgmt(string functionId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1502_GetAccountElementMgmt" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1502_GetAccountElementMgmt" +
            "Response")]
        string F1502_GetAccountElementMgmt(string function, string description, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1502_SaveAccountElementMgm" +
            "t", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1502_SaveAccountElementMgm" +
            "tResponse")]
        int F1502_SaveAccountElementMgmt(string functionElemnts, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15020_GetReceiptDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15020_GetReceiptDetailsRes" +
            "ponse")]
        string F15020_GetReceiptDetails(int receiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15020_ListHistoryGrid", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15020_ListHistoryGridRespo" +
            "nse")]
        string F15020_ListHistoryGrid(int statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1503_DeleteGenericElementM" +
            "gmt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1503_DeleteGenericElementM" +
            "gmtResponse")]
        void F1503_DeleteGenericElementMgmt(string elementId, string formName, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1503_GetGenericElementMgmt" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1503_GetGenericElementMgmt" +
            "Response")]
        string F1503_GetGenericElementMgmt(string keyValue, string description, string formName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1503_SaveGenericElementMgm" +
            "t", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1503_SaveGenericElementMgm" +
            "tResponse")]
        int F1503_SaveGenericElementMgmt(string functionElemnts, string formName, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15104_GetReceiptPayment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15104_GetReceiptPaymentRes" +
            "ponse")]
        string F15104_GetReceiptPayment(int receiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15104_UpdateReceiptPayment" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15104_UpdateReceiptPayment" +
            "Response")]
        void F15104_UpdateReceiptPayment(string receiptPayment, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1512_GetDistrictSelectionD" +
            "ata", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1512_GetDistrictSelectionD" +
            "ataResponse")]
        string F1512_GetDistrictSelectionData(int districtId, string district, string description, int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1513_GetFundSelection", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1513_GetFundSelectionRespo" +
            "nse")]
        string F1513_GetFundSelection(string fund, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1513_CentralFundItemValida" +
            "tion", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1513_CentralFundItemValida" +
            "tionResponse")]
        int F1513_CentralFundItemValidation(int fundId, int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1515_GetSubFundSelection", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1515_GetSubFundSelectionRe" +
            "sponse")]
        string F1515_GetSubFundSelection(string subFund, string description, int rollYear, int iscash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1530_GetInstitutionDetail", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1530_GetInstitutionDetailR" +
            "esponse")]
        string F1530_GetInstitutionDetail(int institutionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1530_SaveInstitution", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1530_SaveInstitutionRespon" +
            "se")]
        int F1530_SaveInstitution(int institutionId, string institutionElements, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1531_GetCashAccountDetail", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1531_GetCashAccountDetailR" +
            "esponse")]
        string F1531_GetCashAccountDetail(int registerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1531_SaveCashAccount", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1531_SaveCashAccountRespon" +
            "se")]
        int F1531_SaveCashAccount(int registerId, string registerItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1532_GetInstitutionContact" +
            "Detail", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1532_GetInstitutionContact" +
            "DetailResponse")]
        string F1532_GetInstitutionContactDetail(int contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1532_SaveInstitutionContac" +
            "t", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1532_SaveInstitutionContac" +
            "tResponse")]
        int F1532_SaveInstitutionContact(int contactId, string acctEmelemts, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25000_GetParcelDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25000_GetParcelDetailsResp" +
            "onse")]
        string F25000_GetParcelDetails(int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25090_FieldSummary", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25090_FieldSummaryResponse" +
            "")]
        string F25090_FieldSummary(int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25090_BuildingPermits", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25090_BuildingPermitsRespo" +
            "nse")]
        string F25090_BuildingPermits(int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25090_GetAncestryData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25090_GetAncestryDataRespo" +
            "nse")]
        string F25090_GetAncestryData(int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25090_GetCorrection", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25090_GetCorrectionRespons" +
            "e")]
        string F25090_GetCorrection(int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F25090_GetHistoryData", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F25090_GetHistoryDataRespon" +
            "se")]
        string F25090_GetHistoryData(int keyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15007_CheckDuplicateAccoun" +
            "t", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15007_CheckDuplicateAccoun" +
            "tResponse")]
        int F15007_CheckDuplicateAccount(int accountId, string acctEmelemts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1501_CreateOrEditGLConfigD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1501_CreateOrEditGLConfigD" +
            "etailsResponse")]
        int F1501_CreateOrEditGLConfigDetails(int configId, string configElements, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1501_GetGLConfigDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1501_GetGLConfigDetailsRes" +
            "ponse")]
        string F1501_GetGLConfigDetails(int configId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1501_ListGLConfigDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1501_ListGLConfigDetailsRe" +
            "sponse")]
        string F1501_ListGLConfigDetails(int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1501_ListRollYear", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1501_ListRollYearResponse")]
        string F1501_ListRollYear();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15010_DeleteAffidavitDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15010_DeleteAffidavitDetai" +
            "lsResponse")]
        void F15010_DeleteAffidavitDetails(int statementId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetAffidavitStatemen" +
            "tId", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetAffidavitStatemen" +
            "tIdResponse")]
        string F15010_GetAffidavitStatementId(int formId, string orderField, string orderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetDistrictSelection" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetDistrictSelection" +
            "Response")]
        string F15010_GetDistrictSelection(int exciseRateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetExciseIndividualT" +
            "ype", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetExciseIndividualT" +
            "ypeResponse")]
        string F15010_GetExciseIndividualType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetExciseTaxAffidavi" +
            "tCalulateAmountDue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetExciseTaxAffidavi" +
            "tCalulateAmountDueResponse")]
        string F15010_GetExciseTaxAffidavitCalulateAmountDue(System.DateTime saleDate, System.DateTime paymentDate, int exciseRateId, int taxCode, double taxableSaleAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetExciseTaxAffidavi" +
            "tDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetExciseTaxAffidavi" +
            "tDetailsResponse")]
        string F15010_GetExciseTaxAffidavitDetails(int statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetOwnerDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetOwnerDetailsRespo" +
            "nse")]
        string F15010_GetOwnerDetails(int ownerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetOwnerStatus", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetOwnerStatusRespon" +
            "se")]
        string F15010_GetOwnerStatus(int ownerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetParcelDetail", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15010_GetParcelDetailRespo" +
            "nse")]
        string F15010_GetParcelDetail(System.Nullable<int> parcelId, string parcelNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15010_SaveAffiDavitDetails" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15010_SaveAffiDavitDetails" +
            "Response")]
        int F15010_SaveAffiDavitDetails(int statementId, string partiesAddress, string parcelDetails, string exciseAffidavitDetails, string mobileHomeDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15011_GetExciseStatement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15011_GetExciseStatementRe" +
            "sponse")]
        string F15011_GetExciseStatement(int statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15010_ListExciseWAC", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15010_ListExciseWACRespons" +
            "e")]
        string F15010_ListExciseWAC();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15010_ListExciseIndividual" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15010_ListExciseIndividual" +
            "Response")]
        string F15010_ListExciseIndividual(string ExciseIndividualElements);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15010_ListOpenSpaceField", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15010_ListOpenSpaceFieldRe" +
            "sponse")]
        string F15010_ListOpenSpaceField(string parcelIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15011_SaveExciseStatement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15011_SaveExciseStatementR" +
            "esponse")]
        void F15011_SaveExciseStatement(int statementId, System.DateTime interestDate, System.DateTime receiptDate, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15012_GetExciseReceipt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15012_GetExciseReceiptResp" +
            "onse")]
        string F15012_GetExciseReceipt(int statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15013_DeleteExciseTaxRate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15013_DeleteExciseTaxRateR" +
            "esponse")]
        int F15013_DeleteExciseTaxRate(int exciseRateId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15013_GetAccountName", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15013_GetAccountNameRespon" +
            "se")]
        string F15013_GetAccountName(int accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15013_GetDistrictName", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15013_GetDistrictNameRespo" +
            "nse")]
        string F15013_GetDistrictName(int districtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15013_GetExciseTaxRate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15013_GetExciseTaxRateResp" +
            "onse")]
        string F15013_GetExciseTaxRate(int exciseRateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15013_ListExciseTaxRate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15013_ListExciseTaxRateRes" +
            "ponse")]
        string F15013_ListExciseTaxRate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15013_SaveExciseTaxRate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15013_SaveExciseTaxRateRes" +
            "ponse")]
        int F15013_SaveExciseTaxRate(int exciseRateId, string exciseTaxDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15015_ListStatementOwnersh" +
            "ip", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15015_ListStatementOwnersh" +
            "ipResponse")]
        string F15015_ListStatementOwnership(int statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15015_ListMOwnerType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15015_ListMOwnerTypeRespon" +
            "se")]
        string F15015_ListMOwnerType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15015_SaveStatementOwnersh" +
            "ip", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15015_SaveStatementOwnersh" +
            "ipResponse")]
        void F15015_SaveStatementOwnership(int statementId, string statementOwner, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15015_ListALLOwnerDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15015_ListALLOwnerDetailsR" +
            "esponse")]
        string F15015_ListALLOwnerDetails(string firstName, string lastName, string address1, string address2, string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15016_GetStatementHeaderSl" +
            "imDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15016_GetStatementHeaderSl" +
            "imDetailsResponse")]
        string F15016_GetStatementHeaderSlimDetails(int statementlId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1226_UpdateCashLedgerStatu" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1226_UpdateCashLedgerStatu" +
            "sResponse")]
        void F1226_UpdateCashLedgerStatus(int clid, int userId, System.DateTime functionDate, int functionId, int loginUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1405_SaveMasterReceipt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1405_SaveMasterReceiptResp" +
            "onse")]
        int F1405_SaveMasterReceipt(int statementId, int receiptSourceId, string otherParameterInfo, System.Nullable<int> sharedPaymentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1410_DeleteOwnerReceipting" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1410_DeleteOwnerReceipting" +
            "Response")]
        string F1410_DeleteOwnerReceipting(int ownerId, string ownerXml, string statementXml, int userId, string formBackColor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1410_GetOwnerReceipting", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1410_GetOwnerReceiptingRes" +
            "ponse")]
        string F1410_GetOwnerReceipting(string interestDate, string ownerId, string parcelIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1410_ListOwnerReceipting", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1410_ListOwnerReceiptingRe" +
            "sponse")]
        string F1410_ListOwnerReceipting(string interestDate, string statementXml, string formBackColor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1410_SaveOwnerReceipting", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1410_SaveOwnerReceiptingRe" +
            "sponse")]
        string F1410_SaveOwnerReceipting(int userId, string receiptDate, string interestDate, int ppaymentId, int paymentOption, string statementXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1410_SaveOwnerReceiptPrevi" +
            "ew", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1410_SaveOwnerReceiptPrevi" +
            "ewResponse")]
        int F1410_SaveOwnerReceiptPreview(int userId, string statementDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1410_ListAttachmentDetails" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1410_ListAttachmentDetails" +
            "Response")]
        string F1410_ListAttachmentDetails(int formId, string keyIds, int userId, int moduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1423_ListMortgageName", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1423_ListMortgageNameRespo" +
            "nse")]
        string F1423_ListMortgageName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1423_UpdateRealPropertySta" +
            "tement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1423_UpdateRealPropertySta" +
            "tementResponse")]
        void F1423_UpdateRealPropertyStatement(int statementId, string statementItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1500_CreateOrEditAccount", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1500_CreateOrEditAccountRe" +
            "sponse")]
        int F1500_CreateOrEditAccount(int accountId, string acctEmelemts, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1500_GetConfigurationValue" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1500_GetConfigurationValue" +
            "Response")]
        string F1500_GetConfigurationValue(string cfgName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1500_GetDescription", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1500_GetDescriptionRespons" +
            "e")]
        string F1500_GetDescription(string keyId, string elementName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1500_GetFunctionItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1500_GetFunctionItemsRespo" +
            "nse")]
        string F1500_GetFunctionItems(string function);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1500_GetSubFundItems", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1500_GetSubFundItemsRespon" +
            "se")]
        string F1500_GetSubFundItems(string subFund, short rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1500_ListAccountDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1500_ListAccountDetailsRes" +
            "ponse")]
        string F1500_ListAccountDetails(int accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1500_ListRegisterType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1500_ListRegisterTypeRespo" +
            "nse")]
        string F1500_ListRegisterType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1505ExecuteCopyDistrict", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1505ExecuteCopyDistrictRes" +
            "ponse")]
        string F1505ExecuteCopyDistrict(int districtId, string districtText, int rollyear, string description, bool isactive, int districtTypeId, int ExciseId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15002_CheckDistrict", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15002_CheckDistrictRespons" +
            "e")]
        int F15002_CheckDistrict(System.Nullable<int> districtId, string district, int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15002_CreateOrEditDistrict" +
            "Mgmt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15002_CreateOrEditDistrict" +
            "MgmtResponse")]
        int F15002_CreateOrEditDistrictMgmt(System.Nullable<int> districtId, string districtDetails, string districtFundItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15002_GetDistirctFundDetai" +
            "ls", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15002_GetDistirctFundDetai" +
            "lsResponse")]
        string F15002_GetDistirctFundDetails(System.Nullable<int> districtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15002_ListAllFunds", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15002_ListAllFundsResponse" +
            "")]
        string F15002_ListAllFunds(System.Nullable<int> fundId, string fund, System.Nullable<int> rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15002_GetDistrictType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15002_GetDistrictTypeRespo" +
            "nse")]
        string F15002_GetDistrictType(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15003_CheckFund", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15003_CheckFundResponse")]
        int F15003_CheckFund(System.Nullable<int> fundId, string fund, int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15003_CreateOrEditFundMgmt" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15003_CreateOrEditFundMgmt" +
            "Response")]
        int F15003_CreateOrEditFundMgmt(System.Nullable<int> fundId, string fund, int rollYear, string description, System.Nullable<int> fundGroupId, string fundItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15003_GetFundSubFundDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15003_GetFundSubFundDetail" +
            "sResponse")]
        string F15003_GetFundSubFundDetails(System.Nullable<int> fundId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15003_ListAvailableSubFund" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15003_ListAvailableSubFund" +
            "sResponse")]
        string F15003_ListAvailableSubFunds(string subFund, string description, System.Nullable<int> rollYear, System.Nullable<int> fundId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15003_ListFundType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15003_ListFundTypeResponse" +
            "")]
        string F15003_ListFundType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15004_CheckDuplicateAgency" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15004_CheckDuplicateAgency" +
            "Response")]
        int F15004_CheckDuplicateAgency(int agencyId, string agencyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15004_CreateOrEditAgencyDe" +
            "tails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15004_CreateOrEditAgencyDe" +
            "tailsResponse")]
        int F15004_CreateOrEditAgencyDetails(int agencyId, string acctEmelemts, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15004_GetAgencyDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15004_GetAgencyDetailsResp" +
            "onse")]
        string F15004_GetAgencyDetails(int agencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15005_CheckSubFund", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15005_CheckSubFundResponse" +
            "")]
        int F15005_CheckSubFund(System.Nullable<int> subFundId, string subFund, int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1108_GetSubmitAffidavit", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1108_GetSubmitAffidavitRes" +
            "ponse")]
        string F1108_GetSubmitAffidavit(string statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1108_GetSubmitAffidavitRep" +
            "ly", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1108_GetSubmitAffidavitRep" +
            "lyResponse")]
        string F1108_GetSubmitAffidavitReply(string reetReplyXml, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1108_ListConfigurationDeta" +
            "il", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1108_ListConfigurationDeta" +
            "ilResponse")]
        string F1108_ListConfigurationDetail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1108_ListManagementQueue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1108_ListManagementQueueRe" +
            "sponse")]
        string F1108_ListManagementQueue(string parcelNumber, string name, string receiptDate, string address, string taxCode, string receiptNumber, string statementNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1108_SaveReplyReetXml", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1108_SaveReplyReetXmlRespo" +
            "nse")]
        string F1108_SaveReplyReetXml(string reetXml, string reetReplyXml, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1109_FilterSearchAffidavit" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1109_FilterSearchAffidavit" +
            "Response")]
        string F1109_FilterSearchAffidavit(string filterXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1109_ListManagementQueue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1109_ListManagementQueueRe" +
            "sponse")]
        string F1109_ListManagementQueue(string parcelNumber, string name, string receiptDate, string address, string taxCode, string treasurer, string assessor, int rollYear, string statementNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1109_ListRollYear", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1109_ListRollYearResponse")]
        string F1109_ListRollYear();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1109_ManagementQueueFilter" +
            "Result", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1109_ManagementQueueFilter" +
            "ResultResponse")]
        string F1109_ManagementQueueFilterResult(int statusFilterId, int rollYear, string filterFromDate, string filterToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1210_DisbursementAccountNa" +
            "mes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1210_DisbursementAccountNa" +
            "mesResponse")]
        string F1210_DisbursementAccountNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1210_GetDisbursementDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1210_GetDisbursementDetail" +
            "sResponse")]
        string F1210_GetDisbursementDetails(System.DateTime postDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1210_SaveDisbursement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1210_SaveDisbursementRespo" +
            "nse")]
        int F1210_SaveDisbursement(int registerId, int userId, System.DateTime postDate, string agencies, int overrideStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1211_CreateChecks", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1211_CreateChecksResponse")]
        int F1211_CreateChecks(int userId, string createChecksTclId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1211_DeleteCheckStaging", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1211_DeleteCheckStagingRes" +
            "ponse")]
        void F1211_DeleteCheckStaging(string tclIdDelete, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1211_GetDisbursementCheckL" +
            "ist", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1211_GetDisbursementCheckL" +
            "istResponse")]
        string F1211_GetDisbursementCheckList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1211_UpdateAgencyValidStat" +
            "us", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1211_UpdateAgencyValidStat" +
            "usResponse")]
        void F1211_UpdateAgencyValidStatus(string tclIds, int validStatus, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1211_UpdateCheckStaging", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1211_UpdateCheckStagingRes" +
            "ponse")]
        void F1211_UpdateCheckStaging(int tclId, string disbursementCheck, string checkItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1214_AccountNames", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1214_AccountNamesResponse")]
        string F1214_AccountNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1214_ListRefundPayments", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1214_ListRefundPaymentsRes" +
            "ponse")]
        string F1214_ListRefundPayments(int form, string whereCondnSql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1214_PrepareChecks", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1214_PrepareChecksResponse" +
            "")]
        int F1214_PrepareChecks(int registerId, int ownerId, System.DateTime interestDate, int userId, string paymentItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1220_AccountNames", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1220_AccountNamesResponse")]
        string F1220_AccountNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1220_GetAccountRegisterDet" +
            "ails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1220_GetAccountRegisterDet" +
            "ailsResponse")]
        string F1220_GetAccountRegisterDetails(int registerId, System.DateTime beginningDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1220_GetReconciledDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1220_GetReconciledDetailsR" +
            "esponse")]
        string F1220_GetReconciledDetails(int registerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1220_ListAccountRegister", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1220_ListAccountRegisterRe" +
            "sponse")]
        string F1220_ListAccountRegister(int registerId, System.DateTime beginningDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1221_UpdateCashLedger", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1221_UpdateCashLedgerRespo" +
            "nse")]
        int F1221_UpdateCashLedger(int clid, int overRide, string checkDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1224_AccountNames", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1224_AccountNamesResponse")]
        string F1224_AccountNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1224_CreateChecks", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1224_CreateChecksResponse")]
        string F1224_CreateChecks(int registerId, int userId, long startingCheckNumber, string checkItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1224_GetCheckNumber", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1224_GetCheckNumberRespons" +
            "e")]
        string F1224_GetCheckNumber(int registerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1224_ListUnPrintedChecks", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1224_ListUnPrintedChecksRe" +
            "sponse")]
        string F1224_ListUnPrintedChecks(int registerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1226_DeleteCashLedger", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1226_DeleteCashLedgerRespo" +
            "nse")]
        void F1226_DeleteCashLedger(int clid, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1226_GetCashLedger", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1226_GetCashLedgerResponse" +
            "")]
        string F1226_GetCashLedger(int clid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1226_ListCashLedger", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1226_ListCashLedgerRespons" +
            "e")]
        string F1226_ListCashLedger();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16031_GetSpecialAssessment" +
            "Parcel", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16031_GetSpecialAssessment" +
            "ParcelResponse")]
        string F16031_GetSpecialAssessmentParcel(string parcelNumber, System.Nullable<int> parcelId, System.Nullable<int> rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16031_DeleteDistrictAssess" +
            "ment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16031_DeleteDistrictAssess" +
            "mentResponse")]
        string F16031_DeleteDistrictAssessment(int workingfileId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16031_SaveDistrictAssessme" +
            "ntDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16031_SaveDistrictAssessme" +
            "ntDetailsResponse")]
        int F16031_SaveDistrictAssessmentDetails(string districtProperty, string districtRates, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16031_CheckSpecialAssessme" +
            "nt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16031_CheckSpecialAssessme" +
            "ntResponse")]
        string F16031_CheckSpecialAssessment(string districtProperty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16031_ExeWriteTaxStatement" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16031_ExeWriteTaxStatement" +
            "Response")]
        void F16031_ExeWriteTaxStatement(int workingFileId, int userId, bool isCancel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1031_DeleteDistrictAssessm" +
            "ent", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1031_DeleteDistrictAssessm" +
            "entResponse")]
        int F1031_DeleteDistrictAssessment(int statementId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1031_GetDistrictAssessment" +
            "ParcelID", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1031_GetDistrictAssessment" +
            "ParcelIDResponse")]
        string F1031_GetDistrictAssessmentParcelID(string parcelNumber, System.Nullable<int> parcelId, System.Nullable<int> rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1031_ListDistrictAssessmen" +
            "t", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1031_ListDistrictAssessmen" +
            "tResponse")]
        string F1031_ListDistrictAssessment(int districtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1031_ListDistrictAssessmen" +
            "tDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1031_ListDistrictAssessmen" +
            "tDetailsResponse")]
        string F1031_ListDistrictAssessmentDetails(int statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1031_ListDistrictAssessmen" +
            "tIDs", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1031_ListDistrictAssessmen" +
            "tIDsResponse")]
        string F1031_ListDistrictAssessmentIDs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1031_SaveDistrictAssessmen" +
            "tDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1031_SaveDistrictAssessmen" +
            "tDetailsResponse")]
        int F1031_SaveDistrictAssessmentDetails(string districtProperty, string districtRates, bool overrideStatus, bool ownerRide, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1031_CheckSpecialDistrictS" +
            "tatementOrOwner", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1031_CheckSpecialDistrictS" +
            "tatementOrOwnerResponse")]
        int F1031_CheckSpecialDistrictStatementOrOwner(string districtProperty, bool statementFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1033_ListPostTypes", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1033_ListPostTypesResponse" +
            "")]
        string F1033_ListPostTypes(System.Nullable<int> form);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1033_ListSpecialDistricts", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1033_ListSpecialDistrictsR" +
            "esponse")]
        string F1033_ListSpecialDistricts(System.Nullable<int> district, System.Nullable<int> rollYear, string description, System.Nullable<int> postTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListInterestMethod", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListInterestMethodResponse")]
        string ListInterestMethod();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListInterestDelqDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListInterestDelqDetailsResp" +
            "onse")]
        string ListInterestDelqDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictDetailsResponse")]
        string GetDistrictDetails(int districtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ImprovementDistrictTypelist" +
            "", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ImprovementDistrictTypelist" +
            "Response")]
        string ImprovementDistrictTypelist(string districtType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetDistributionDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetDistributionDetailsRespo" +
            "nse")]
        string GetDistributionDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictDefinitionDetail" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictDefinitionDetail" +
            "sResponse")]
        string GetDistrictDefinitionDetails(int districtID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/RollOver_ImprovementDistric" +
            "t", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/RollOver_ImprovementDistric" +
            "tResponse")]
        string RollOver_ImprovementDistrict(int districtId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16040_SaveImproveDistrictD" +
            "efinition", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16040_SaveImproveDistrictD" +
            "efinitionResponse")]
        string F16040_SaveImproveDistrictDefinition(string districtItem, string distributionItem, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16040_UpdateImproveDistric" +
            "tDefinition", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16040_UpdateImproveDistric" +
            "tDefinitionResponse")]
        string F16040_UpdateImproveDistrictDefinition(int districtNo, string districtItem, string distributionItem, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictParcels", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictParcelsResponse")]
        string GetDistrictParcels(int DistrictId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ListDistrictParcelsDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ListDistrictParcelsDetailsR" +
            "esponse")]
        string ListDistrictParcelsDetails(string parcelval, System.Nullable<int> parcelId, System.Nullable<int> rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16041_SaveDistrictParcels", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16041_SaveDistrictParcelsR" +
            "esponse")]
        string F16041_SaveDistrictParcels(string districtProperty, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16041_DeleteDistrictParcel" +
            "s", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16041_DeleteDistrictParcel" +
            "sResponse")]
        string F16041_DeleteDistrictParcels(int workingFileItemId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/CheckParcelDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/CheckParcelDetailsResponse")]
        string CheckParcelDetails(string districtProperty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F11020_GetRealPropertyState" +
            "ment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F11020_GetRealPropertyState" +
            "mentResponse")]
        string F11020_GetRealPropertyStatement(int statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F15030_GetRealPropertyState" +
            "ments", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F15030_GetRealPropertyState" +
            "mentsResponse")]
        string F15030_GetRealPropertyStatements(int statementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/f25050GetDistrictAssessment" +
            "ParcelID", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/f25050GetDistrictAssessment" +
            "ParcelIDResponse")]
        string f25050GetDistrictAssessmentParcelID(string parcelNumber, int parcelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1107_ExciseWorkQueue_GetWo" +
            "rkQueueSearchResult", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1107_ExciseWorkQueue_GetWo" +
            "rkQueueSearchResultResponse")]
        string F1107_ExciseWorkQueue_GetWorkQueueSearchResult(string parcelNumber, string name, string receiptDate, string address, string taxCode, string treasurer, string assessor, string statementNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteQuery", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteQueryResponse")]
        void DeleteQuery(int queryId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteQueryUtility", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteQueryUtilityResponse")]
        void DeleteQueryUtility(int queryId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteSnapShot", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteSnapShotResponse")]
        void DeleteSnapShot(int snapShotId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteSnapshotUtility", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteSnapshotUtilityRespon" +
            "se")]
        void DeleteSnapshotUtility(int snapshotId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteUserDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteUserDetailsResponse")]
        void DeleteUserDetails(int userId, int loginUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ExecuteAffdvtQuery", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ExecuteAffdvtQueryResponse")]
        string ExecuteAffdvtQuery(int formId, string whereCondnSql, string orderByCondn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ExecuteQuery", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ExecuteQueryResponse")]
        string ExecuteQuery(string whereCondition, string orderByCondition, int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ExecuteSnapshot", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ExecuteSnapshotResponse")]
        string ExecuteSnapshot(int snapshotId, string whereCondition, string orderByCondition, int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1003_GetMinTaxDue", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1003_GetMinTaxDueResponse")]
        decimal F1003_GetMinTaxDue(int statmentId, string interestDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1004_GetInterestAmount", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1004_GetInterestAmountResp" +
            "onse")]
        decimal F1004_GetInterestAmount(int statmentId, string interestDate, decimal taxDueAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1009_GetValidReceiptTest", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1009_GetValidReceiptTestRe" +
            "sponse")]
        string F1009_GetValidReceiptTest(int statementId, System.DateTime receiptDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1021_GetMiscReceiptTemplat" +
            "e", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1021_GetMiscReceiptTemplat" +
            "eResponse")]
        string F1021_GetMiscReceiptTemplate(int miscTemplateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1021_SaveMiscReceiptTempla" +
            "te", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1021_SaveMiscReceiptTempla" +
            "teResponse")]
        int F1021_SaveMiscReceiptTemplate(string miscTemplateDetails, string templateItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1022_DeleteMiscReceiptTemp" +
            "late", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1022_DeleteMiscReceiptTemp" +
            "lateResponse")]
        void F1022_DeleteMiscReceiptTemplate(int miscTemplateId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1022_ListMiscReceiptTempla" +
            "te", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1022_ListMiscReceiptTempla" +
            "teResponse")]
        string F1022_ListMiscReceiptTemplate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1025_CheckRollYear", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1025_CheckRollYearResponse" +
            "")]
        int F1025_CheckRollYear(string autoFundItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1025_DeleteAutoFundTransfe" +
            "rDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1025_DeleteAutoFundTransfe" +
            "rDetailsResponse")]
        int F1025_DeleteAutoFundTransferDetails(int autoTransferId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1025_ListAutoFundTransferD" +
            "etails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1025_ListAutoFundTransferD" +
            "etailsResponse")]
        string F1025_ListAutoFundTransferDetails(int rollYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1025_ListRollYear", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1025_ListRollYearResponse")]
        string F1025_ListRollYear();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1025_UpdateAutoFundTransfe" +
            "rDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1025_UpdateAutoFundTransfe" +
            "rDetailsResponse")]
        int F1025_UpdateAutoFundTransferDetails(string autoFundItems, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1030_DeleteDistrictDefinit" +
            "ion", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1030_DeleteDistrictDefinit" +
            "ionResponse")]
        int F1030_DeleteDistrictDefinition(int specialDistrictId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1030_DeleteDistrictDefinit" +
            "ionRate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1030_DeleteDistrictDefinit" +
            "ionRateResponse")]
        void F1030_DeleteDistrictDefinitionRate(int specialDistrictRateItemId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1030_GetDistrictDefinition" +
            "Details", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1030_GetDistrictDefinition" +
            "DetailsResponse")]
        string F1030_GetDistrictDefinitionDetails(int districtNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1030_ListDistrictDefinitio" +
            "nType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1030_ListDistrictDefinitio" +
            "nTypeResponse")]
        string F1030_ListDistrictDefinitionType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1030_SaveDistrictDefinitio" +
            "n", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1030_SaveDistrictDefinitio" +
            "nResponse")]
        string F1030_SaveDistrictDefinition(int districtNo, string districtItem, string rateItem, string distributionItem, bool flagOverride, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16030_DeleteDistrictDefini" +
            "tion", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16030_DeleteDistrictDefini" +
            "tionResponse")]
        int F16030_DeleteDistrictDefinition(int specialDistrictId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16030_DeleteDistrictDefini" +
            "tionRate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16030_DeleteDistrictDefini" +
            "tionRateResponse")]
        void F16030_DeleteDistrictDefinitionRate(int specialDistrictRateItemId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16030_GetDistrictDefinitio" +
            "nDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16030_GetDistrictDefinitio" +
            "nDetailsResponse")]
        string F16030_GetDistrictDefinitionDetails(int districtNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16030_ListDistrictDefiniti" +
            "onType", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16030_ListDistrictDefiniti" +
            "onTypeResponse")]
        string F16030_ListDistrictDefinitionType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16030_SaveDistrictDefiniti" +
            "on", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16030_SaveDistrictDefiniti" +
            "onResponse")]
        string F16030_SaveDistrictDefinition(int districtNo, string districtItem, string rateItem, string distributionItem, bool flagOverride, bool flagValidation, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16031_ListDistrictAssessme" +
            "ntDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16031_ListDistrictAssessme" +
            "ntDetailsResponse")]
        string F16031_ListDistrictAssessmentDetails(int workingfileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F16031_ListDistrictAssessme" +
            "nt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F16031_ListDistrictAssessme" +
            "ntResponse")]
        string F16031_ListDistrictAssessment(int sadistrictId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/CheckInstallation", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/CheckInstallationResponse")]
        string CheckInstallation(string test);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/CheckMortgageImportValidRec" +
            "eipt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/CheckMortgageImportValidRec" +
            "eiptResponse")]
        string CheckMortgageImportValidReceipt(int importId, System.DateTime receiptDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/CheckNextNumber", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/CheckNextNumberResponse")]
        System.Data.DataSet CheckNextNumber(int rollYear, int nextNum, string formula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/CheckQueryExist", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/CheckQueryExistResponse")]
        int CheckQueryExist(int formId, string savedQueryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/CheckSnapShotExist", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/CheckSnapShotExistResponse")]
        int CheckSnapShotExist(int formId, string savedSnapShotName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/ClearTemporaryRecords", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/ClearTemporaryRecordsRespon" +
            "se")]
        void ClearTemporaryRecords(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/CompilePostingRecordSet", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/CompilePostingRecordSetResp" +
            "onse")]
        string CompilePostingRecordSet(System.DateTime postDate, string selectedPostTypes, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36091_GetIncomeSources", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36091_GetIncomeSourcesResp" +
            "onse")]
        string F36091_GetIncomeSources(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36091_SaveIncomeSourceDeta" +
            "ils", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36091_SaveIncomeSourceDeta" +
            "ilsResponse")]
        void F36091_SaveIncomeSourceDetails(int valueSliceId, string SourceGridDetails, string IncomeApproachDetails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36091_ListSourceDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36091_ListSourceDetailsRes" +
            "ponse")]
        string F36091_ListSourceDetails(int valueSliceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36091_GetIncomeApproachIte" +
            "mDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36091_GetIncomeApproachIte" +
            "mDetailsResponse")]
        string F36091_GetIncomeApproachItemDetails(string IncomeApproachDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36091_ListApproachValues", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36091_ListApproachValuesRe" +
            "sponse")]
        string F36091_ListApproachValues(out decimal contract, out decimal marketperunit, out decimal market, int incomeSourceID, decimal Units, decimal ContractPerUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F36091_DeleteIncomeSource", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F36091_DeleteIncomeSourceRe" +
            "sponse")]
        void F36091_DeleteIncomeSource(string incomesourceIds, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/GetPaymentManagement", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/GetPaymentManagementRespons" +
            "e")]
        string GetPaymentManagement(int ReceiptID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1557_InsertPayment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1557_InsertPaymentResponse" +
            "")]
        void F1557_InsertPayment(string receiptPayment, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1557_UpdatePayment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1557_UpdatePaymentResponse" +
            "")]
        void F1557_UpdatePayment(string receiptPayment, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/F1557_DeletePayment", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/F1557_DeletePaymentResponse" +
            "")]
        void F1557_DeletePayment(string PaymentIDs, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/CreateReceipt", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/CreateReceiptResponse")]
        string CreateReceipt(int importId, int templateId, string templateName, string filePath, int typeId, System.DateTime receiptDate, System.DateTime interestDate, bool payCode, int firstHalfPaycode, int userId, int rollYear, System.Nullable<int> ppaymentId, bool resetErrorCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteAffidavitDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteAffidavitDetailsRespo" +
            "nse")]
        void DeleteAffidavitDetails(int statementId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteAttachments", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteAttachmentsResponse")]
        void DeleteAttachments(int fileId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteComments", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteCommentsResponse")]
        void DeleteComments(int keyId, int formId, int commentId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteEventEngineTVDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteEventEngineTVDetailsR" +
            "esponse")]
        int DeleteEventEngineTVDetails(int detailId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteExciseTaxRate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteExciseTaxRateResponse" +
            "")]
        int DeleteExciseTaxRate(int exciseRateId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteGDocEventHeader", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteGDocEventHeaderRespon" +
            "se")]
        void DeleteGDocEventHeader(int eventId, int childFlag, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteGroupDetails", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteGroupDetailsResponse")]
        void DeleteGroupDetails(int groupId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteMortgageImport", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteMortgageImportRespons" +
            "e")]
        string DeleteMortgageImport(int importId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeletePermiTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeletePermiTemplateResponse" +
            "")]
        string DeletePermiTemplate(int templateId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteIncomeSource", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteIncomeSourceResponse")]
        string DeleteIncomeSource(int IncomeSourceID, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteMADTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteMADTemplateResponse")]
        string DeleteMADTemplate(int templateId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteSnapshotTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteSnapshotTemplateRespo" +
            "nse")]
        string DeleteSnapshotTemplate(int templateId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteMortgageImportFileEnt" +
            "ries", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteMortgageImportFileEnt" +
            "riesResponse")]
        string DeleteMortgageImportFileEntries(int importId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TerraScan.ServiceContracts/ISmartClientService/DeleteMortgageTemplate", ReplyAction="http://TerraScan.ServiceContracts/ISmartClientService/DeleteMortgageTemplateRespo" +
            "nse")]
        int DeleteMortgageTemplate(int templateId, bool overrideStatus, int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ISmartClientServiceChannel : WCFService.ISmartClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SmartClientServiceClient : System.ServiceModel.ClientBase<WCFService.ISmartClientService>, WCFService.ISmartClientService {
        
        public SmartClientServiceClient() {
        }
        
        public SmartClientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SmartClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmartClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmartClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetMADImportTemplateDetails(string TemplateName, string Description, string FileType) {
            return base.Channel.GetMADImportTemplateDetails(TemplateName, Description, FileType);
        }
        
        public string GetSnapshotImportTemplate(int templateId) {
            return base.Channel.GetSnapshotImportTemplate(templateId);
        }
        
        public void F28510_DeleteSnapshotImportDetails(int importId, int userId) {
            base.Channel.F28510_DeleteSnapshotImportDetails(importId, userId);
        }
        
        public int F28510_InsertImportSnapshotDetails(System.Nullable<int> importId, string importXML, int userId) {
            return base.Channel.F28510_InsertImportSnapshotDetails(importId, importXML, userId);
        }
        
        public string F28510_ExecuteImport(int importId, string importXML, int userId, bool isProcess) {
            return base.Channel.F28510_ExecuteImport(importId, importXML, userId, isProcess);
        }
        
        public void F28510_ExecuteCheckForErrors(int importId, int userId) {
            base.Channel.F28510_ExecuteCheckForErrors(importId, userId);
        }
        
        public string F28510_CreateImportRecords(int importId, int userId, bool isProcess) {
            return base.Channel.F28510_CreateImportRecords(importId, userId, isProcess);
        }
        
        public string F28510_SnapshotImportDetails(int importId) {
            return base.Channel.F28510_SnapshotImportDetails(importId);
        }
        
        public string GetSnapshotImportTemplateDetails(string TemplateName, string Description, string FileType) {
            return base.Channel.GetSnapshotImportTemplateDetails(TemplateName, Description, FileType);
        }
        
        public string F29555_GetPersonalSalesOwner(System.Nullable<int> pSsaleId, System.Nullable<int> ownerId, System.Nullable<int> scheduleId, int userid, string scheduleString) {
            return base.Channel.F29555_GetPersonalSalesOwner(pSsaleId, ownerId, scheduleId, userid, scheduleString);
        }
        
        public string F29555_GetSalesScheduleandOwners(System.Nullable<int> scheduleId, string scheduleIds, System.Nullable<int> pSsaleId, int userid) {
            return base.Channel.F29555_GetSalesScheduleandOwners(scheduleId, scheduleIds, pSsaleId, userid);
        }
        
        public string F29555_ScheduleSaleTracking(int eventId, int userid) {
            return base.Channel.F29555_ScheduleSaleTracking(eventId, userid);
        }
        
        public void F29555_SaveSalesOwner(int pSaleId, string ownerDetails, int userId) {
            base.Channel.F29555_SaveSalesOwner(pSaleId, ownerDetails, userId);
        }
        
        public void F29555_SaveSalesSchedule(int pSaleId, string scheduleItems, int userId) {
            base.Channel.F29555_SaveSalesSchedule(pSaleId, scheduleItems, userId);
        }
        
        public int F29555_SaveScheduleSaleTracking(int eventId, string pSaleItems, string scheduleItems, string ownerDetails, int userId) {
            return base.Channel.F29555_SaveScheduleSaleTracking(eventId, pSaleItems, scheduleItems, ownerDetails, userId);
        }
        
        public string F2201_GetPersonalPropertyDescription(string code) {
            return base.Channel.F2201_GetPersonalPropertyDescription(code);
        }
        
        public string F2201_GetPersonalPropertySearch(string code, string description) {
            return base.Channel.F2201_GetPersonalPropertySearch(code, description);
        }
        
        public string F2550_GetConfiguredState() {
            return base.Channel.F2550_GetConfiguredState();
        }
        
        public string F1406_CentralAssessedGridDetails(string centralSearchXML) {
            return base.Channel.F1406_CentralAssessedGridDetails(centralSearchXML);
        }
        
        public string F1406_LoadPropertClassCombo() {
            return base.Channel.F1406_LoadPropertClassCombo();
        }
        
        public string F1203LoadDueDateManagement() {
            return base.Channel.F1203LoadDueDateManagement();
        }
        
        public void F1203_SaveDueDateManagement(int userId, string dueDateXML) {
            base.Channel.F1203_SaveDueDateManagement(userId, dueDateXML);
        }
        
        public string F29636_GetBOEDetails(int eventId) {
            return base.Channel.F29636_GetBOEDetails(eventId);
        }
        
        public string F29636_BOETypeDetails() {
            return base.Channel.F29636_BOETypeDetails();
        }
        
        public void F29636_SaveBOEDetails(string boeElemenets, string boeValues, int userId) {
            base.Channel.F29636_SaveBOEDetails(boeElemenets, boeValues, userId);
        }
        
        public string F29636_PushBOEDetails(int boeId, int userId) {
            return base.Channel.F29636_PushBOEDetails(boeId, userId);
        }
        
        public void F29636_DeleteBOEDetails(int boeId, int userId) {
            base.Channel.F29636_DeleteBOEDetails(boeId, userId);
        }
        
        public int F9105_ExecuteCopyName(string copyData, int userId) {
            return base.Channel.F9105_ExecuteCopyName(copyData, userId);
        }
        
        public string F28210_PermitImportDetails(int importId) {
            return base.Channel.F28210_PermitImportDetails(importId);
        }
        
        public void F28210_DeletetemplateDetails(int importId, int userId) {
            base.Channel.F28210_DeletetemplateDetails(importId, userId);
        }
        
        public int F28210_InsertImportPermitDetails(System.Nullable<int> importId, string importXML, int userId) {
            return base.Channel.F28210_InsertImportPermitDetails(importId, importXML, userId);
        }
        
        public string F28210_ExecuteImport(int importId, string importXML, int userId, bool isProcess) {
            return base.Channel.F28210_ExecuteImport(importId, importXML, userId, isProcess);
        }
        
        public void F28210_ExecuteCheckForErrors(int importId, int userId) {
            base.Channel.F28210_ExecuteCheckForErrors(importId, userId);
        }
        
        public string F28210_CreateImportRecords(int importId, int userId, bool isProcess) {
            return base.Channel.F28210_CreateImportRecords(importId, userId, isProcess);
        }
        
        public string GetPermitImportTemplateDetails(string TemplateName, string Description, string FileType) {
            return base.Channel.GetPermitImportTemplateDetails(TemplateName, Description, FileType);
        }
        
        public string F28310_MADImportDetails(int importId) {
            return base.Channel.F28310_MADImportDetails(importId);
        }
        
        public void F28310_DeleteMADImportDetails(int importId, int userId) {
            base.Channel.F28310_DeleteMADImportDetails(importId, userId);
        }
        
        public int F28310_InsertImportMADDetails(System.Nullable<int> importId, string importXML, int userId) {
            return base.Channel.F28310_InsertImportMADDetails(importId, importXML, userId);
        }
        
        public string F28310_ExecuteImport(int importId, string importXML, int userId, bool isProcess) {
            return base.Channel.F28310_ExecuteImport(importId, importXML, userId, isProcess);
        }
        
        public void F28310_ExecuteCheckForErrors(int importId, int userId) {
            base.Channel.F28310_ExecuteCheckForErrors(importId, userId);
        }
        
        public string F28310_CreateImportRecords(int importId, int userId, bool isProcess) {
            return base.Channel.F28310_CreateImportRecords(importId, userId, isProcess);
        }
        
        public string F35080_OwnerDetails(int ownerId) {
            return base.Channel.F35080_OwnerDetails(ownerId);
        }
        
        public string F35081_CentralAssessedGridDetails(int CentralId) {
            return base.Channel.F35081_CentralAssessedGridDetails(CentralId);
        }
        
        public string F35081_CentralAssessedRateDetails(int subFundId, decimal personalProperty, decimal realProperty, string description, string centralXMLList) {
            return base.Channel.F35081_CentralAssessedRateDetails(subFundId, personalProperty, realProperty, description, centralXMLList);
        }
        
        public void F35081_InsertOwnerAssessedGrid(string centralXMLItems, int centralId, int userId) {
            base.Channel.F35081_InsertOwnerAssessedGrid(centralXMLItems, centralId, userId);
        }
        
        public void F35081_DeleteOwnerGridDetails(string removeXMLItems, int centralId, int userId) {
            base.Channel.F35081_DeleteOwnerGridDetails(removeXMLItems, centralId, userId);
        }
        
        public string F35085_ImportTypeCombo() {
            return base.Channel.F35085_ImportTypeCombo();
        }
        
        public string F35085_CentralAssessedImportDetails(int importId) {
            return base.Channel.F35085_CentralAssessedImportDetails(importId);
        }
        
        public void F35085_DeletetemplateDetails(int importId, int userId) {
            base.Channel.F35085_DeletetemplateDetails(importId, userId);
        }
        
        public System.Data.DataSet F35085_InsertCentralTemplateDetails(System.Nullable<int> importId, string importXML, int userId) {
            return base.Channel.F35085_InsertCentralTemplateDetails(importId, importXML, userId);
        }
        
        public string F35085_ExecuteImport(int importId, string importXML, int userId, bool isProcess) {
            return base.Channel.F35085_ExecuteImport(importId, importXML, userId, isProcess);
        }
        
        public void F35085_ExecuteCheckForErrors(int importId, int userId) {
            base.Channel.F35085_ExecuteCheckForErrors(importId, userId);
        }
        
        public string F35085_CreateImportRecords(int importId, int userId, bool isProcess) {
            return base.Channel.F35085_CreateImportRecords(importId, userId, isProcess);
        }
        
        public string F16072_GetMiscteplateDetails(int misctemplateId) {
            return base.Channel.F16072_GetMiscteplateDetails(misctemplateId);
        }
        
        public int F16072_SaveMiscReceiptTemplate(System.Nullable<int> misctemplateId, string miscHeaderDetails, string accountDetails, int userId) {
            return base.Channel.F16072_SaveMiscReceiptTemplate(misctemplateId, miscHeaderDetails, accountDetails, userId);
        }
        
        public void F16072_DeleteMisctemplateDetails(int misctemplateId, int userId) {
            base.Channel.F16072_DeleteMisctemplateDetails(misctemplateId, userId);
        }
        
        public void F16072_DeleteMiscGridtemplate(int misctemplateId, string miscIds, int userId) {
            base.Channel.F16072_DeleteMiscGridtemplate(misctemplateId, miscIds, userId);
        }
        
        public string F16071_GetJournalTeplateDetails(int templateId) {
            return base.Channel.F16071_GetJournalTeplateDetails(templateId);
        }
        
        public int F16071_SaveHeaderTemplateDetails(System.Nullable<int> templateId, int rollYear, string description, int userId) {
            return base.Channel.F16071_SaveHeaderTemplateDetails(templateId, rollYear, description, userId);
        }
        
        public void F16071_SaveGridTemplateDetails(System.Nullable<int> templateId, string gridDetails, int userId) {
            base.Channel.F16071_SaveGridTemplateDetails(templateId, gridDetails, userId);
        }
        
        public void F16071_DeleteJournalHeaderDetails(int templateId, int userId) {
            base.Channel.F16071_DeleteJournalHeaderDetails(templateId, userId);
        }
        
        public void F16071_DeleteJournalGridDetails(int templateId, string gridDetails, int userId) {
            base.Channel.F16071_DeleteJournalGridDetails(templateId, gridDetails, userId);
        }
        
        public string F14062_GridResultDetails(string ownerIds, string statementIds, string parcelIds, string scheduleIds, string stateIds, int userId) {
            return base.Channel.F14062_GridResultDetails(ownerIds, statementIds, parcelIds, scheduleIds, stateIds, userId);
        }
        
        public string F14062_GetStatementPullListDetails() {
            return base.Channel.F14062_GetStatementPullListDetails();
        }
        
        public string F1407_GetPullListStatus() {
            return base.Channel.F1407_GetPullListStatus();
        }
        
        public string F1407_GetPullListType() {
            return base.Channel.F1407_GetPullListType();
        }
        
        public void F14062_SaveGridDetails(string pullListItems, int userId) {
            base.Channel.F14062_SaveGridDetails(pullListItems, userId);
        }
        
        public string F14062_DeleteStatementPullList(string pullListItems, int userId, bool isProcess) {
            return base.Channel.F14062_DeleteStatementPullList(pullListItems, userId, isProcess);
        }
        
        public string F11024_GetMultipleJournalTemplateDetails(int jetTemplateID) {
            return base.Channel.F11024_GetMultipleJournalTemplateDetails(jetTemplateID);
        }
        
        public void F11024_SaveMultipleJournalTemplate(string transferDate, int userId, string description, string journalTemplateDetails) {
            base.Channel.F11024_SaveMultipleJournalTemplate(transferDate, userId, description, journalTemplateDetails);
        }
        
        public string F11024_SearchTemplateDetails() {
            return base.Channel.F11024_SearchTemplateDetails();
        }
        
        public string F29555_DeedtypeComboBox() {
            return base.Channel.F29555_DeedtypeComboBox();
        }
        
        public string F29555_SaveTransferOwnership(int eventId, int userId) {
            return base.Channel.F29555_SaveTransferOwnership(eventId, userId);
        }
        
        public string F28100_GetBOEDetails(int eventId) {
            return base.Channel.F28100_GetBOEDetails(eventId);
        }
        
        public string F28100_GetTotalAmount(int boeId, int eventId, string assessedValues) {
            return base.Channel.F28100_GetTotalAmount(boeId, eventId, assessedValues);
        }
        
        public int F28100_SaveBOEDetails(int eventId, string boeItems, string assessedValues, int userId) {
            return base.Channel.F28100_SaveBOEDetails(eventId, boeItems, assessedValues, userId);
        }
        
        public void F28100_DeleteBOEDetails(System.Nullable<int> boeId, int userId) {
            base.Channel.F28100_DeleteBOEDetails(boeId, userId);
        }
        
        public void F28100_PushBOEDetails(int boeId, int userId) {
            base.Channel.F28100_PushBOEDetails(boeId, userId);
        }
        
        public string F28100_GetLocalValues(string assessedValues) {
            return base.Channel.F28100_GetLocalValues(assessedValues);
        }
        
        public string F28100_GetCountyValues(bool isLocal, string assessedValues) {
            return base.Channel.F28100_GetCountyValues(isLocal, assessedValues);
        }
        
        public string F28100_GetStateValues(bool isLocal, bool isCounty, string assessedValues) {
            return base.Channel.F28100_GetStateValues(isLocal, isCounty, assessedValues);
        }
        
        public string F29551_GetParcelSaleComboDetails(int userId) {
            return base.Channel.F29551_GetParcelSaleComboDetails(userId);
        }
        
        public string F29551_GetParcelSaleTrackingDetails(int eventId, int userId) {
            return base.Channel.F29551_GetParcelSaleTrackingDetails(eventId, userId);
        }
        
        public string F29551_GetOwnerDetails(System.Nullable<int> saleId, System.Nullable<int> ownerId, System.Nullable<int> parcelId, int userId) {
            return base.Channel.F29551_GetOwnerDetails(saleId, ownerId, parcelId, userId);
        }
        
        public int F29551_SaveParcelSaleDetails(int eventId, string saleItems, string parcelItems, string ownerItems, int userId) {
            return base.Channel.F29551_SaveParcelSaleDetails(eventId, saleItems, parcelItems, ownerItems, userId);
        }
        
        public string F29551_GetParcelOwnerDetails(System.Nullable<int> parcelId, string parcelCollection, System.Nullable<int> saleId, int userId) {
            return base.Channel.F29551_GetParcelOwnerDetails(parcelId, parcelCollection, saleId, userId);
        }
        
        public string F29551_CreateSaleVersions(int eventId, int userId, string checkedParcels) {
            return base.Channel.F29551_CreateSaleVersions(eventId, userId, checkedParcels);
        }
        
        public string F29551_TransferOwnership(int eventId, int userId) {
            return base.Channel.F29551_TransferOwnership(eventId, userId);
        }
        
        public string F29551_UpdateSaleParcel(int eventId, int userId) {
            return base.Channel.F29551_UpdateSaleParcel(eventId, userId);
        }
        
        public string F9045GetConfiguration(int genericSearchId) {
            return base.Channel.F9045GetConfiguration(genericSearchId);
        }
        
        public string F9045GetSearchResults(int genericSearchId, string searchString, int userId) {
            return base.Channel.F9045GetSearchResults(genericSearchId, searchString, userId);
        }
        
        public string F3201_GetSketchLinkData(int parcelId, int userId) {
            return base.Channel.F3201_GetSketchLinkData(parcelId, userId);
        }
        
        public string F3201_SaveSketchLinkData(string linkXML, int parcelId, int userId) {
            return base.Channel.F3201_SaveSketchLinkData(linkXML, parcelId, userId);
        }
        
        public string F1500_GetSampleFormDetails(int FormID) {
            return base.Channel.F1500_GetSampleFormDetails(FormID);
        }
        
        public int InsertSampleFormDetails(int FormID, string SampleFormDetails, int UserID) {
            return base.Channel.InsertSampleFormDetails(FormID, SampleFormDetails, UserID);
        }
        
        public string GetApplicationId() {
            return base.Channel.GetApplicationId();
        }
        
        public string GetMenuIdDetails() {
            return base.Channel.GetMenuIdDetails();
        }
        
        public void F1500_DeleteFormIDDetails(int FormID, int GroupID) {
            base.Channel.F1500_DeleteFormIDDetails(FormID, GroupID);
        }
        
        public int InsertFieldUseDetails(int KeyID, string KeyField, int UserID) {
            return base.Channel.InsertFieldUseDetails(KeyID, KeyField, UserID);
        }
        
        public System.Data.DataSet ClassCode_RGB(string storedProcedureName) {
            return base.Channel.ClassCode_RGB(storedProcedureName);
        }
        
        public string f2200GetFarmExemptAmount(int scheduleId, bool isFarmExempt, int ExemptRollYear) {
            return base.Channel.f2200GetFarmExemptAmount(scheduleId, isFarmExempt, ExemptRollYear);
        }
        
        public string F35080_CentralAssessedOwnerDetails(int CentralId) {
            return base.Channel.F35080_CentralAssessedOwnerDetails(CentralId);
        }
        
        public string F35080_PropertyClassCombo() {
            return base.Channel.F35080_PropertyClassCombo();
        }
        
        public void F35080_DeleteOwnerDetails(int centralId, int userId) {
            base.Channel.F35080_DeleteOwnerDetails(centralId, userId);
        }
        
        public int F35080_InsertOwnerCentralDetails(System.Nullable<int> centralId, string centralXML, int userId) {
            return base.Channel.F35080_InsertOwnerCentralDetails(centralId, centralXML, userId);
        }
        
        public string F35051_GetScheduleLineItemDetails(int scheduleId) {
            return base.Channel.F35051_GetScheduleLineItemDetails(scheduleId);
        }
        
        public int F35051_SaveScheduleLineItem(int scheduleId, string scheduleItems, int userId) {
            return base.Channel.F35051_SaveScheduleLineItem(scheduleId, scheduleItems, userId);
        }
        
        public int F35051_DeleteScheduleLineItem(int scheduleId, string scheduleItemIds, int userId) {
            return base.Channel.F35051_DeleteScheduleLineItem(scheduleId, scheduleItemIds, userId);
        }
        
        public string F35051_GetDeprPercentage(short rollYear, int deprTableId, short year) {
            return base.Channel.F35051_GetDeprPercentage(rollYear, deprTableId, year);
        }
        
        public string GetPropertyHeaderDetails(int scheduleId) {
            return base.Channel.GetPropertyHeaderDetails(scheduleId);
        }
        
        public int F36065_CheckDeprRollYear(System.Nullable<int> deprYearId, int rollYear) {
            return base.Channel.F36065_CheckDeprRollYear(deprYearId, rollYear);
        }
        
        public string F36065_GetDeprDetails(int deprYearId) {
            return base.Channel.F36065_GetDeprDetails(deprYearId);
        }
        
        public int F36065_SaveDepreciation(System.Nullable<int> deprYearId, string deprYearItems, string depreciationItems, int userId) {
            return base.Channel.F36065_SaveDepreciation(deprYearId, deprYearItems, depreciationItems, userId);
        }
        
        public void F36065_DeleteDepreciattion(System.Nullable<int> deprYearId, string depreciationItems, int userId) {
            base.Channel.F36065_DeleteDepreciattion(deprYearId, depreciationItems, userId);
        }
        
        public string F15020_GetReceiptTypes(int userId, short formId, int keyId) {
            return base.Channel.F15020_GetReceiptTypes(userId, formId, keyId);
        }
        
        public string F1504_GetCopyAccountSubFund() {
            return base.Channel.F1504_GetCopyAccountSubFund();
        }
        
        public string F1504_GetAccountDetail(int accountId) {
            return base.Channel.F1504_GetAccountDetail(accountId);
        }
        
        public string F1504_SaveCopyAccountDetails(int rollYear, string subFund, string description, string function, string bars, string accObject, string line, string userId) {
            return base.Channel.F1504_SaveCopyAccountDetails(rollYear, subFund, description, function, bars, accObject, line, userId);
        }
        
        public string F32012_GetCatalogData(int valueSliceId) {
            return base.Channel.F32012_GetCatalogData(valueSliceId);
        }
        
        public System.Data.DataSet F32012_SaveCatalog(int objectId, string catalogData, int userId) {
            return base.Channel.F32012_SaveCatalog(objectId, catalogData, userId);
        }
        
        public string F3205pcgetSketchFilePath(int parcelId, int userId) {
            return base.Channel.F3205pcgetSketchFilePath(parcelId, userId);
        }
        
        public string F3205pcgetSketchLinksExist(int parcelId, int userId) {
            return base.Channel.F3205pcgetSketchLinksExist(parcelId, userId);
        }
        
        public string F3205pcinsSketchImage(int parcelId, int userId, int pageCount) {
            return base.Channel.F3205pcinsSketchImage(parcelId, userId, pageCount);
        }
        
        public void SaveApexSketch(string SketchDataXML, int parcelId, int userId) {
            base.Channel.SaveApexSketch(SketchDataXML, parcelId, userId);
        }
        
        public string F3205_pcexeReCalcValues(int userId, int parcelId) {
            return base.Channel.F3205_pcexeReCalcValues(userId, parcelId);
        }
        
        public string F1403_GetParcelType(System.Nullable<int> parcelId) {
            return base.Channel.F1403_GetParcelType(parcelId);
        }
        
        public string F1403_GetSearchResult(string parcelSearchXml) {
            return base.Channel.F1403_GetSearchResult(parcelSearchXml);
        }
        
        public string F1403_GetSaleTrackingRollYear(int eventID) {
            return base.Channel.F1403_GetSaleTrackingRollYear(eventID);
        }
        
        public string F1404_ListScheduleSearch(string ScheduleConditionXML) {
            return base.Channel.F1404_ListScheduleSearch(ScheduleConditionXML);
        }
        
        public string F1404_GetScheduleType(System.Nullable<int> scheduleId) {
            return base.Channel.F1404_GetScheduleType(scheduleId);
        }
        
        public string F1404_GetScheduleTrackingRollYear(int eventID) {
            return base.Channel.F1404_GetScheduleTrackingRollYear(eventID);
        }
        
        public string F1405_ListStateSearch(string StateConditionXML) {
            return base.Channel.F1405_ListStateSearch(StateConditionXML);
        }
        
        public string F28000_GetDiscretionaryDetails(int eventId) {
            return base.Channel.F28000_GetDiscretionaryDetails(eventId);
        }
        
        public string F28000_GetClass(int stateId, int eventId) {
            return base.Channel.F28000_GetClass(stateId, eventId);
        }
        
        public string F28000_GetExemptionAmount(int rollYear, int exemptionYear, decimal subjectAmount) {
            return base.Channel.F28000_GetExemptionAmount(rollYear, exemptionYear, subjectAmount);
        }
        
        public int F28000_SaveDiscretionaryDetail(int eventId, System.Nullable<int> discretionaryId, string discretionaryItems, int userId) {
            return base.Channel.F28000_SaveDiscretionaryDetail(eventId, discretionaryId, discretionaryItems, userId);
        }
        
        public void F28000_DeletediscretionaryDetails(System.Nullable<int> discretionaryId, string discretionaryItems, int userId) {
            base.Channel.F28000_DeletediscretionaryDetails(discretionaryId, discretionaryItems, userId);
        }
        
        public int F9025FormValidationDetails(int formid, int userid) {
            return base.Channel.F9025FormValidationDetails(formid, userid);
        }
        
        public int F9025SaveValidationDetails(int formid, int userid, int keyid) {
            return base.Channel.F9025SaveValidationDetails(formid, userid, keyid);
        }
        
        public string F81004_GetSelectionDetails(int eventId, int form) {
            return base.Channel.F81004_GetSelectionDetails(eventId, form);
        }
        
        public string F81004_GetSelectionCatalogDetails(int categoryId) {
            return base.Channel.F81004_GetSelectionCatalogDetails(categoryId);
        }
        
        public int F81004_SaveSelectionItems(int eventId, string selectionItemsXml, int userId) {
            return base.Channel.F81004_SaveSelectionItems(eventId, selectionItemsXml, userId);
        }
        
        public string GetFrozenValue(int eventId) {
            return base.Channel.GetFrozenValue(eventId);
        }
        
        public void SaveFrozenDetails(string frozenElements, int userId) {
            base.Channel.SaveFrozenDetails(frozenElements, userId);
        }
        
        public void DeleteFrozenDetails(int eventId, int frozenId, int userId) {
            base.Channel.DeleteFrozenDetails(eventId, frozenId, userId);
        }
        
        public string GetExemptionType(int eventId) {
            return base.Channel.GetExemptionType(eventId);
        }
        
        public string GetExemptionDetails(int eventId) {
            return base.Channel.GetExemptionDetails(eventId);
        }
        
        public decimal GetExemptionLoss(decimal lossValue, decimal maxValue) {
            return base.Channel.GetExemptionLoss(lossValue, maxValue);
        }
        
        public void SaveExemptionDetails(string exemptionElements, int userId) {
            base.Channel.SaveExemptionDetails(exemptionElements, userId);
        }
        
        public void DeleteExemptionDetails(int eventId, int exemptionEventId, int userId) {
            base.Channel.DeleteExemptionDetails(eventId, exemptionEventId, userId);
        }
        
        public string GetScheduleItemCodes() {
            return base.Channel.GetScheduleItemCodes();
        }
        
        public void SaveScheduleItemCodes(string scheduleCodeElements, int userId) {
            base.Channel.SaveScheduleItemCodes(scheduleCodeElements, userId);
        }
        
        public void DeleteScheduleItemCodes(string itemCodeId, int userId) {
            base.Channel.DeleteScheduleItemCodes(itemCodeId, userId);
        }
        
        public string WCFTriggerTestMethod() {
            return base.Channel.WCFTriggerTestMethod();
        }
        
        public string F2409_ReviewstatusInspectionType() {
            return base.Channel.F2409_ReviewstatusInspectionType();
        }
        
        public string F2409_Reviewstatus() {
            return base.Channel.F2409_Reviewstatus();
        }
        
        public string F2409_ReviewstatusInspectionByUser(int applicationId) {
            return base.Channel.F2409_ReviewstatusInspectionByUser(applicationId);
        }
        
        public string F2409_ListReviewstatus(int parcelId) {
            return base.Channel.F2409_ListReviewstatus(parcelId);
        }
        
        public void F2409UpdateParcelReviewDetails(string reviewXML, int userId) {
            base.Channel.F2409UpdateParcelReviewDetails(reviewXML, userId);
        }
        
        public int F2205CreateSchedule(System.Nullable<int> scheduleId, bool isNewSchedule, string scheduleHeaderItems, string scheduleItems, int userId) {
            return base.Channel.F2205CreateSchedule(scheduleId, isNewSchedule, scheduleHeaderItems, scheduleItems, userId);
        }
        
        public string F35055_GetPPLineItemsDetails(int scheduleID) {
            return base.Channel.F35055_GetPPLineItemsDetails(scheduleID);
        }
        
        public string F35055_GetValueCalculation(int scheduleId, int ppDeprTableId, long originalValue, int trend, short year, short rollYear) {
            return base.Channel.F35055_GetValueCalculation(scheduleId, ppDeprTableId, originalValue, trend, year, rollYear);
        }
        
        public int F35055_SaveScheduleLineItem(int scheduleId, string scheduleItems, int userId) {
            return base.Channel.F35055_SaveScheduleLineItem(scheduleId, scheduleItems, userId);
        }
        
        public int F35055_UpdateScheduleLineItem(int scheduleId, string scheduleItems, int userId, short rollYear) {
            return base.Channel.F35055_UpdateScheduleLineItem(scheduleId, scheduleItems, userId, rollYear);
        }
        
        public int F35055_DeleteScheduleLineItem(int scheduleId, string scheduleItemIds, int userId) {
            return base.Channel.F35055_DeleteScheduleLineItem(scheduleId, scheduleItemIds, userId);
        }
        
        public int CheckTrendRollYear(System.Nullable<int> trendYearId, int rollYear) {
            return base.Channel.CheckTrendRollYear(trendYearId, rollYear);
        }
        
        public string GetTrendDetails(int trendYearId) {
            return base.Channel.GetTrendDetails(trendYearId);
        }
        
        public int SaveTrend(System.Nullable<int> trendYearId, string trendYearItems, string trendItems, int userId) {
            return base.Channel.SaveTrend(trendYearId, trendYearItems, trendItems, userId);
        }
        
        public void DeleteTrend(System.Nullable<int> trendYearId, string trendItems, int userId) {
            base.Channel.DeleteTrend(trendYearId, trendItems, userId);
        }
        
        public int F2204CreateNewScheduleCopy(int scheduleId, string scheduleItems, int userId) {
            return base.Channel.F2204CreateNewScheduleCopy(scheduleId, scheduleItems, userId);
        }
        
        public string F29630GetBoardOfEqualizationDetails(int boeId) {
            return base.Channel.F29630GetBoardOfEqualizationDetails(boeId);
        }
        
        public void F29630SaveBoardOfEqualizationDetails(string boeElements, string boeValues, int userId) {
            base.Channel.F29630SaveBoardOfEqualizationDetails(boeElements, boeValues, userId);
        }
        
        public void F29630DeleteBoardOfEqualizationDetails(int boeId, int userId) {
            base.Channel.F29630DeleteBoardOfEqualizationDetails(boeId, userId);
        }
        
        public void F29630PushBoardOfEqualizationDetails(int boeId, int userId) {
            base.Channel.F29630PushBoardOfEqualizationDetails(boeId, userId);
        }
        
        public string F9041GetQueryDescription(int queryViewId) {
            return base.Channel.F9041GetQueryDescription(queryViewId);
        }
        
        public string F82006_GetContractorList(int contractorId) {
            return base.Channel.F82006_GetContractorList(contractorId);
        }
        
        public int F82006_SaveContractorList(System.Nullable<int> contractorId, string contractorXml, string contractorEmployeeXml, int userId) {
            return base.Channel.F82006_SaveContractorList(contractorId, contractorXml, contractorEmployeeXml, userId);
        }
        
        public void F82006_DeleteContractorList(int contractorId, int userId) {
            base.Channel.F82006_DeleteContractorList(contractorId, userId);
        }
        
        public void F82006_DeleteContractorEmployee(int contractorId, int employeeId, int userId) {
            base.Channel.F82006_DeleteContractorEmployee(contractorId, employeeId, userId);
        }
        
        public string F9042_GetTemplate(int templateId) {
            return base.Channel.F9042_GetTemplate(templateId);
        }
        
        public string F9042_ListTemplate(string queryView) {
            return base.Channel.F9042_ListTemplate(queryView);
        }
        
        public string GetSnapshotDetails(int FormNum, int UserId) {
            return base.Channel.GetSnapshotDetails(FormNum, UserId);
        }
        
        public string GetSnapshotOperationCount(int OperationId, int LOSnapshotId, int ROSnapshotId, int UserId) {
            return base.Channel.GetSnapshotOperationCount(OperationId, LOSnapshotId, ROSnapshotId, UserId);
        }
        
        public void insertSnapshotDetails(int OperationId, int LOSnapshotId, int ROSnapshotId, int RecordCount, string NewSnapshotName, int UserId) {
            base.Channel.insertSnapshotDetails(OperationId, LOSnapshotId, ROSnapshotId, RecordCount, NewSnapshotName, UserId);
        }
        
        public string F81003_GetSelectionCatalogDetails(int catalogId) {
            return base.Channel.F81003_GetSelectionCatalogDetails(catalogId);
        }
        
        public string F81003_ListSelectionCategory(int userId) {
            return base.Channel.F81003_ListSelectionCategory(userId);
        }
        
        public int F81003_SaveSelectionCatalog(System.Nullable<int> catalogId, string selectionItemsXml) {
            return base.Channel.F81003_SaveSelectionCatalog(catalogId, selectionItemsXml);
        }
        
        public void F81003_DeleteSelectionCatalog(int catalogId) {
            base.Channel.F81003_DeleteSelectionCatalog(catalogId);
        }
        
        public string F9510GetWebFormXML(int form, int userId) {
            return base.Channel.F9510GetWebFormXML(form, userId);
        }
        
        public string F9075_ListTemplate(int form, int userid) {
            return base.Channel.F9075_ListTemplate(form, userid);
        }
        
        public void F9075_DeleteCommentIds(string commentIds, int userId) {
            base.Channel.F9075_DeleteCommentIds(commentIds, userId);
        }
        
        public string F9076_getTemplate(int templateid) {
            return base.Channel.F9076_getTemplate(templateid);
        }
        
        public int F9076SaveNewCommentTemplate(System.Nullable<int> templateId, string commentItemsXml, int isOverwrite) {
            return base.Channel.F9076SaveNewCommentTemplate(templateId, commentItemsXml, isOverwrite);
        }
        
        public void F9076_DeleteNewCommentTemplate(int templateId) {
            base.Channel.F9076_DeleteNewCommentTemplate(templateId);
        }
        
        public string F429505_ListAllComoboxes(int eventId) {
            return base.Channel.F429505_ListAllComoboxes(eventId);
        }
        
        public string ListLandCodes(int nbhdid, int rollyear) {
            return base.Channel.ListLandCodes(nbhdid, rollyear);
        }
        
        public string F29505_GetBaseParcelValue(int eventId) {
            return base.Channel.F29505_GetBaseParcelValue(eventId);
        }
        
        public string F29505_CreateParcel(int makeSubId, int userId) {
            return base.Channel.F29505_CreateParcel(makeSubId, userId);
        }
        
        public int F29505_SaveDivisionParcels(int eventId, string makeSubItemsXml, string makeSubParcelsXml, int userId) {
            return base.Channel.F29505_SaveDivisionParcels(eventId, makeSubItemsXml, makeSubParcelsXml, userId);
        }
        
        public int F29505_SaveSubDivision(int makeSubID, int userId) {
            return base.Channel.F29505_SaveSubDivision(makeSubID, userId);
        }
        
        public string F29505_GetLandCode(int landType1, int landType2, int landType3, int nbhdid, int rollYear) {
            return base.Channel.F29505_GetLandCode(landType1, landType2, landType3, nbhdid, rollYear);
        }
        
        public string F27010GetDistrict(int parcelId, int madTypeId, int rollYear) {
            return base.Channel.F27010GetDistrict(parcelId, madTypeId, rollYear);
        }
        
        public int F27010CheckDefaultDistrict(int parcelId, int madTypeId, int rollYear) {
            return base.Channel.F27010CheckDefaultDistrict(parcelId, madTypeId, rollYear);
        }
        
        public string F27010GetMessage(int parcelId, int madTypeId, int madDistrictId) {
            return base.Channel.F27010GetMessage(parcelId, madTypeId, madDistrictId);
        }
        
        public string F27010GetMiscData(int madDistrictId, int parcelId) {
            return base.Channel.F27010GetMiscData(madDistrictId, parcelId);
        }
        
        public string F27010GetOthersMiscData(int madDistrictId, int parcelId, string procedureName) {
            return base.Channel.F27010GetOthersMiscData(madDistrictId, parcelId, procedureName);
        }
        
        public string F27010GetDefaultMiscData(int parcelId, int madTypeId) {
            return base.Channel.F27010GetDefaultMiscData(parcelId, madTypeId);
        }
        
        public int F27010_SaveMiscAssessment(int parcelId, string miscType, string madItem, string miscItems, int userId) {
            return base.Channel.F27010_SaveMiscAssessment(parcelId, miscType, madItem, miscItems, userId);
        }
        
        public string F84401_GetSignsProperties(int featureId) {
            return base.Channel.F84401_GetSignsProperties(featureId);
        }
        
        public int F84401_SaveSignsProperties(int featureId, string signsProperties, int userId) {
            return base.Channel.F84401_SaveSignsProperties(featureId, signsProperties, userId);
        }
        
        public void F84401_DeleteSignsProperties(int featureId, int userId) {
            base.Channel.F84401_DeleteSignsProperties(featureId, userId);
        }
        
        public string F29531AssociationLinkType(int userid) {
            return base.Channel.F29531AssociationLinkType(userid);
        }
        
        public string F29531_FillAssociationLinkGrid(int keyid, int formId) {
            return base.Channel.F29531_FillAssociationLinkGrid(keyid, formId);
        }
        
        public int F29531_SaveAssociationLink(int associationid, string associationLinkItems, int userId) {
            return base.Channel.F29531_SaveAssociationLink(associationid, associationLinkItems, userId);
        }
        
        public void UpdateAssociationLinkDetails(string associationDetails, int userId) {
            base.Channel.UpdateAssociationLinkDetails(associationDetails, userId);
        }
        
        public string F29531_GetLinkText(int cfgid, int keyid) {
            return base.Channel.F29531_GetLinkText(cfgid, keyid);
        }
        
        public void F29531_DeleteAssociationLink(int associationId, int userId) {
            base.Channel.F29531_DeleteAssociationLink(associationId, userId);
        }
        
        public string F29610_GetHoHExemptionDetails(int eventid) {
            return base.Channel.F29610_GetHoHExemptionDetails(eventid);
        }
        
        public string F29610_GetCalculationOfHoH(int scheduleid, int exemptionid) {
            return base.Channel.F29610_GetCalculationOfHoH(scheduleid, exemptionid);
        }
        
        public string F29610_GetOwnerPercent(int ownerId, int scheduleid) {
            return base.Channel.F29610_GetOwnerPercent(ownerId, scheduleid);
        }
        
        public int F29610_SaveHoHExemptionDetails(int eventId, string HoHItems, int userId) {
            return base.Channel.F29610_SaveHoHExemptionDetails(eventId, HoHItems, userId);
        }
        
        public string F9610QuickFind(int form, string keyword) {
            return base.Channel.F9610QuickFind(form, keyword);
        }
        
        public string F9110GetMasterNameSearch(string lastName, string firstName, string address) {
            return base.Channel.F9110GetMasterNameSearch(lastName, firstName, address);
        }
        
        public string F1411ParcelStatementSearch(string searchNumber) {
            return base.Channel.F1411ParcelStatementSearch(searchNumber);
        }
        
        public string F29620_GetAglandApplicationDetails(int eventid) {
            return base.Channel.F29620_GetAglandApplicationDetails(eventid);
        }
        
        public int F29620_SaveAglandApplicationDetails(int eventId, int ownerId, int userId) {
            return base.Channel.F29620_SaveAglandApplicationDetails(eventId, ownerId, userId);
        }
        
        public string F35075_GetStateAssessedOwnerDetails(int stateId) {
            return base.Channel.F35075_GetStateAssessedOwnerDetails(stateId);
        }
        
        public int F35075_SaveStateAssessedOwner(System.Nullable<int> stateId, string assessedItems, int userId) {
            return base.Channel.F35075_SaveStateAssessedOwner(stateId, assessedItems, userId);
        }
        
        public int F35076_SaveStateAssessedGrid(System.Nullable<int> stateId, string codeItems, int userId) {
            return base.Channel.F35076_SaveStateAssessedGrid(stateId, codeItems, userId);
        }
        
        public int F35075_DeleteStateAssessed(int stateId, int userId) {
            return base.Channel.F35075_DeleteStateAssessed(stateId, userId);
        }
        
        public int F35076_DeleteStateAssessedDetails(int stateIemId, int userId) {
            return base.Channel.F35076_DeleteStateAssessedDetails(stateIemId, userId);
        }
        
        public string F25050GetParcelTypeDetails() {
            return base.Channel.F25050GetParcelTypeDetails();
        }
        
        public string F25050GetScheduleTypeDetails() {
            return base.Channel.F25050GetScheduleTypeDetails();
        }
        
        public decimal GetPenaltyPercent(string filingDate) {
            return base.Channel.GetPenaltyPercent(filingDate);
        }
        
        public decimal F2200_GetFarmExemptAmount(int scheduleId, bool isFarmExempt, int ExemptRollYear, bool isEx259, decimal ex259Amount) {
            return base.Channel.F2200_GetFarmExemptAmount(scheduleId, isFarmExempt, ExemptRollYear, isEx259, ex259Amount);
        }
        
        public string F2200_Get259ExemptionAmount(int scheduleId) {
            return base.Channel.F2200_Get259ExemptionAmount(scheduleId);
        }
        
        public string F49920_ListInstrumentLoad() {
            return base.Channel.F49920_ListInstrumentLoad();
        }
        
        public string F49920_ListInstrumentSearch(string instrumentcondition) {
            return base.Channel.F49920_ListInstrumentSearch(instrumentcondition);
        }
        
        public string F49911_ListPartiesField() {
            return base.Channel.F49911_ListPartiesField();
        }
        
        public int F49911_InsertPartiesFieldDetails(int instid, string grantorItems, string granteeItems, int userId, int isCopy) {
            return base.Channel.F49911_InsertPartiesFieldDetails(instid, grantorItems, granteeItems, userId, isCopy);
        }
        
        public string F49912_ListLegalField(int instID) {
            return base.Channel.F49912_ListLegalField(instID);
        }
        
        public int F49912_InsertLegalFieldDetails(int instid, string legalItems, int userId, int isCopy) {
            return base.Channel.F49912_InsertLegalFieldDetails(instid, legalItems, userId, isCopy);
        }
        
        public string F49912_ListSubDivisionCombo() {
            return base.Channel.F49912_ListSubDivisionCombo();
        }
        
        public string F36061_ListDepr(int nbhdId) {
            return base.Channel.F36061_ListDepr(nbhdId);
        }
        
        public string F36061_ListDeprControlItems(int nbhdId) {
            return base.Channel.F36061_ListDeprControlItems(nbhdId);
        }
        
        public int F36061_SaveDeprControlItems(System.Nullable<int> nbhdId, string deprControlItems, int userId) {
            return base.Channel.F36061_SaveDeprControlItems(nbhdId, deprControlItems, userId);
        }
        
        public string F36062_LandInfluenceItems(int nbhdId) {
            return base.Channel.F36062_LandInfluenceItems(nbhdId);
        }
        
        public int F36062_SaveInfluenceControl(System.Nullable<int> nbhdId, string InfluenceItems, int userId) {
            return base.Channel.F36062_SaveInfluenceControl(nbhdId, InfluenceItems, userId);
        }
        
        public string F35050_GetScheduleLineItemDetails(int scheduleId) {
            return base.Channel.F35050_GetScheduleLineItemDetails(scheduleId);
        }
        
        public string F35050_GetScheduleItem() {
            return base.Channel.F35050_GetScheduleItem();
        }
        
        public string F35050_GetListTableDetails(int itemcategoryID) {
            return base.Channel.F35050_GetListTableDetails(itemcategoryID);
        }
        
        public string F35050_GetListOutTableDetails(int ScheduleID) {
            return base.Channel.F35050_GetListOutTableDetails(ScheduleID);
        }
        
        public string F35050_GetScheduleCategory() {
            return base.Channel.F35050_GetScheduleCategory();
        }
        
        public int F35050_SaveScheduleLineItem(int scheduleId, string scheduleItems, int userId) {
            return base.Channel.F35050_SaveScheduleLineItem(scheduleId, scheduleItems, userId);
        }
        
        public string F35050_CalculateAmount(int ScheduleItemID, int Rollyear, int Year, int DeprDescription) {
            return base.Channel.F35050_CalculateAmount(ScheduleItemID, Rollyear, Year, DeprDescription);
        }
        
        public string F35050_GetDepreciationValue(int scheduleId, int recv, int rollYear) {
            return base.Channel.F35050_GetDepreciationValue(scheduleId, recv, rollYear);
        }
        
        public int F35050_DeleteScheduleLineItem(int scheduleLineId, int userId) {
            return base.Channel.F35050_DeleteScheduleLineItem(scheduleLineId, userId);
        }
        
        public string F35050_GetDeprPercentage(int rollyear, int deprtableID, int year) {
            return base.Channel.F35050_GetDeprPercentage(rollyear, deprtableID, year);
        }
        
        public string F1402_ListScheduleSearch(string ScheduleConditionXML) {
            return base.Channel.F1402_ListScheduleSearch(ScheduleConditionXML);
        }
        
        public System.Data.DataSet ListQueryEngineGridFunction(int queryViewId, string filterValue, string sortOrder, string summaryValue, string columnValue, string keyIdCollection, string isFilter, string maxRecord) {
            return base.Channel.ListQueryEngineGridFunction(queryViewId, filterValue, sortOrder, summaryValue, columnValue, keyIdCollection, isFilter, maxRecord);
        }
        
        public System.Data.DataSet ListQueryEngineGridSnapshot(int snapShotId, int queryViewId, string filterValue, string sortOrder, string summaryValue, string columnValue, string keyIdCollection, int isFilter, string maxRecord) {
            return base.Channel.ListQueryEngineGridSnapshot(snapShotId, queryViewId, filterValue, sortOrder, summaryValue, columnValue, keyIdCollection, isFilter, maxRecord);
        }
        
        public System.Data.DataSet ListColumns(int queryViewId) {
            return base.Channel.ListColumns(queryViewId);
        }
        
        public int F27010GetRollYear(int parcelId) {
            return base.Channel.F27010GetRollYear(parcelId);
        }
        
        public string F27010GetAssessmentType(int rollYear) {
            return base.Channel.F27010GetAssessmentType(rollYear);
        }
        
        public string F3510_ListNeighborhoodType() {
            return base.Channel.F3510_ListNeighborhoodType();
        }
        
        public string F3510_ListNeighborhoodSelection(string neighborhood, string childof, string rollyear, string type, string description) {
            return base.Channel.F3510_ListNeighborhoodSelection(neighborhood, childof, rollyear, type, description);
        }
        
        public string F2010_ListStateCodeSelection() {
            return base.Channel.F2010_ListStateCodeSelection();
        }
        
        public void F9066_SaveData(string insertValue, string updateValue) {
            base.Channel.F9066_SaveData(insertValue, updateValue);
        }
        
        public string F1430_GetCalculatorDetails(int statementId) {
            return base.Channel.F1430_GetCalculatorDetails(statementId);
        }
        
        public string F1430_GetInterestDetails(int statementId, System.DateTime interestDate, decimal taxAmount) {
            return base.Channel.F1430_GetInterestDetails(statementId, interestDate, taxAmount);
        }
        
        public int F1440_SaveRecieptinSnapShotBatchButtonControl(int snapshotId, System.Nullable<int> receiptId, int userId) {
            return base.Channel.F1440_SaveRecieptinSnapShotBatchButtonControl(snapshotId, receiptId, userId);
        }
        
        public string F82001_GetBuildingPermitDetails(int eventID) {
            return base.Channel.F82001_GetBuildingPermitDetails(eventID);
        }
        
        public int F82001_InsertBuildingPermitDetails(int permitId, string buildingPermitItems, int userId) {
            return base.Channel.F82001_InsertBuildingPermitDetails(permitId, buildingPermitItems, userId);
        }
        
        public string F82002_ListContractorManagementData(System.Nullable<int> iContractorID, string ContractorXML) {
            return base.Channel.F82002_ListContractorManagementData(iContractorID, ContractorXML);
        }
        
        public void F82002_DeleteContractorManagement(int contractorId, int UserID) {
            base.Channel.F82002_DeleteContractorManagement(contractorId, UserID);
        }
        
        public int F82002_InsertBuildingPermitDetails(System.Nullable<int> ContractorID, string ContractorItems, int UserID) {
            return base.Channel.F82002_InsertBuildingPermitDetails(ContractorID, ContractorItems, UserID);
        }
        
        public string F36060_GetDepreciationTables(int deprTableId) {
            return base.Channel.F36060_GetDepreciationTables(deprTableId);
        }
        
        public int F36060_SaveDepreciationTables(int deprTableId, string deprecationItem, string otherDeprItem, int userId) {
            return base.Channel.F36060_SaveDepreciationTables(deprTableId, deprecationItem, otherDeprItem, userId);
        }
        
        public void F36060_DeleteDepreciationTables(int deprTableId, int userId) {
            base.Channel.F36060_DeleteDepreciationTables(deprTableId, userId);
        }
        
        public string F49910_GetInstrumentHeaderDetails(int instId) {
            return base.Channel.F49910_GetInstrumentHeaderDetails(instId);
        }
        
        public string F49910_GetInstrumentTypeDetails() {
            return base.Channel.F49910_GetInstrumentTypeDetails();
        }
        
        public int F49910_SaveInstrumentHeaderDetails(int instId, string instrumentItems, string paymentItems, int userId) {
            return base.Channel.F49910_SaveInstrumentHeaderDetails(instId, instrumentItems, paymentItems, userId);
        }
        
        public int F49910CheckInstrumentHeaderDetails(int instId, string instrumentItems, string paymentItems, int userId) {
            return base.Channel.F49910CheckInstrumentHeaderDetails(instId, instrumentItems, paymentItems, userId);
        }
        
        public int F49910_DeleteInstrumentHeader(int instId, int userId) {
            return base.Channel.F49910_DeleteInstrumentHeader(instId, userId);
        }
        
        public string F49910_CopyInstrumentHeaderDetails(int instrumentId, int instrumentValue, int grantorValue, int granteeValue, int legalValue) {
            return base.Channel.F49910_CopyInstrumentHeaderDetails(instrumentId, instrumentValue, grantorValue, granteeValue, legalValue);
        }
        
        public string F49910_GetGranterAddressDetails(int grantId) {
            return base.Channel.F49910_GetGranterAddressDetails(grantId);
        }
        
        public string F49910_GetFeeDetails(int insTypeId) {
            return base.Channel.F49910_GetFeeDetails(insTypeId);
        }
        
        public string F2200_ListEditScheduleDetails(int SheduleID) {
            return base.Channel.F2200_ListEditScheduleDetails(SheduleID);
        }
        
        public string F25050_GetScheduleDetails(int ScheduleID) {
            return base.Channel.F25050_GetScheduleDetails(ScheduleID);
        }
        
        public int F2005_GetValidUser(int scheduleId, int userId) {
            return base.Channel.F2005_GetValidUser(scheduleId, userId);
        }
        
        public int F2005_UpdateParcelLockDetails(int scheduleId, int lockValue, int userId) {
            return base.Channel.F2005_UpdateParcelLockDetails(scheduleId, lockValue, userId);
        }
        
        public string F2005_GetScheduleUserName(int userId) {
            return base.Channel.F2005_GetScheduleUserName(userId);
        }
        
        public string F2200_InsertEditSchedule(System.Nullable<int> ScheduleID, string ScheduleItems, int UserID) {
            return base.Channel.F2200_InsertEditSchedule(ScheduleID, ScheduleItems, UserID);
        }
        
        public int F2200_UpdateEditSchedule(int ScheduleID, string ScheduleItems, int UserID) {
            return base.Channel.F2200_UpdateEditSchedule(ScheduleID, ScheduleItems, UserID);
        }
        
        public int F2200_DeleteEditSchedule(int ScheduleID, int UserID) {
            return base.Channel.F2200_DeleteEditSchedule(ScheduleID, UserID);
        }
        
        public string F2200_GetAssessmentTypeDetails(string assessmentType) {
            return base.Channel.F2200_GetAssessmentTypeDetails(assessmentType);
        }
        
        public TerraScan.BusinessEntities.F25000FieldUseData F25000_ChkOutType2XML(int snapShotId, string snapShotValue) {
            return base.Channel.F25000_ChkOutType2XML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutNBHDXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutNBHDXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutMiscXML(int snapShotId, string snapShotValue) {
            return base.Channel.F3230_ChkOutMiscXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutUserXML(int snapShotId, string snapShotValue) {
            return base.Channel.F3230_ChkOutUserXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutEventXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutEventXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutParcelXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutParcelXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutOwnerXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutOwnerXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230ChkOutDeprMiscXML(int snapShotId, string snapShotValue) {
            return base.Channel.F3230ChkOutDeprMiscXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230ChkOutDeprXML(int snapShotId, string snapShotValue) {
            return base.Channel.F3230ChkOutDeprXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutEstimateCompXML(int snapShotId, string snapShotValue) {
            return base.Channel.F3230_ChkOutEstimateCompXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutVSTGCitemXML(int snapShotId, string snapShotValue) {
            return base.Channel.F3230_ChkOutVSTGCitemXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutMSCEstimateXML(int snapShotId, string snapShotValue) {
            return base.Channel.F3230_ChkOutMSCEstimateXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutEstimateResultXML(int snapShotId, string snapShotValue) {
            return base.Channel.F3230_ChkOutEstimateResultXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutMSCEstimateOccupancyXML(int snapShotId, string snapShotValue) {
            return base.Channel.F3230_ChkOutMSCEstimateOccupancyXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutEstimateBuildingXML(int snapShotId, string snapShotValue) {
            return base.Channel.F3230_ChkOutEstimateBuildingXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutLandValuesXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutLandValuesXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutTerraGonXML(int snapShotId) {
            return base.Channel.F3230_ChkOutTerraGonXML(snapShotId);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutEstimateComponentXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutEstimateComponentXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutCommentXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutCommentXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutVSTGComponentXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutVSTGComponentXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutFileXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutFileXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutVSTGGonBldgXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutVSTGGonBldgXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ListLockedParcelID(out int RowendValue, System.Nullable<int> SnapShotID) {
            return base.Channel.F3230_ListLockedParcelID(out RowendValue, SnapShotID);
        }
        
        public int F3230_LockParcelID(System.Nullable<int> SnapShotID, System.Nullable<int> LockAdminBy, System.Nullable<int> UserID, string UnlockParcelXML) {
            return base.Channel.F3230_LockParcelID(SnapShotID, LockAdminBy, UserID, UnlockParcelXML);
        }
        
        public int F3230_InsertChkInXML(string xmlInsContent, string tableXml, int userId) {
            return base.Channel.F3230_InsertChkInXML(xmlInsContent, tableXml, userId);
        }
        
        public int F3230_InsertAddedRecordXML(string xmlInsContent, string tableXml, int userId) {
            return base.Channel.F3230_InsertAddedRecordXML(xmlInsContent, tableXml, userId);
        }
        
        public int F3230_InsertChkOutXML(string xmlInsContent, string tableXml, int userId, bool IsDelete) {
            return base.Channel.F3230_InsertChkOutXML(xmlInsContent, tableXml, userId, IsDelete);
        }
        
        public string F3200_GetSketchData(int objectId) {
            return base.Channel.F3200_GetSketchData(objectId);
        }
        
        public string F3200_GetStyleList(int objectId) {
            return base.Channel.F3200_GetStyleList(objectId);
        }
        
        public System.Data.DataSet F3200_SaveSketchData(int objectId, string sketchData, int userId) {
            return base.Channel.F3200_SaveSketchData(objectId, sketchData, userId);
        }
        
        public int F3200_CheckSmartPart(int formId) {
            return base.Channel.F3200_CheckSmartPart(formId);
        }
        
        public string GetWebFormXML(System.Nullable<int> keyId, int form, int userId) {
            return base.Channel.GetWebFormXML(keyId, form, userId);
        }
        
        public string F9065_GetPreviewDetail(int snapShotId, string snapShotDetail) {
            return base.Channel.F9065_GetPreviewDetail(snapShotId, snapShotDetail);
        }
        
        public int F9065_InsertApplicationConfiguration(string configXml, int userId) {
            return base.Channel.F9065_InsertApplicationConfiguration(configXml, userId);
        }
        
        public string F9065_GetcfgConfiguration(string cfgname) {
            return base.Channel.F9065_GetcfgConfiguration(cfgname);
        }
        
        public int F3230_UpdateApplicationStatus(bool isCheckedOut, bool isOnline, int userId) {
            return base.Channel.F3230_UpdateApplicationStatus(isCheckedOut, isOnline, userId);
        }
        
        public string F3230_GetSnapshotDetail() {
            return base.Channel.F3230_GetSnapshotDetail();
        }
        
        public int F3230_DeleteCheckOutTable() {
            return base.Channel.F3230_DeleteCheckOutTable();
        }
        
        public int F3230_InsertFieldElement(string fieldElement, int userId) {
            return base.Channel.F3230_InsertFieldElement(fieldElement, userId);
        }
        
        public string F3230_GetPreviewDetail(int snapShotId, string snapShotDetail) {
            return base.Channel.F3230_GetPreviewDetail(snapShotId, snapShotDetail);
        }
        
        public int F3230_InsertApplicationConfiguration(string configXml, int userId) {
            return base.Channel.F3230_InsertApplicationConfiguration(configXml, userId);
        }
        
        public string F3230_GetcfgConfiguration(string cfgname) {
            return base.Channel.F3230_GetcfgConfiguration(cfgname);
        }
        
        public int F3230_AddValues(int KeyID, string KeyName, int Form, System.Nullable<int> ModuleID, int InsertedBy) {
            return base.Channel.F3230_AddValues(KeyID, KeyName, Form, ModuleID, InsertedBy);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutConfigXML(int snapShotId, string snapShotValue) {
            return base.Channel.F3230_ChkOutConfigXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutCommonXML(int snapShotId, string snapShotValue) {
            return base.Channel.F3230_ChkOutCommonXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData f3230_ChkOutCorrectionXML(int snapShotId) {
            return base.Channel.f3230_ChkOutCorrectionXML(snapShotId);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData f3230_ChkOutSaleXML(int snapShotId) {
            return base.Channel.f3230_ChkOutSaleXML(snapShotId);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData f3230_ChkOutReceiptXML(int snapShotId) {
            return base.Channel.f3230_ChkOutReceiptXML(snapShotId);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData f3230_ChkOutStatementXML(int snapShotId) {
            return base.Channel.f3230_ChkOutStatementXML(snapShotId);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutFormXML(int snapShotId, string snapShotValue) {
            return base.Channel.F3230_ChkOutFormXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230GetApexFilePath(int snapShotId) {
            return base.Channel.F3230GetApexFilePath(snapShotId);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutDistrictXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutDistrictXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutLegalXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutLegalXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutMisc_CatalogXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutMisc_CatalogXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutMiscTableXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutMiscTableXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutMOwnerXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutMOwnerXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutObjectXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutObjectXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutValueSliceXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkOutValueSliceXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F25000FieldUseData F25000_ChkOutLandXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F25000_ChkOutLandXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F25000FieldUseData F25000_ChkOutVersionXML(out int RowendValue, int snapShotId, string snapShotValue, string TableName, int StartRow) {
            return base.Channel.F25000_ChkOutVersionXML(out RowendValue, snapShotId, snapShotValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230FieldUseData F3230_ChkOutSitusXML(int snapShotId, string snapShotValue) {
            return base.Channel.F3230_ChkOutSitusXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F25000FieldUseData F25000_ChkOutSeniorExemptionXML(int snapShotId, string snapShotValue) {
            return base.Channel.F25000_ChkOutSeniorExemptionXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F25000FieldUseData F25000_ChkOutAssessmentTypeXML(int snapShotId, string snapShotValue) {
            return base.Channel.F25000_ChkOutAssessmentTypeXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F25000FieldUseData F25000_ChkOutParcelValueXML(int snapShotId, string snapShotValue) {
            return base.Channel.F25000_ChkOutParcelValueXML(snapShotId, snapShotValue);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInFileXML(out int RowendValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkInFileXML(out RowendValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInInsertedFileXML() {
            return base.Channel.F3230_ChkInInsertedFileXML();
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_UpdateFile(string updatexmlContent) {
            return base.Channel.F3230_UpdateFile(updatexmlContent);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_InsertFile(string insertxmlContent) {
            return base.Channel.F3230_InsertFile(insertxmlContent);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInLandValuesXML(out int RowendValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkInLandValuesXML(out RowendValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInLandXML(out int RowendValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkInLandXML(out RowendValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInMiscXML(out int RowendValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkInMiscXML(out RowendValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInMSC_EstimateXML(out int RowendValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkInMSC_EstimateXML(out RowendValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInObjectXML(out int RowendValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkInObjectXML(out RowendValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInParcelValueXML(out int RowendValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkInParcelValueXML(out RowendValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInParcelXML(out int RowendValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkInParcelXML(out RowendValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInTerraGonXML(out int RowendValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkInTerraGonXML(out RowendValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInType2XML(out int RowendValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkInType2XML(out RowendValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInType6XML(out int RowendValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkInType6XML(out RowendValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInValueSliceXML(out int RowendValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkInValueSliceXML(out RowendValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInTypesXML() {
            return base.Channel.F3230_ChkInTypesXML();
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInLandCodeXML() {
            return base.Channel.F3230_ChkInLandCodeXML();
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_GetChkOutParcelIDs(int SnapShotID) {
            return base.Channel.F3230_GetChkOutParcelIDs(SnapShotID);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_GetCheckOutDetails(int SnapShotID, int UserID) {
            return base.Channel.F3230_GetCheckOutDetails(SnapShotID, UserID);
        }
        
        public int F3230_SaveChkOutParcelIDs(string ParcelXML) {
            return base.Channel.F3230_SaveChkOutParcelIDs(ParcelXML);
        }
        
        public int F3230_SaveCheckOutDetails(string CheckOutXML) {
            return base.Channel.F3230_SaveCheckOutDetails(CheckOutXML);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ParcelID() {
            return base.Channel.F3230_ParcelID();
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInDeprXML() {
            return base.Channel.F3230_ChkInDeprXML();
        }
        
        public string F3230_ChkInInsertXML(out string ChkInInsertXML) {
            return base.Channel.F3230_ChkInInsertXML(out ChkInInsertXML);
        }
        
        public string F3230_ChkInTerraGonInsertXML(out string ChkInInsertXML) {
            return base.Channel.F3230_ChkInTerraGonInsertXML(out ChkInInsertXML);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInEstimateComponentGroupXML() {
            return base.Channel.F3230_ChkInEstimateComponentGroupXML();
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInNBHDXML() {
            return base.Channel.F3230_ChkInNBHDXML();
        }
        
        public int F9065_UpdateApplicationStatus(bool isCheckedOut, bool isOnline, int userId) {
            return base.Channel.F9065_UpdateApplicationStatus(isCheckedOut, isOnline, userId);
        }
        
        public string F9065_GetSnapshotDetail() {
            return base.Channel.F9065_GetSnapshotDetail();
        }
        
        public int F9065_GetAuditCount() {
            return base.Channel.F9065_GetAuditCount();
        }
        
        public int F9065_DeleteCheckOutTable() {
            return base.Channel.F9065_DeleteCheckOutTable();
        }
        
        public int F9065_InsertFieldElement(string fieldElement, int userId) {
            return base.Channel.F9065_InsertFieldElement(fieldElement, userId);
        }
        
        public string F36035_GetLandCodeBaseValue(string landCode, int valueSliceId, System.Nullable<int> AglandID) {
            return base.Channel.F36035_GetLandCodeBaseValue(landCode, valueSliceId, AglandID);
        }
        
        public string F36035_ListInfluenceType(int valueSliceId) {
            return base.Channel.F36035_ListInfluenceType(valueSliceId);
        }
        
        public string F36035_ListLandProgram() {
            return base.Channel.F36035_ListLandProgram();
        }
        
        public string F36035_GetUseBaseDollarPerUnit(byte programId, byte useAdjustmentType, string useAdjustment, decimal useBaseValue, int rollYear, decimal useMultiplier, decimal units) {
            return base.Channel.F36035_GetUseBaseDollarPerUnit(programId, useAdjustmentType, useAdjustment, useBaseValue, rollYear, useMultiplier, units);
        }
        
        public string F36035_ExecuteVFormula(string vformula, decimal units) {
            return base.Channel.F36035_ExecuteVFormula(vformula, units);
        }
        
        public string F39135_LandDetails(int valueSliceId) {
            return base.Channel.F39135_LandDetails(valueSliceId);
        }
        
        public string F39135_Landtypes(int valueSliceId, int rollYear) {
            return base.Channel.F39135_Landtypes(valueSliceId, rollYear);
        }
        
        public string F39135_LandUseTypes(int valueSliceId) {
            return base.Channel.F39135_LandUseTypes(valueSliceId);
        }
        
        public string F39135_GetLandTotals(int valueSliceId) {
            return base.Channel.F39135_GetLandTotals(valueSliceId);
        }
        
        public string F39135_WeightedRating(string landCode, decimal units, System.Nullable<int> landUse, int valueSliceId) {
            return base.Channel.F39135_WeightedRating(landCode, units, landUse, valueSliceId);
        }
        
        public string F39135_CalculatedBaseValue(string LandCode, int adjustmentTypeID, decimal units, decimal baseCostUnit, decimal adjustment, System.Nullable<int> AglandID, int valueSliceId) {
            return base.Channel.F39135_CalculatedBaseValue(LandCode, adjustmentTypeID, units, baseCostUnit, adjustment, AglandID, valueSliceId);
        }
        
        public string F39135_AdjustmentType() {
            return base.Channel.F39135_AdjustmentType();
        }
        
        public int F39135_InsertLandDetails(int luid, string landUnitItems, string influenceItems, int userId) {
            return base.Channel.F39135_InsertLandDetails(luid, landUnitItems, influenceItems, userId);
        }
        
        public string F81001_GetEventFeeCatalog(int feeCatId) {
            return base.Channel.F81001_GetEventFeeCatalog(feeCatId);
        }
        
        public int F81001_SaveEventFeeCatalog(int feeCatId, string feeCatalogItems, int userId) {
            return base.Channel.F81001_SaveEventFeeCatalog(feeCatId, feeCatalogItems, userId);
        }
        
        public void F81001_DeleteEventFeeCatalog(int feeCatId, int userId) {
            base.Channel.F81001_DeleteEventFeeCatalog(feeCatId, userId);
        }
        
        public int F81001_CheckEventFeeCatalog(int feeCatId, string formNumber, System.DateTime effectiveDate) {
            return base.Channel.F81001_CheckEventFeeCatalog(feeCatId, formNumber, effectiveDate);
        }
        
        public string F36040_ListNeighborhoodType() {
            return base.Channel.F36040_ListNeighborhoodType();
        }
        
        public string F36040_ListCropCatalog() {
            return base.Channel.F36040_ListCropCatalog();
        }
        
        public int F36040_DeleteCropCatalog(int cropVId, int userId) {
            return base.Channel.F36040_DeleteCropCatalog(cropVId, userId);
        }
        
        public int F36040_SaveCropCatalog(System.Nullable<int> cropUnqiueId, string cropCatalogItems, int userId) {
            return base.Channel.F36040_SaveCropCatalog(cropUnqiueId, cropCatalogItems, userId);
        }
        
        public string F36040_ListCropNeighborhoodType(int rollYear) {
            return base.Channel.F36040_ListCropNeighborhoodType(rollYear);
        }
        
        public string F36041_GetCrop(int valueSliceId) {
            return base.Channel.F36041_GetCrop(valueSliceId);
        }
        
        public string F36041_GetCropCode(int valueSliceId) {
            return base.Channel.F36041_GetCropCode(valueSliceId);
        }
        
        public int F36041_SaveCropCodeDetails(int valueSliceId, string cropItems, int userId) {
            return base.Channel.F36041_SaveCropCodeDetails(valueSliceId, cropItems, userId);
        }
        
        public void F36041_DeleteCrop(int cropId, int userId) {
            base.Channel.F36041_DeleteCrop(cropId, userId);
        }
        
        public void F36041_DeleteCropIds(string cropIds, int userId) {
            base.Channel.F36041_DeleteCropIds(cropIds, userId);
        }
        
        public string F81002_GetEventFee(int eventId, int form) {
            return base.Channel.F81002_GetEventFee(eventId, form);
        }
        
        public int F81002_SaveEventFee(int eventId, string feeItems, int userId) {
            return base.Channel.F81002_SaveEventFee(eventId, feeItems, userId);
        }
        
        public void F81002_DeleteEventFee(int eventId, int userId) {
            base.Channel.F81002_DeleteEventFee(eventId, userId);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInCommentXML(out int RowendValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkInCommentXML(out RowendValue, TableName, StartRow);
        }
        
        public TerraScan.BusinessEntities.F3230CheckInData F3230_ChkInEstimateXML(out int RowendValue, string TableName, int StartRow) {
            return base.Channel.F3230_ChkInEstimateXML(out RowendValue, TableName, StartRow);
        }
        
        public void F27080_DeleteExemption(int userId, int exemptionId, string exemptionCode) {
            base.Channel.F27080_DeleteExemption(userId, exemptionId, exemptionCode);
        }
        
        public int F27080_SaveExemptionType(int exemptionId, string seniorExemption, string exemptionType, int checkError, int userId) {
            return base.Channel.F27080_SaveExemptionType(exemptionId, seniorExemption, exemptionType, checkError, userId);
        }
        
        public string F29530_FillAssociationEventGrid(int eventId) {
            return base.Channel.F29530_FillAssociationEventGrid(eventId);
        }
        
        public string F29500_GetBaseParcelValue(int parcelId) {
            return base.Channel.F29500_GetBaseParcelValue(parcelId);
        }
        
        public string F29500_ParcelSplitLoad(int eventId) {
            return base.Channel.F29500_ParcelSplitLoad(eventId);
        }
        
        public int F29500_SaveParcelSplit(string splitDefinitionXml, string splitHeaderXml, string parcelSplitXml, string parcelObjectXml, string cropXml, int userId) {
            return base.Channel.F29500_SaveParcelSplit(splitDefinitionXml, splitHeaderXml, parcelSplitXml, parcelObjectXml, cropXml, userId);
        }
        
        public string F29500_CreateParcel(int splitId, int userId) {
            return base.Channel.F29500_CreateParcel(splitId, userId);
        }
        
        public string F36032_ListLandItems(System.Nullable<int> rollYear) {
            return base.Channel.F36032_ListLandItems(rollYear);
        }
        
        public string F36032_ListLandCodeDetails() {
            return base.Channel.F36032_ListLandCodeDetails();
        }
        
        public int F36032_DeleteLandCode(int landCodeId, int userId) {
            return base.Channel.F36032_DeleteLandCode(landCodeId, userId);
        }
        
        public int F36032_SaveLandCodeDetails(System.Nullable<int> landCodeId, string landItems, int userId) {
            return base.Channel.F36032_SaveLandCodeDetails(landCodeId, landItems, userId);
        }
        
        public string F29510_GetBaseParcelValue(int eventId) {
            return base.Channel.F29510_GetBaseParcelValue(eventId);
        }
        
        public System.Data.DataSet F29510_GetCombineParcelDetails(int parcelId) {
            return base.Channel.F29510_GetCombineParcelDetails(parcelId);
        }
        
        public int F29510_SaveCombineParcelDetails(System.Nullable<int> combineId, string parcelNumber, string combineItems, int userId, bool IsAttachment, bool IsComment, bool IsPermit, bool IsAssociation, bool IsNewConstruction) {
            return base.Channel.F29510_SaveCombineParcelDetails(combineId, parcelNumber, combineItems, userId, IsAttachment, IsComment, IsPermit, IsAssociation, IsNewConstruction);
        }
        
        public string F29510_CreateCombinedParcel(int combineId, string eventId, string parcelNumber, int userId, bool IsAttachment, bool IsComment, bool IsPermit, bool IsAssociation, bool IsNewConstruction) {
            return base.Channel.F29510_CreateCombinedParcel(combineId, eventId, parcelNumber, userId, IsAttachment, IsComment, IsPermit, IsAssociation, IsNewConstruction);
        }
        
        public string F36033_ListLandCodeValues() {
            return base.Channel.F36033_ListLandCodeValues();
        }
        
        public string F36035_ListShapeDetails() {
            return base.Channel.F36035_ListShapeDetails();
        }
        
        public string F36033_ListIndividualLandCodeValuesItems() {
            return base.Channel.F36033_ListIndividualLandCodeValuesItems();
        }
        
        public string F36033_ListNeighborhoodType(int rollYear) {
            return base.Channel.F36033_ListNeighborhoodType(rollYear);
        }
        
        public int F36033_DeleteLandCodevalue(int luvId, int userId) {
            return base.Channel.F36033_DeleteLandCodevalue(luvId, userId);
        }
        
        public int F36033_SaveLandCodeValue(System.Nullable<int> landUnqiueId, string landValueItems, int userId) {
            return base.Channel.F36033_SaveLandCodeValue(landUnqiueId, landValueItems, userId);
        }
        
        public string F39133_ListLandCodeValues() {
            return base.Channel.F39133_ListLandCodeValues();
        }
        
        public string F39133_ListIndividualLandCodeValuesItems() {
            return base.Channel.F39133_ListIndividualLandCodeValuesItems();
        }
        
        public string F39133_ListNeighborhoodType(int rollYear) {
            return base.Channel.F39133_ListNeighborhoodType(rollYear);
        }
        
        public int F39133_DeleteLandCodevalue(int luvId, int userId) {
            return base.Channel.F39133_DeleteLandCodevalue(luvId, userId);
        }
        
        public int F39133_SaveLandCodeValue(System.Nullable<int> landUnqiueId, string landValueItems, int userId) {
            return base.Channel.F39133_SaveLandCodeValue(landUnqiueId, landValueItems, userId);
        }
        
        public string F39133_CalculateNonCropValue(int rollYear, System.Nullable<decimal> CropRate, System.Nullable<decimal> NonCropRate) {
            return base.Channel.F39133_CalculateNonCropValue(rollYear, CropRate, NonCropRate);
        }
        
        public string F36035_ListLandDetails(int valueSliceId) {
            return base.Channel.F36035_ListLandDetails(valueSliceId);
        }
        
        public string F36035_ListLandTypeDetails(int valueSliceId) {
            return base.Channel.F36035_ListLandTypeDetails(valueSliceId);
        }
        
        public int F36035_InsertLandDetails(int luid, string landUnitItems, string influenceItems, int userId) {
            return base.Channel.F36035_InsertLandDetails(luid, landUnitItems, influenceItems, userId);
        }
        
        public void F36035_DeleteLandDetails(int luid, int userId) {
            base.Channel.F36035_DeleteLandDetails(luid, userId);
        }
        
        public string F36035_GetLandCode(int rollYear, int landType1, int landType2, int landType3, int valuesliceId, System.Nullable<int> AglandID) {
            return base.Channel.F36035_GetLandCode(rollYear, landType1, landType2, landType3, valuesliceId, AglandID);
        }
        
        public string F36011_RecalcMiscImprovement(bool withprimary, System.Nullable<int> yearIn, string condition, System.Nullable<int> economicLife, System.Nullable<int> effectiveAge, System.Nullable<decimal> physDeprPerc, System.Nullable<decimal> funcDeprPerc, System.Nullable<decimal> BaseCost, System.Nullable<decimal> physDepr, System.Nullable<decimal> funcDepr, int valueSliceId, int miscCodeId) {
            return base.Channel.F36011_RecalcMiscImprovement(withprimary, yearIn, condition, economicLife, effectiveAge, physDeprPerc, funcDeprPerc, BaseCost, physDepr, funcDepr, valueSliceId, miscCodeId);
        }
        
        public string F36010_GetMiscImprovementCatalog(int miscCodeId) {
            return base.Channel.F36010_GetMiscImprovementCatalog(miscCodeId);
        }
        
        public int F36010_SaveMiscImprovementCatalog(int miscCodeId, string miscCatalogItems, int userId, string miscCatalogChoiceItems) {
            return base.Channel.F36010_SaveMiscImprovementCatalog(miscCodeId, miscCatalogItems, userId, miscCatalogChoiceItems);
        }
        
        public void F36010_DeleteMiscImprovementCatalog(int miscCodeId, int userId) {
            base.Channel.F36010_DeleteMiscImprovementCatalog(miscCodeId, userId);
        }
        
        public int F36010_CheckMiscImprovementCatalog(int miscCodeId, string miscCode, int rollYear) {
            return base.Channel.F36010_CheckMiscImprovementCatalog(miscCodeId, miscCode, rollYear);
        }
        
        public string F36010_ListDeprTable(int rollYear) {
            return base.Channel.F36010_ListDeprTable(rollYear);
        }
        
        public string F36001_GetMarshalAndSwiftCommercial(int valueSliceId) {
            return base.Channel.F36001_GetMarshalAndSwiftCommercial(valueSliceId);
        }
        
        public int F36001_SaveMarshalAndSwiftCommercial(int valueSliceId, string estimateDetails, string occupancyDetails, string componentDetails, string depreciationXml, int userId) {
            return base.Channel.F36001_SaveMarshalAndSwiftCommercial(valueSliceId, estimateDetails, occupancyDetails, componentDetails, depreciationXml, userId);
        }
        
        public string F9080_GetRollYearManagement(short rollYear, int userId) {
            return base.Channel.F9080_GetRollYearManagement(rollYear, userId);
        }
        
        public string F9080_ListRollYearManagement(int userId) {
            return base.Channel.F9080_ListRollYearManagement(userId);
        }
        
        public string F9080_ExecRollYearStep(short rollOverId, int userId) {
            return base.Channel.F9080_ExecRollYearStep(rollOverId, userId);
        }
        
        public string F2550_ListParcelDetails(string parcelId, string scheduleId, string stateId, string centralXmlIds) {
            return base.Channel.F2550_ListParcelDetails(parcelId, scheduleId, stateId, centralXmlIds);
        }
        
        public int F2550_ExecTaxRollCorrections(string parcelItems, int userId) {
            return base.Channel.F2550_ExecTaxRollCorrections(parcelItems, userId);
        }
        
        public string F2550_ListCorrectionCode() {
            return base.Channel.F2550_ListCorrectionCode();
        }
        
        public string F2550_ListAttachmentDetails(int formId, string keyIds, int userId, int moduleId) {
            return base.Channel.F2550_ListAttachmentDetails(formId, keyIds, userId, moduleId);
        }
        
        public void F2550_DeleteAttachmentDetails(int formId) {
            base.Channel.F2550_DeleteAttachmentDetails(formId);
        }
        
        public int F2550_SaveCorrectionParcelsTemp(System.Nullable<int> correctionId, string correctionTempItems, string corrParcelIds, string statementsIds, int userId) {
            return base.Channel.F2550_SaveCorrectionParcelsTemp(correctionId, correctionTempItems, corrParcelIds, statementsIds, userId);
        }
        
        public string F2551_ListEditStatementDetails(int parcelId, short typeId, int statementId, int ownerId, int userId) {
            return base.Channel.F2551_ListEditStatementDetails(parcelId, typeId, statementId, ownerId, userId);
        }
        
        public string F2551_LoadStatementGridDetails(int parcelId, short typeId, int statementId, int ownerId, string itemXML, string changeXML, int userId) {
            return base.Channel.F2551_LoadStatementGridDetails(parcelId, typeId, statementId, ownerId, itemXML, changeXML, userId);
        }
        
        public int SaveEditStatementtDetails(int parcelId, short typeId, int statementId, int ownerId, string itemXML, string headerXML, int userId) {
            return base.Channel.SaveEditStatementtDetails(parcelId, typeId, statementId, ownerId, itemXML, headerXML, userId);
        }
        
        public string F2552_ListStatementSelectionDetails(int parcelId, int typeId, int userId) {
            return base.Channel.F2552_ListStatementSelectionDetails(parcelId, typeId, userId);
        }
        
        public string F1401_GetParcelType(System.Nullable<int> parcelId) {
            return base.Channel.F1401_GetParcelType(parcelId);
        }
        
        public string F1401_GetSearchResult(string parcelSearchXml) {
            return base.Channel.F1401_GetSearchResult(parcelSearchXml);
        }
        
        public string F3001_GetObjectDetail(int objectId) {
            return base.Channel.F3001_GetObjectDetail(objectId);
        }
        
        public int F3001_SaveObjectManagement(int objectId, string objectItems, int userId) {
            return base.Channel.F3001_SaveObjectManagement(objectId, objectItems, userId);
        }
        
        public void F3001_DeleteObjectManagement(int objectId, int userId) {
            base.Channel.F3001_DeleteObjectManagement(objectId, userId);
        }
        
        public string F3001_GetParcelDescription(int parcelId) {
            return base.Channel.F3001_GetParcelDescription(parcelId);
        }
        
        public int F3001_CopyObject(int objectId, string objectXml, int userId) {
            return base.Channel.F3001_CopyObject(objectId, objectXml, userId);
        }
        
        public System.Data.DataSet GetUserNetName(string userFullName) {
            return base.Channel.GetUserNetName(userFullName);
        }
        
        public string F27080_ListExemptionTypeCombo(int applicationId) {
            return base.Channel.F27080_ListExemptionTypeCombo(applicationId);
        }
        
        public string F27080_FillExemptionTypeGrid(int exemptionId) {
            return base.Channel.F27080_FillExemptionTypeGrid(exemptionId);
        }
        
        public string F27080_GetExemptionError(int exemptionId, string exemptionCode) {
            return base.Channel.F27080_GetExemptionError(exemptionId, exemptionCode);
        }
        
        public void F8062_SaveComponentsConfiguration(string componentsConfig, int userId) {
            base.Channel.F8062_SaveComponentsConfiguration(componentsConfig, userId);
        }
        
        public int F8062_DeleteComponentsConfiguration(int componentId, int userId) {
            return base.Channel.F8062_DeleteComponentsConfiguration(componentId, userId);
        }
        
        public string F8058_ListResourcesConfigDetails() {
            return base.Channel.F8058_ListResourcesConfigDetails();
        }
        
        public int F8058_InsertResourcesConfigDetails(int equipmentId, string equiptResource, int applicationId, int userId) {
            return base.Channel.F8058_InsertResourcesConfigDetails(equipmentId, equiptResource, applicationId, userId);
        }
        
        public int F8058_DeleteResourcesConfigDetails(int equipmentId, int userId) {
            return base.Channel.F8058_DeleteResourcesConfigDetails(equipmentId, userId);
        }
        
        public string F1013_ListUnpaidReceipts(System.Nullable<int> userId) {
            return base.Channel.F1013_ListUnpaidReceipts(userId);
        }
        
        public int F1013_SaveBatchPayment(int ppaymentId, int userId, string paymentItemsXml, string receiptItemsXml, string receiptDate) {
            return base.Channel.F1013_SaveBatchPayment(ppaymentId, userId, paymentItemsXml, receiptItemsXml, receiptDate);
        }
        
        public string F1013_ListSnapShotItems(int snapShotId) {
            return base.Channel.F1013_ListSnapShotItems(snapShotId);
        }
        
        public int F1013_DeleteReceiptItems(int paymentId, string receiptItems, int userId) {
            return base.Channel.F1013_DeleteReceiptItems(paymentId, receiptItems, userId);
        }
        
        public string F8060_ListPartsConfig(int componentId) {
            return base.Channel.F8060_ListPartsConfig(componentId);
        }
        
        public string F8060_ListComponents() {
            return base.Channel.F8060_ListComponents();
        }
        
        public void F8060_SavePartsConfiguration(int partId, string partsConfig, int userId) {
            base.Channel.F8060_SavePartsConfiguration(partId, partsConfig, userId);
        }
        
        public int F8060_DeletePartsConfiguration(int partId, int userId) {
            return base.Channel.F8060_DeletePartsConfiguration(partId, userId);
        }
        
        public string F9102_GetOwnerStatusDetails(int typeId, int keyId) {
            return base.Channel.F9102_GetOwnerStatusDetails(typeId, keyId);
        }
        
        public System.Data.DataSet F95005_ListReferenceData(int masterFormNo) {
            return base.Channel.F95005_ListReferenceData(masterFormNo);
        }
        
        public int F95005_SaveReferenceData(string referenceData, string deletedData, string tableName, string keyColumn, int userId) {
            return base.Channel.F95005_SaveReferenceData(referenceData, deletedData, tableName, keyColumn, userId);
        }
        
        public string F96000_GetOwnerManagementDetails(int ownerId) {
            return base.Channel.F96000_GetOwnerManagementDetails(ownerId);
        }
        
        public string F96000_ListOwnerStatusType() {
            return base.Channel.F96000_ListOwnerStatusType();
        }
        
        public string F96000_CountryComboDetails() {
            return base.Channel.F96000_CountryComboDetails();
        }
        
        public int F96000_InsertOwnerManagementDetails(int ownerId, string ownerDetails, string ownerStatus, int userId) {
            return base.Channel.F96000_InsertOwnerManagementDetails(ownerId, ownerDetails, ownerStatus, userId);
        }
        
        public void F96000_DeleteData(int statusId) {
            base.Channel.F96000_DeleteData(statusId);
        }
        
        public string F36011_ListDeprTable(int valueSliceId) {
            return base.Channel.F36011_ListDeprTable(valueSliceId);
        }
        
        public string F36011_ListMiscCode(int valueSliceId) {
            return base.Channel.F36011_ListMiscCode(valueSliceId);
        }
        
        public string F36011_ListMiscImprovements(int miscId) {
            return base.Channel.F36011_ListMiscImprovements(miscId);
        }
        
        public string F36011_ListCatalogCode(int valueSliceId) {
            return base.Channel.F36011_ListCatalogCode(valueSliceId);
        }
        
        public void F36011_DeleteMICode(int miscId, int userId) {
            base.Channel.F36011_DeleteMICode(miscId, userId);
        }
        
        public int F36011_SaveMiscImprovement(int miscmId, string miscItems, int userId) {
            return base.Channel.F36011_SaveMiscImprovement(miscmId, miscItems, userId);
        }
        
        public string F36011_ListQualityComm() {
            return base.Channel.F36011_ListQualityComm();
        }
        
        public string F36011_ListQualityRes() {
            return base.Channel.F36011_ListQualityRes();
        }
        
        public string F36011_ListCondition() {
            return base.Channel.F36011_ListCondition();
        }
        
        public string F36011_ListDeprFuncCategory() {
            return base.Channel.F36011_ListDeprFuncCategory();
        }
        
        public string F36012_ListMiscCatalogChoice(int miscCodeId, int fieldNum) {
            return base.Channel.F36012_ListMiscCatalogChoice(miscCodeId, fieldNum);
        }
        
        public string F25009_ListSubdivision() {
            return base.Channel.F25009_ListSubdivision();
        }
        
        public string F25003_ListSitusMangement(int parcelId, int situsId) {
            return base.Channel.F25003_ListSitusMangement(parcelId, situsId);
        }
        
        public string F25003_ListStreet() {
            return base.Channel.F25003_ListStreet();
        }
        
        public string F25003_ListUnitType() {
            return base.Channel.F25003_ListUnitType();
        }
        
        public int F25003_SaveListMangement(int situsId, string situsItems, bool isFuturePush, int userId) {
            return base.Channel.F25003_SaveListMangement(situsId, situsItems, isFuturePush, userId);
        }
        
        public void F25003_DeleteSitusManagement(int situsId, int userId) {
            base.Channel.F25003_DeleteSitusManagement(situsId, userId);
        }
        
        public string GetObjectDetails(int parcelId) {
            return base.Channel.GetObjectDetails(parcelId);
        }
        
        public string GetObjectTypesList() {
            return base.Channel.GetObjectTypesList();
        }
        
        public string GetValueSlicesList(int parcelId, int objectId) {
            return base.Channel.GetValueSlicesList(parcelId, objectId);
        }
        
        public string GetMiscImprovementsList(int valuesliceID) {
            return base.Channel.GetMiscImprovementsList(valuesliceID);
        }
        
        public string F3602_ProcessMiscImprovements(string copyMove, int parcelId, bool isNewObject, int existingObjectId, int newObjectTypeId, bool isNewValueslice, int existingValueslice, string miscImprovements, int userId) {
            return base.Channel.F3602_ProcessMiscImprovements(copyMove, parcelId, isNewObject, existingObjectId, newObjectTypeId, isNewValueslice, existingValueslice, miscImprovements, userId);
        }
        
        public string F1060_ListSuspendedPayment(string searchDetail) {
            return base.Channel.F1060_ListSuspendedPayment(searchDetail);
        }
        
        public string F9040_ListBatchButtonSnapShots(int formsSliceNo) {
            return base.Channel.F9040_ListBatchButtonSnapShots(formsSliceNo);
        }
        
        public int F9040_SaveBatchButtonSnapShots(int snapShotId, string snapShotDetails, int userId) {
            return base.Channel.F9040_SaveBatchButtonSnapShots(snapShotId, snapShotDetails, userId);
        }
        
        public string F9040_ListSnapShots(int formId) {
            return base.Channel.F9040_ListSnapShots(formId);
        }
        
        public int F9040_SaveSnapShot(int snapShotId, string snapShotxml, string snapshotItemsxml, string filterXML, string pinType, int userId, int parentSnapShotID) {
            return base.Channel.F9040_SaveSnapShot(snapShotId, snapShotxml, snapshotItemsxml, filterXML, pinType, userId, parentSnapShotID);
        }
        
        public void F9040_DeleteSnapShot(int snapshotId, int userId) {
            base.Channel.F9040_DeleteSnapShot(snapshotId, userId);
        }
        
        public string F9070_GetReportListingDetails(int userId) {
            return base.Channel.F9070_GetReportListingDetails(userId);
        }
        
        public string F95101_ListAuditTrail(int form, int keyId) {
            return base.Channel.F95101_ListAuditTrail(form, keyId);
        }
        
        public string F25008_ParcelMiscellaneousData(int parcelId) {
            return base.Channel.F25008_ParcelMiscellaneousData(parcelId);
        }
        
        public string F25008_ParcelMiscellaneousConfigData() {
            return base.Channel.F25008_ParcelMiscellaneousConfigData();
        }
        
        public void F25008_SaveParcelMiscellaneous(int parcelId, string miscellaneous, int userId) {
            base.Channel.F25008_SaveParcelMiscellaneous(parcelId, miscellaneous, userId);
        }
        
        public string F35101_GetNeighborhoodGroupHeader(int nbhdGroupId) {
            return base.Channel.F35101_GetNeighborhoodGroupHeader(nbhdGroupId);
        }
        
        public int F35101_SaveNeighborhoodGroupHeader(int nbhdGroupId, string neighborhoodGroupHeader, int userId) {
            return base.Channel.F35101_SaveNeighborhoodGroupHeader(nbhdGroupId, neighborhoodGroupHeader, userId);
        }
        
        public void F35101_DeleteNeighborhoodGroupHeader(int nbhdGroupId, int userId) {
            base.Channel.F35101_DeleteNeighborhoodGroupHeader(nbhdGroupId, userId);
        }
        
        public string F3040_GetZoningDetails() {
            return base.Channel.F3040_GetZoningDetails();
        }
        
        public int F3040_SaveZoningDetails(string zoningDetails, int userId) {
            return base.Channel.F3040_SaveZoningDetails(zoningDetails, userId);
        }
        
        public string F15035SuspendedPayments(int receiptId) {
            return base.Channel.F15035SuspendedPayments(receiptId);
        }
        
        public void F15035_DeleteSuspendedPayment(int receiptId, int userId) {
            base.Channel.F15035_DeleteSuspendedPayment(receiptId, userId);
        }
        
        public int F15035_CheckSuspendedAccounts() {
            return base.Channel.F15035_CheckSuspendedAccounts();
        }
        
        public string F8062_ListComponentsConfiguration(int applicationId) {
            return base.Channel.F8062_ListComponentsConfiguration(applicationId);
        }
        
        public string F8062_ListFeatureClass(int applicationId) {
            return base.Channel.F8062_ListFeatureClass(applicationId);
        }
        
        public string SaveUserDetails(int userId, string nameDisplay, string nameFull, string nameNet, string email, int active, int administrator, int appraiser, int applicationId, int loginUserId) {
            return base.Channel.SaveUserDetails(userId, nameDisplay, nameFull, nameNet, email, active, administrator, appraiser, applicationId, loginUserId);
        }
        
        public void UpdateCountyConfigDetails(int configId, string configDescription, int userId) {
            base.Channel.UpdateCountyConfigDetails(configId, configDescription, userId);
        }
        
        public void UpdateDepositHistory(int clid, int userId) {
            base.Channel.UpdateDepositHistory(clid, userId);
        }
        
        public void UpdateEventEngineTVDetails(string eventItems, int userId) {
            base.Channel.UpdateEventEngineTVDetails(eventItems, userId);
        }
        
        public void UpdateExciseAffidavitStatus(int statementId, int treasurerStatus, int statusId, int userId) {
            base.Channel.UpdateExciseAffidavitStatus(statementId, treasurerStatus, statusId, userId);
        }
        
        public int UpdateJournalEntryDetails(int statementId, int receiptSourceId, string journalItems) {
            return base.Channel.UpdateJournalEntryDetails(statementId, receiptSourceId, journalItems);
        }
        
        public void UpdateNextNumberConfigDetails(int nextNumId, int nextNum, string formula, int userId) {
            base.Channel.UpdateNextNumberConfigDetails(nextNumId, nextNum, formula, userId);
        }
        
        public bool Validation(string userNameText, string passwordText) {
            return base.Channel.Validation(userNameText, passwordText);
        }
        
        public string wListAddresses() {
            return base.Channel.wListAddresses();
        }
        
        public string wListStreets() {
            return base.Channel.wListStreets();
        }
        
        public int F27006_CheckOwnershipDetails(string ownershipDetails) {
            return base.Channel.F27006_CheckOwnershipDetails(ownershipDetails);
        }
        
        public string F36000_GetHouseTypeCollection(int valueSliceId) {
            return base.Channel.F36000_GetHouseTypeCollection(valueSliceId);
        }
        
        public string F36000_GetDeprPercentage(int age, decimal objectCondition, int deprTableId) {
            return base.Channel.F36000_GetDeprPercentage(age, objectCondition, deprTableId);
        }
        
        public int F36000_GetDeprTableNameId(int valueSliceId, int propertyQuality) {
            return base.Channel.F36000_GetDeprTableNameId(valueSliceId, propertyQuality);
        }
        
        public int F36000_SaveDepreciationDetails(string depreciationXml, int valueSliceId, int userId) {
            return base.Channel.F36000_SaveDepreciationDetails(depreciationXml, valueSliceId, userId);
        }
        
        public string F15110_GetReceiptActions(int receiptId) {
            return base.Channel.F15110_GetReceiptActions(receiptId);
        }
        
        public void F1557_InsertRefundInterest(int receiptID, int userID) {
            base.Channel.F1557_InsertRefundInterest(receiptID, userID);
        }
        
        public string F1555_GetReceiptDetails(int receiptId) {
            return base.Channel.F1555_GetReceiptDetails(receiptId);
        }
        
        public string F1556_ReverseReceiptDetails(int receiptId, int sharedPaymentId, int userId) {
            return base.Channel.F1556_ReverseReceiptDetails(receiptId, sharedPaymentId, userId);
        }
        
        public string F25011_GetMasterStreetList(int streetId) {
            return base.Channel.F25011_GetMasterStreetList(streetId);
        }
        
        public string F25011_ListMasterStreetList(int streetID, string streetName, string city) {
            return base.Channel.F25011_ListMasterStreetList(streetID, streetName, city);
        }
        
        public string F25011_ListStreetCityDirectionalSuffixDetails() {
            return base.Channel.F25011_ListStreetCityDirectionalSuffixDetails();
        }
        
        public int F25011_SaveStreetListManagement(int streetId, string streetListMgmt, int userId) {
            return base.Channel.F25011_SaveStreetListManagement(streetId, streetListMgmt, userId);
        }
        
        public int F25011_DeleteStreetList(int streetId, int userId) {
            return base.Channel.F25011_DeleteStreetList(streetId, userId);
        }
        
        public string F2000_ListParcelStatus(int parcelId) {
            return base.Channel.F2000_ListParcelStatus(parcelId);
        }
        
        public int F2000_UpdateParcelStatus(int parcelId, string description, string parcelType, int isexempt, int isownerPrimary, int userId) {
            return base.Channel.F2000_UpdateParcelStatus(parcelId, description, parcelType, isexempt, isownerPrimary, userId);
        }
        
        public void F2000_DeleteParcelStatus(int parcelId, int userId) {
            base.Channel.F2000_DeleteParcelStatus(parcelId, userId);
        }
        
        public string ListRecordLockStatus(int formNo, int keyId) {
            return base.Channel.ListRecordLockStatus(formNo, keyId);
        }
        
        public string CheckInstallation1(string checkInstall) {
            return base.Channel.CheckInstallation1(checkInstall);
        }
        
        public byte[] GetDatabaseSchema() {
            return base.Channel.GetDatabaseSchema();
        }
        
        public string F25009_GetLegalManagement(int parcelId, int userId) {
            return base.Channel.F25009_GetLegalManagement(parcelId, userId);
        }
        
        public int F25009_SaveLegalManagement(int legalId, string legalItems, bool isFuturePush, int userId) {
            return base.Channel.F25009_SaveLegalManagement(legalId, legalItems, isFuturePush, userId);
        }
        
        public void RdlToCode_Delete(string deletexmlString, string formId) {
            base.Channel.RdlToCode_Delete(deletexmlString, formId);
        }
        
        public System.Data.DataSet RdlToCode_FillCombo(string storedProcedureName) {
            return base.Channel.RdlToCode_FillCombo(storedProcedureName);
        }
        
        public System.Data.DataSet RdlToCode_Get(string getxmlString, string formId) {
            return base.Channel.RdlToCode_Get(getxmlString, formId);
        }
        
        public int RdlToCode_Save(string savexmlString, string formId) {
            return base.Channel.RdlToCode_Save(savexmlString, formId);
        }
        
        public int SaveAffiDavitDetails(int statementId, string partiesAddress, string parcelDetails, string exciseAffidavitDetails, int userId) {
            return base.Channel.SaveAffiDavitDetails(statementId, partiesAddress, parcelDetails, exciseAffidavitDetails, userId);
        }
        
        public string SaveAttachments(
                    System.Nullable<int> fileId, 
                    string extension, 
                    int formId, 
                    int keyId, 
                    int fileTypeId, 
                    string source, 
                    int primary, 
                    string description, 
                    string eventDate, 
                    int userId, 
                    int publicValue, 
                    int isroll, 
                    int linktype, 
                    string aurl, 
                    int pfileid, 
                    string sourceConfig) {
            return base.Channel.SaveAttachments(fileId, extension, formId, keyId, fileTypeId, source, primary, description, eventDate, userId, publicValue, isroll, linktype, aurl, pfileid, sourceConfig);
        }
        
        public void GenerateThumbnail(System.Nullable<int> fileId, int userId, string fileIdXml) {
            base.Channel.GenerateThumbnail(fileId, userId, fileIdXml);
        }
        
        public void SaveAutoPrint(int formId, int userId, bool autoPrint) {
            base.Channel.SaveAutoPrint(formId, userId, autoPrint);
        }
        
        public void SaveComments(int commentId, int formId, int keyId, System.DateTime commentDate, int userId, string comments, int printOnReceipt, int publicComment, int ispriority, int isroll, int commentPriorityId) {
            base.Channel.SaveComments(commentId, formId, keyId, commentDate, userId, comments, printOnReceipt, publicComment, ispriority, isroll, commentPriorityId);
        }
        
        public void SaveEventEngineEventProperties(string eventItems, int userId) {
            base.Channel.SaveEventEngineEventProperties(eventItems, userId);
        }
        
        public void SaveEventEngineTVDetails(string eventItems, int userId) {
            base.Channel.SaveEventEngineTVDetails(eventItems, userId);
        }
        
        public int SaveExciseDistrcitCopy(int district, int basedOnYear, int newDistrictYear, int userId) {
            return base.Channel.SaveExciseDistrcitCopy(district, basedOnYear, newDistrictYear, userId);
        }
        
        public void SaveExciseTaxRate(int exciseRateId, string exciseTaxDetails, int userId) {
            base.Channel.SaveExciseTaxRate(exciseRateId, exciseTaxDetails, userId);
        }
        
        public string SaveExciseTaxReceipt(string statementItems, int userId) {
            return base.Channel.SaveExciseTaxReceipt(statementItems, userId);
        }
        
        public void SaveGDocComment(int eventId, string comment, int userId) {
            base.Channel.SaveGDocComment(eventId, comment, userId);
        }
        
        public string SaveGDocEventHeader(string eventItems, int userId) {
            return base.Channel.SaveGDocEventHeader(eventItems, userId);
        }
        
        public void SaveGroupPermissionDetails(int groupId, string formPermissions, int userId) {
            base.Channel.SaveGroupPermissionDetails(groupId, formPermissions, userId);
        }
        
        public void SaveLinearEventType(string eventItems, int userId) {
            base.Channel.SaveLinearEventType(eventItems, userId);
        }
        
        public string SaveMortgageImport(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime receiptDate, System.DateTime interestDate, bool payCode, int userId, int rollYear, int ppaymentId, int firstHalfPayCode, bool resetErrorCheck) {
            return base.Channel.SaveMortgageImport(importId, templateId, templateName, typeId, filePath, receiptDate, interestDate, payCode, userId, rollYear, ppaymentId, firstHalfPayCode, resetErrorCheck);
        }
        
        public string SaveMortgageImportEntries(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime receiptDate, System.DateTime interestDate, bool payCode, int userId, int rollYear, int ppaymentId, int firstHalfpaycode, string mortgageImportEntries) {
            return base.Channel.SaveMortgageImportEntries(importId, templateId, templateName, typeId, filePath, receiptDate, interestDate, payCode, userId, rollYear, ppaymentId, firstHalfpaycode, mortgageImportEntries);
        }
        
        public void SaveMortgageImportTemplate(
                    int templateId, 
                    string templateName, 
                    int typeId, 
                    int userId, 
                    string description, 
                    string filePath, 
                    int statementIdPos, 
                    int statementIdWid, 
                    int statementNumPos, 
                    int statementNumWid, 
                    int amountPos, 
                    int amountWid, 
                    int commentPos, 
                    int commentWid, 
                    int bankCodePos, 
                    int bankCodeWid, 
                    int loanNumPos, 
                    int loanNumWid, 
                    int taxPayNamePos, 
                    int taxPayNameWid, 
                    int ParcelNumPos, 
                    int ParcelNumWid, 
                    int PostTypePos, 
                    int PostTypeWid, 
                    int OwnerIDPos, 
                    int OwnerIDWid, 
                    int CartIdPos, 
                    int CartidWid) {
            base.Channel.SaveMortgageImportTemplate(templateId, templateName, typeId, userId, description, filePath, statementIdPos, statementIdWid, statementNumPos, statementNumWid, amountPos, amountWid, commentPos, commentWid, bankCodePos, bankCodeWid, loanNumPos, loanNumWid, taxPayNamePos, taxPayNameWid, ParcelNumPos, ParcelNumWid, PostTypePos, PostTypeWid, OwnerIDPos, OwnerIDWid, CartIdPos, CartidWid);
        }
        
        public int SavePermitImportTemplate(System.Nullable<int> templateId, string permitImportXML, int userId) {
            return base.Channel.SavePermitImportTemplate(templateId, permitImportXML, userId);
        }
        
        public int SaveIncomeSourceDetails(System.Nullable<int> IncomeSourceID, string IncomeSourceItems, int userId) {
            return base.Channel.SaveIncomeSourceDetails(IncomeSourceID, IncomeSourceItems, userId);
        }
        
        public int SaveMADImportTemplate(System.Nullable<int> templateId, string madImportXML, int userId) {
            return base.Channel.SaveMADImportTemplate(templateId, madImportXML, userId);
        }
        
        public int SaveSnapshotImportTemplate(System.Nullable<int> templateId, string madImportXML, int userId) {
            return base.Channel.SaveSnapshotImportTemplate(templateId, madImportXML, userId);
        }
        
        public int SavePayment(int ppaymentId, string paymentItems, int userId, int ownerId) {
            return base.Channel.SavePayment(ppaymentId, paymentItems, userId, ownerId);
        }
        
        public void SavePaymentItemsDetails(int registerId, decimal amount, int userId, string paymentItemsDetails) {
            base.Channel.SavePaymentItemsDetails(registerId, amount, userId, paymentItemsDetails);
        }
        
        public void SavePointEventType(string eventItems, int userId) {
            base.Channel.SavePointEventType(eventItems, userId);
        }
        
        public System.Data.DataSet SaveQuery(string savedQueryName, int formId, string savedQueryNote, int userId, System.DateTime savedQueryDate, string savedQuery, string whereCondn, bool canOverride) {
            return base.Channel.SaveQuery(savedQueryName, formId, savedQueryNote, userId, savedQueryDate, savedQuery, whereCondn, canOverride);
        }
        
        public string SaveReceipt(string receiptItems, string paymentItems, int userId) {
            return base.Channel.SaveReceipt(receiptItems, paymentItems, userId);
        }
        
        public System.Data.DataSet SaveSnapShot(string snapshotName, int formId, string snapshotNote, int userId, System.DateTime snapshotDate, string snapshotQuery, string whereCondn, string keyIDs, bool canOverride) {
            return base.Channel.SaveSnapShot(snapshotName, formId, snapshotNote, userId, snapshotDate, snapshotQuery, whereCondn, keyIDs, canOverride);
        }
        
        public int SaveSQLQuery(int categoryId, string description, string statement, int moduleId, int userId, int sqlId) {
            return base.Channel.SaveSQLQuery(categoryId, description, statement, moduleId, userId, sqlId);
        }
        
        public string ListExciseRateDistrict(string district, int year, string description) {
            return base.Channel.ListExciseRateDistrict(district, year, description);
        }
        
        public string ListExciseTaxRate() {
            return base.Channel.ListExciseTaxRate();
        }
        
        public string ListExciseTaxStatement() {
            return base.Channel.ListExciseTaxStatement();
        }
        
        public string ListGDocEventHeaderStatus(int eventId) {
            return base.Channel.ListGDocEventHeaderStatus(eventId);
        }
        
        public string ListHelpDocumentForm(string formFile) {
            return base.Channel.ListHelpDocumentForm(formFile);
        }
        
        public string ListHistoryGrid(int statementId) {
            return base.Channel.ListHistoryGrid(statementId);
        }
        
        public string ListMortgageImportFileType() {
            return base.Channel.ListMortgageImportFileType();
        }
        
        public string ListMortgageTemplate() {
            return base.Channel.ListMortgageTemplate();
        }
        
        public string ListPermitImportFileType() {
            return base.Channel.ListPermitImportFileType();
        }
        
        public string ListUnitTerms() {
            return base.Channel.ListUnitTerms();
        }
        
        public string ListDistrictType() {
            return base.Channel.ListDistrictType();
        }
        
        public string ListMADImportFileType() {
            return base.Channel.ListMADImportFileType();
        }
        
        public string ListSnapshotImportFileType() {
            return base.Channel.ListSnapshotImportFileType();
        }
        
        public string ListNextNumberConfiguration() {
            return base.Channel.ListNextNumberConfiguration();
        }
        
        public string ListPostingErrors(int userId) {
            return base.Channel.ListPostingErrors(userId);
        }
        
        public string ListPostingHistory(int count, int postTypeId) {
            return base.Channel.ListPostingHistory(count, postTypeId);
        }
        
        public string ListPostingQueue() {
            return base.Channel.ListPostingQueue();
        }
        
        public string ListPostTypes(int form) {
            return base.Channel.ListPostTypes(form);
        }
        
        public string ListPreviewPosting(System.DateTime postDate) {
            return base.Channel.ListPreviewPosting(postDate);
        }
        
        public System.Data.DataSet ListQuery(int formId, int userId) {
            return base.Channel.ListQuery(formId, userId);
        }
        
        public string ListReceiptItems(int receiptId) {
            return base.Channel.ListReceiptItems(receiptId);
        }
        
        public int F15101_UpdateTransactionItems(string transactionItems, int userId) {
            return base.Channel.F15101_UpdateTransactionItems(transactionItems, userId);
        }
        
        public string ListReceiptOwners(int receiptId) {
            return base.Channel.ListReceiptOwners(receiptId);
        }
        
        public System.Data.DataSet ListSnapShot(int formId) {
            return base.Channel.ListSnapShot(formId);
        }
        
        public System.Data.DataSet ListSortQuery(int savedQueryId, string orderByCondition, int formId) {
            return base.Channel.ListSortQuery(savedQueryId, orderByCondition, formId);
        }
        
        public System.Data.DataSet ListSortSnapShot(int snapShotId, string orderByCondition, int formId) {
            return base.Channel.ListSortSnapShot(snapShotId, orderByCondition, formId);
        }
        
        public string ListTenderType(bool allowOverUnder) {
            return base.Channel.ListTenderType(allowOverUnder);
        }
        
        public string ListUserNames() {
            return base.Channel.ListUserNames();
        }
        
        public string LoadEventEngineData(int featureClassId, int featureId) {
            return base.Channel.LoadEventEngineData(featureClassId, featureId);
        }
        
        public void LogException(int eventId, int priority, string severity, string title, System.DateTime timeStamp, string machineName, string appDomainName, string processId, string processName, string managedThreadName, string win32ThreadId, string message, string formattedMessage) {
            base.Channel.LogException(eventId, priority, severity, title, timeStamp, machineName, appDomainName, processId, processName, managedThreadName, win32ThreadId, message, formattedMessage);
        }
        
        public string MortgageImportCheckErrors(int importId, int templateId, string templateName, int typeId, string filePath, System.DateTime recieptDate, System.DateTime interestDate, bool payCode, int userId, int rollYear, int firstHalfpaycode, int ppaymentId) {
            return base.Channel.MortgageImportCheckErrors(importId, templateId, templateName, typeId, filePath, recieptDate, interestDate, payCode, userId, rollYear, firstHalfpaycode, ppaymentId);
        }
        
        public string PerformPosting(System.DateTime postDate, string selectedPostTypes, int userId) {
            return base.Channel.PerformPosting(postDate, selectedPostTypes, userId);
        }
        
        public string GetReceiptDetails(int receiptId) {
            return base.Channel.GetReceiptDetails(receiptId);
        }
        
        public string GetReceiptHeaderDetails(int receiptId) {
            return base.Channel.GetReceiptHeaderDetails(receiptId);
        }
        
        public string GetReceiptListDetails(int receiptId) {
            return base.Channel.GetReceiptListDetails(receiptId);
        }
        
        public void F15100_SaveReceiptHeaderreceiptNumber(int receiptId, string receiptNumber, int userId) {
            base.Channel.F15100_SaveReceiptHeaderreceiptNumber(receiptId, receiptNumber, userId);
        }
        
        public string GetReceiptStatementHeaderDetails(int receiptId) {
            return base.Channel.GetReceiptStatementHeaderDetails(receiptId);
        }
        
        public System.Data.DataSet GetReportDetails(int reportId, int userId) {
            return base.Channel.GetReportDetails(reportId, userId);
        }
        
        public string GetSandwichAndItsSliceInformation(int form, int keyId, int userId) {
            return base.Channel.GetSandwichAndItsSliceInformation(form, keyId, userId);
        }
        
        public string GetSandwichSubTitleInformation(int form, int keyId, int userId) {
            return base.Channel.GetSandwichSubTitleInformation(form, keyId, userId);
        }
        
        public string GetSnapShotResult(int snapShotId, string orderByCondn) {
            return base.Channel.GetSnapShotResult(snapShotId, orderByCondn);
        }
        
        public string GetSnapshotUtilityList(int formId) {
            return base.Channel.GetSnapshotUtilityList(formId);
        }
        
        public string GetSQLCategory() {
            return base.Channel.GetSQLCategory();
        }
        
        public string GetSQLDescription(int categoryId) {
            return base.Channel.GetSQLDescription(categoryId);
        }
        
        public System.Data.DataSet GetSQLQueryResult(string sqlQuery) {
            return base.Channel.GetSQLQueryResult(sqlQuery);
        }
        
        public string GetSQLString(int categoryId, int sqlId) {
            return base.Channel.GetSQLString(categoryId, sqlId);
        }
        
        public string GetTenderTypeConfiguration() {
            return base.Channel.GetTenderTypeConfiguration();
        }
        
        public string GetUserGroupDetails(int applicationId) {
            return base.Channel.GetUserGroupDetails(applicationId);
        }
        
        public System.Data.DataSet GetUserInformation(string userName, int applicationId) {
            return base.Channel.GetUserInformation(userName, applicationId);
        }
        
        public string GetValidReceiptTest(int statementId, System.DateTime receiptDate) {
            return base.Channel.GetValidReceiptTest(statementId, receiptDate);
        }
        
        public string GetWorkOrderDetails(int featureClassId) {
            return base.Channel.GetWorkOrderDetails(featureClassId);
        }
        
        public void InsertAccount(int userId, int errorTypeId) {
            base.Channel.InsertAccount(userId, errorTypeId);
        }
        
        public void InsertErrorEngine(string errorDate, int userId, string userIP, int errorTypeId, string parameter, string comment) {
            base.Channel.InsertErrorEngine(errorDate, userId, userIP, errorTypeId, parameter, comment);
        }
        
        public int InsertGDocEventEngineData(string eventEngineInsertData, int userId) {
            return base.Channel.InsertGDocEventEngineData(eventEngineInsertData, userId);
        }
        
        public int GetGDocEventEngineFeatureClassId(int featureId) {
            return base.Channel.GetGDocEventEngineFeatureClassId(featureId);
        }
        
        public string InsertGroupDetails(int groupId, string groupName, string description, string userGroup, int userId) {
            return base.Channel.InsertGroupDetails(groupId, groupName, description, userGroup, userId);
        }
        
        public int InsertQueryUtility(int queryId, string queryName, int formId, string description, int userId, string whereCondition, string userWhereCondition, int overrideValue) {
            return base.Channel.InsertQueryUtility(queryId, queryName, formId, description, userId, whereCondition, userWhereCondition, overrideValue);
        }
        
        public void InsertReverseGLPost(int postId, int userId) {
            base.Channel.InsertReverseGLPost(postId, userId);
        }
        
        public int InsertSnapshotUtility(int snapshotId, string snapshotName, int snapshotFormId, string description, int recordCount, int userId, int overrideValue, string keyIds) {
            return base.Channel.InsertSnapshotUtility(snapshotId, snapshotName, snapshotFormId, description, recordCount, userId, overrideValue, keyIds);
        }
        
        public string ListAccountNames() {
            return base.Channel.ListAccountNames();
        }
        
        public string ListDepositHistoryDetails() {
            return base.Channel.ListDepositHistoryDetails();
        }
        
        public string ListEventEngineDetailTypes() {
            return base.Channel.ListEventEngineDetailTypes();
        }
        
        public string ListEventEngineTVDetails(int eventId) {
            return base.Channel.ListEventEngineTVDetails(eventId);
        }
        
        public string ListEventTypeStatusDetails(int featureClassId) {
            return base.Channel.ListEventTypeStatusDetails(featureClassId);
        }
        
        public System.Data.DataSet GetFormPermissions(int userId, int applicationId) {
            return base.Channel.GetFormPermissions(userId, applicationId);
        }
        
        public string GetFormTitle(int formId) {
            return base.Channel.GetFormTitle(formId);
        }
        
        public string GetGDocComment(int eventId) {
            return base.Channel.GetGDocComment(eventId);
        }
        
        public string GetGDocEventHeader(int eventId) {
            return base.Channel.GetGDocEventHeader(eventId);
        }
        
        public string GetGroupDetails(int userId) {
            return base.Channel.GetGroupDetails(userId);
        }
        
        public string GetGroupPermissionDetails(int userId) {
            return base.Channel.GetGroupPermissionDetails(userId);
        }
        
        public decimal GetInterestAmount(int statmentId, string interestDate, decimal taxDueAmount) {
            return base.Channel.GetInterestAmount(statmentId, interestDate, taxDueAmount);
        }
        
        public string GetJournalEntryDetails(int receiptId) {
            return base.Channel.GetJournalEntryDetails(receiptId);
        }
        
        public string GetLinearEventType(int eventId) {
            return base.Channel.GetLinearEventType(eventId);
        }
        
        public string GetMasterNameSearch(string lastName, string firstName, string address) {
            return base.Channel.GetMasterNameSearch(lastName, firstName, address);
        }
        
        public System.Data.DataSet GetMenuItems(int userId, int applicationId) {
            return base.Channel.GetMenuItems(userId, applicationId);
        }
        
        public decimal GetMinTaxDue(int statmentId, string interestDate) {
            return base.Channel.GetMinTaxDue(statmentId, interestDate);
        }
        
        public string GetMortgageImportStatement(int importId, bool nextAvailableRecord) {
            return base.Channel.GetMortgageImportStatement(importId, nextAvailableRecord);
        }
        
        public System.Data.DataSet GetMortgageImportStatementIds() {
            return base.Channel.GetMortgageImportStatementIds();
        }
        
        public string GetMortgageImportTemplateDetails() {
            return base.Channel.GetMortgageImportTemplateDetails();
        }
        
        public string GetMortgageTemplate(int templateId) {
            return base.Channel.GetMortgageTemplate(templateId);
        }
        
        public string GetPermitImportTemplate(int templateId) {
            return base.Channel.GetPermitImportTemplate(templateId);
        }
        
        public string GetIncomeSourceDetail(int IncomeSourceID) {
            return base.Channel.GetIncomeSourceDetail(IncomeSourceID);
        }
        
        public string GetMADImportTemplate(int templateId) {
            return base.Channel.GetMADImportTemplate(templateId);
        }
        
        public string GetOwnerDetails(int ownerId) {
            return base.Channel.GetOwnerDetails(ownerId);
        }
        
        public string GetPayment(int ppaymentId) {
            return base.Channel.GetPayment(ppaymentId);
        }
        
        public string GetMultiplePayment(string ppaymentId) {
            return base.Channel.GetMultiplePayment(ppaymentId);
        }
        
        public string GetPaymentItemsDetails() {
            return base.Channel.GetPaymentItemsDetails();
        }
        
        public string F1019_GetPayeeDetails(int PayeeID) {
            return base.Channel.F1019_GetPayeeDetails(PayeeID);
        }
        
        public string GetPointEventType(int eventId) {
            return base.Channel.GetPointEventType(eventId);
        }
        
        public string GetPostIdDetails(int postId) {
            return base.Channel.GetPostIdDetails(postId);
        }
        
        public string GetProgramId(int fileTypeId) {
            return base.Channel.GetProgramId(fileTypeId);
        }
        
        public string GetQueryResult(int queryId, string orderByCondn) {
            return base.Channel.GetQueryResult(queryId, orderByCondn);
        }
        
        public string GetQueryUtilityList(int formId) {
            return base.Channel.GetQueryUtilityList(formId);
        }
        
        public string GetRealEstateStatement(int statementId) {
            return base.Channel.GetRealEstateStatement(statementId);
        }
        
        public int GetRealEstateStatementCount() {
            return base.Channel.GetRealEstateStatementCount();
        }
        
        public string GetRealEstateStatementIds(string orderField, string orderBy) {
            return base.Channel.GetRealEstateStatementIds(orderField, orderBy);
        }
        
        public string GetAttachementFunctionName(int formId) {
            return base.Channel.GetAttachementFunctionName(formId);
        }
        
        public int GetAttachmentCount(int formId, int receiptId, int userId) {
            return base.Channel.GetAttachmentCount(formId, receiptId, userId);
        }
        
        public string GetAttachmentItems(int formId, int keyId, int userId) {
            return base.Channel.GetAttachmentItems(formId, keyId, userId);
        }
        
        public System.Data.DataSet GetAuthenticationState() {
            return base.Channel.GetAuthenticationState();
        }
        
        public int GetAutoPrintStatus(int formId, int userId) {
            return base.Channel.GetAutoPrintStatus(formId, userId);
        }
        
        public string GetComments(int keyId, int formId, int userId) {
            return base.Channel.GetComments(keyId, formId, userId);
        }
        
        public string GetCommentsCount(int formId, int keyId, int userId) {
            return base.Channel.GetCommentsCount(formId, keyId, userId);
        }
        
        public string GetConfigDetails(string configName) {
            return base.Channel.GetConfigDetails(configName);
        }
        
        public System.Data.DataSet GetConfigInformation() {
            return base.Channel.GetConfigInformation();
        }
        
        public string GetConnectionString(int msversionId) {
            return base.Channel.GetConnectionString(msversionId);
        }
        
        public System.Data.DataSet GetCountyConfiguration(int applicationId, int userId) {
            return base.Channel.GetCountyConfiguration(applicationId, userId);
        }
        
        public string GetDepositHistorySearchResult(int form, string whereCondnSql) {
            return base.Channel.GetDepositHistorySearchResult(form, whereCondnSql);
        }
        
        public string GetDistrictName(int districtId) {
            return base.Channel.GetDistrictName(districtId);
        }
        
        public string GetDistrictSelection(int exciseRateId) {
            return base.Channel.GetDistrictSelection(exciseRateId);
        }
        
        public string GetErrorEngine(int errorTypeId) {
            return base.Channel.GetErrorEngine(errorTypeId);
        }
        
        public string GetEventEngineDataHeader(int featureClassId, int featureId) {
            return base.Channel.GetEventEngineDataHeader(featureClassId, featureId);
        }
        
        public string GetEventEngineEventProperties(int eventId) {
            return base.Channel.GetEventEngineEventProperties(eventId);
        }
        
        public string GetExciseDistrictCopy(int exciserateId) {
            return base.Channel.GetExciseDistrictCopy(exciserateId);
        }
        
        public string GetExciseIndividualType() {
            return base.Channel.GetExciseIndividualType();
        }
        
        public string GetExciseTaxAffidavitCalulateAmountDue(System.DateTime saleDate, System.DateTime paymentDate, int exciseRateId, int taxCode, double taxableSaleAmount) {
            return base.Channel.GetExciseTaxAffidavitCalulateAmountDue(saleDate, paymentDate, exciseRateId, taxCode, taxableSaleAmount);
        }
        
        public string GetExciseTaxAffidavitDetails(int statementId) {
            return base.Channel.GetExciseTaxAffidavitDetails(statementId);
        }
        
        public string GetExciseTaxAffidavitStatus(int statementId, int treasurerStatus) {
            return base.Channel.GetExciseTaxAffidavitStatus(statementId, treasurerStatus);
        }
        
        public string GetExciseTaxRate(int exciseRateId) {
            return base.Channel.GetExciseTaxRate(exciseRateId);
        }
        
        public string GetExciseTaxReceipt(int statementId) {
            return base.Channel.GetExciseTaxReceipt(statementId);
        }
        
        public string GetExciseTaxStatement(int statementId) {
            return base.Channel.GetExciseTaxStatement(statementId);
        }
        
        public string GetFilePath(string source, int formId, int keyId, string extension, int userId) {
            return base.Channel.GetFilePath(source, formId, keyId, extension, userId);
        }
        
        public string F9005_GetOriginalFilePath(int fileId, int userId) {
            return base.Channel.F9005_GetOriginalFilePath(fileId, userId);
        }
        
        public string GetFormDetails(int form, int userId) {
            return base.Channel.GetFormDetails(form, userId);
        }
        
        public string GetParcelDetails(int keyID, bool IsNext) {
            return base.Channel.GetParcelDetails(keyID, IsNext);
        }
        
        public string GetTranslatedFormDetails(int formNo, string keyValue) {
            return base.Channel.GetTranslatedFormDetails(formNo, keyValue);
        }
        
        public string F9002_GetFormManagementDetails(int form, int userId) {
            return base.Channel.F9002_GetFormManagementDetails(form, userId);
        }
        
        public System.Data.DataSet GetFormItems() {
            return base.Channel.GetFormItems();
        }
        
        public string F9013_ListNextNumberConfiguration(int rollYear, int userId) {
            return base.Channel.F9013_ListNextNumberConfiguration(rollYear, userId);
        }
        
        public string F9013_ListNextNumberRollYear(int userId) {
            return base.Channel.F9013_ListNextNumberRollYear(userId);
        }
        
        public void F9013_UpdateNextNumberConfigDetails(int nextNumId, int nextNum, string formula, int userId) {
            base.Channel.F9013_UpdateNextNumberConfigDetails(nextNumId, nextNum, formula, userId);
        }
        
        public int F9015_DeleteQuery(int sqlId, int userId) {
            return base.Channel.F9015_DeleteQuery(sqlId, userId);
        }
        
        public string F9033_GetDefaultLayout(int queryViewId) {
            return base.Channel.F9033_GetDefaultLayout(queryViewId);
        }
        
        public System.Data.DataSet F9033_GetSystemSnapShotRecordSet(int systemSnapShotId, int masterFormNO, string filterValue, string sortOrder, string summaryValue, string columnValue, string keyIdCollection, int isFilter) {
            return base.Channel.F9033_GetSystemSnapShotRecordSet(systemSnapShotId, masterFormNO, filterValue, sortOrder, summaryValue, columnValue, keyIdCollection, isFilter);
        }
        
        public string F9033_ListQueryView(int formId) {
            return base.Channel.F9033_ListQueryView(formId);
        }
        
        public string F9033_ListQuerySnapShot(int queryViewId) {
            return base.Channel.F9033_ListQuerySnapShot(queryViewId);
        }
        
        public string F9033_ListQueryLayout(int queryViewId, int userId) {
            return base.Channel.F9033_ListQueryLayout(queryViewId, userId);
        }
        
        public int F9033_InsertSnapShotItems(System.Nullable<int> userId, string systemSnapShotxml) {
            return base.Channel.F9033_InsertSnapShotItems(userId, systemSnapShotxml);
        }
        
        public System.Data.DataSet F9033_QueryEngine(int queryViewId) {
            return base.Channel.F9033_QueryEngine(queryViewId);
        }
        
        public System.Data.DataSet F9033_GetSnapShotRecordSet(int snapShotId, int queryViewId) {
            return base.Channel.F9033_GetSnapShotRecordSet(snapShotId, queryViewId);
        }
        
        public string F9033_GetSystemSnapshotCount(int systemSnapShotId) {
            return base.Channel.F9033_GetSystemSnapshotCount(systemSnapShotId);
        }
        
        public string F9039ListQueryViewColumn(int queryViewId) {
            return base.Channel.F9039ListQueryViewColumn(queryViewId);
        }
        
        public string F9039GetCommandResult(int replaceId, string commandResult) {
            return base.Channel.F9039GetCommandResult(replaceId, commandResult);
        }
        
        public string F9039UpdateQueryData(int queryViewId, string keyField, string keyId, string updateField, int doprocessValue, int userId) {
            return base.Channel.F9039UpdateQueryData(queryViewId, keyField, keyId, updateField, doprocessValue, userId);
        }
        
        public void F9038_DeleteLayoutInformation(int queryLayoutId, int userId) {
            base.Channel.F9038_DeleteLayoutInformation(queryLayoutId, userId);
        }
        
        public string F9038_LoadLayoutInformation(int queryViewId, int userId) {
            return base.Channel.F9038_LoadLayoutInformation(queryViewId, userId);
        }
        
        public int F9038_SaveLayoutInformation(int queryLayoutId, string layoutManagement, string layoutxmlValue, int userId) {
            return base.Channel.F9038_SaveLayoutInformation(queryLayoutId, layoutManagement, layoutxmlValue, userId);
        }
        
        public void F9060_DeleteAuditConfiguration(int auditTableId, int userId) {
            base.Channel.F9060_DeleteAuditConfiguration(auditTableId, userId);
        }
        
        public string F9060_ListAuditingColumns(string tableName) {
            return base.Channel.F9060_ListAuditingColumns(tableName);
        }
        
        public string F9060_ListAuditingTables(string tableType) {
            return base.Channel.F9060_ListAuditingTables(tableType);
        }
        
        public void F9060_SaveAuditConfiguration(string tableName, string auditColumns, int userId) {
            base.Channel.F9060_SaveAuditConfiguration(tableName, auditColumns, userId);
        }
        
        public string F9075_GetComment(int keyId, int formId) {
            return base.Channel.F9075_GetComment(keyId, formId);
        }
        
        public int F9503_CreateOrEditSubFund(System.Nullable<int> subFundId, string subFundElments, int userId) {
            return base.Channel.F9503_CreateOrEditSubFund(subFundId, subFundElments, userId);
        }
        
        public string F9503_GetSubFundItems(string subFund, short rollYear) {
            return base.Channel.F9503_GetSubFundItems(subFund, rollYear);
        }
        
        public string F9503_GetSubFundManagementDetails(System.Nullable<int> subFundId) {
            return base.Channel.F9503_GetSubFundManagementDetails(subFundId);
        }
        
        public string F9600_ListSearchresult(string searchValue, int appId) {
            return base.Channel.F9600_ListSearchresult(searchValue, appId);
        }
        
        public string F9600_ListSortResult(string searchValue, int appId, bool searchOrder, bool groupOrder) {
            return base.Channel.F9600_ListSortResult(searchValue, appId, searchOrder, groupOrder);
        }
        
        public string GetAccountName(int accountId) {
            return base.Channel.GetAccountName(accountId);
        }
        
        public string GetAccountSelectionData(string subFund, string bars, string functionName, string objectname, string line, int rollYear, string desciption, int iscash) {
            return base.Channel.GetAccountSelectionData(subFund, bars, functionName, objectname, line, rollYear, desciption, iscash);
        }
        
        public string GetAffidavitStatementId(int formId, string orderField, string orderBy) {
            return base.Channel.GetAffidavitStatementId(formId, orderField, orderBy);
        }
        
        public int F84124_SaveSanitaryPipeLocation(int keyId, string sanitaryPipeLocation, int userId) {
            return base.Channel.F84124_SaveSanitaryPipeLocation(keyId, sanitaryPipeLocation, userId);
        }
        
        public void F84721_DeleteWaterValveProperties(int valveId, int userId) {
            base.Channel.F84721_DeleteWaterValveProperties(valveId, userId);
        }
        
        public string F84721_GetWaterValveProperties(int valveId) {
            return base.Channel.F84721_GetWaterValveProperties(valveId);
        }
        
        public int F84721_SaveWaterValveProperties(int valveId, string waterValveProperties, int userId) {
            return base.Channel.F84721_SaveWaterValveProperties(valveId, waterValveProperties, userId);
        }
        
        public string F84722_GetWaterValveLocation(int keyId, int formId) {
            return base.Channel.F84722_GetWaterValveLocation(keyId, formId);
        }
        
        public int F84722_SaveWaterValveLocation(int keyId, string waterValveLocation, int formId, int userId) {
            return base.Channel.F84722_SaveWaterValveLocation(keyId, waterValveLocation, formId, userId);
        }
        
        public int F84723_CheckMainValveId(int mainValveId) {
            return base.Channel.F84723_CheckMainValveId(mainValveId);
        }
        
        public void F84723_DeleteWaterHydrantProperties(int hydrantId, int userId) {
            base.Channel.F84723_DeleteWaterHydrantProperties(hydrantId, userId);
        }
        
        public string F84723_GetWaterHydrantProperties(int hydrantId) {
            return base.Channel.F84723_GetWaterHydrantProperties(hydrantId);
        }
        
        public int F84723_SaveWaterHydrantProperties(int hydrantId, string waterHydrantPropties, int userId) {
            return base.Channel.F84723_SaveWaterHydrantProperties(hydrantId, waterHydrantPropties, userId);
        }
        
        public void F84725_DeleteWaterPipeProperties(int pipeId, int userId) {
            base.Channel.F84725_DeleteWaterPipeProperties(pipeId, userId);
        }
        
        public string F84725_GetWaterPipeProperties(int pipeId) {
            return base.Channel.F84725_GetWaterPipeProperties(pipeId);
        }
        
        public int F84725_SaveWaterPipeProperties(int pipeId, string waterPipeProperties, int userId) {
            return base.Channel.F84725_SaveWaterPipeProperties(pipeId, waterPipeProperties, userId);
        }
        
        public string F84726_GetWaterPipeLocation(int pipeId) {
            return base.Channel.F84726_GetWaterPipeLocation(pipeId);
        }
        
        public int F84726_SaveWaterPipeLocation(int pipeId, string waterPipeLocation, int userId) {
            return base.Channel.F84726_SaveWaterPipeLocation(pipeId, waterPipeLocation, userId);
        }
        
        public int GetSystemId(int userId, int formNumber) {
            return base.Channel.GetSystemId(userId, formNumber);
        }
        
        public string F8901_GetWorkOrderEngine(int systemId, int isopen) {
            return base.Channel.F8901_GetWorkOrderEngine(systemId, isopen);
        }
        
        public string F8901_GetWorkOrderType(int systemId) {
            return base.Channel.F8901_GetWorkOrderType(systemId);
        }
        
        public string F8901_SaveWorkOrderEngine(string workOrderItems, int userId) {
            return base.Channel.F8901_SaveWorkOrderEngine(workOrderItems, userId);
        }
        
        public void F8902_Delete(int workId, int userId) {
            base.Channel.F8902_Delete(workId, userId);
        }
        
        public string F8902_GetHeader(int workId) {
            return base.Channel.F8902_GetHeader(workId);
        }
        
        public void F8902_SaveHeader(string header, int userId) {
            base.Channel.F8902_SaveHeader(header, userId);
        }
        
        public string F8904_GetEventGridDetails(int workId) {
            return base.Channel.F8904_GetEventGridDetails(workId);
        }
        
        public string F8910_GetWorkOrderGeneral(int workorderId) {
            return base.Channel.F8910_GetWorkOrderGeneral(workorderId);
        }
        
        public string F8910_SaveWorkOrderGeneral(string workOrderGeneral, int userId) {
            return base.Channel.F8910_SaveWorkOrderGeneral(workOrderGeneral, userId);
        }
        
        public string F8912_GetWorkOrderCallIn(int workorderId) {
            return base.Channel.F8912_GetWorkOrderCallIn(workorderId);
        }
        
        public string F8912_SaveWorkOrderCallIn(string workOrderCall, int userId) {
            return base.Channel.F8912_SaveWorkOrderCallIn(workOrderCall, userId);
        }
        
        public System.DateTime F9001_GetNextWorkingDay() {
            return base.Channel.F9001_GetNextWorkingDay();
        }
        
        public string F9002_GetUserDetails(int applicationId) {
            return base.Channel.F9002_GetUserDetails(applicationId);
        }
        
        public string F9008_GetReportDetails(int userId) {
            return base.Channel.F9008_GetReportDetails(userId);
        }
        
        public void F9008_SaveReportDetails(int userId, string printerConf) {
            base.Channel.F9008_SaveReportDetails(userId, printerConf);
        }
        
        public System.Data.DataSet F9013_CheckNextNumber(int rollYear, int nextNum, string formula) {
            return base.Channel.F9013_CheckNextNumber(rollYear, nextNum, formula);
        }
        
        public string F8000_GetGDocBusiness() {
            return base.Channel.F8000_GetGDocBusiness();
        }
        
        public string F8000_GetGDocDiameter(int featureClassId) {
            return base.Channel.F8000_GetGDocDiameter(featureClassId);
        }
        
        public string F8000_GetGDocPropertyReference(int featureClassId, string refField) {
            return base.Channel.F8000_GetGDocPropertyReference(featureClassId, refField);
        }
        
        public string F8000_GetGDocUser() {
            return base.Channel.F8000_GetGDocUser();
        }
        
        public string F8016_GetStoppageEventDetails(int eventId) {
            return base.Channel.F8016_GetStoppageEventDetails(eventId);
        }
        
        public string F8016_SaveStoppageEventDetails(string eventItems, int userId) {
            return base.Channel.F8016_SaveStoppageEventDetails(eventItems, userId);
        }
        
        public void F8040_DeleteTime(int timeId, int userId) {
            base.Channel.F8040_DeleteTime(timeId, userId);
        }
        
        public int F8040_CheckEventId(int formId, int keyId) {
            return base.Channel.F8040_CheckEventId(formId, keyId);
        }
        
        public string F8040_ListTimeInformation(int formId, int keyId) {
            return base.Channel.F8040_ListTimeInformation(formId, keyId);
        }
        
        public string F8040_ListTimeResourceInformation(int isactive) {
            return base.Channel.F8040_ListTimeResourceInformation(isactive);
        }
        
        public void F8040_SaveTime(string timeDetails, int userId) {
            base.Channel.F8040_SaveTime(timeDetails, userId);
        }
        
        public void F8040_UpdateTime(string timeDetails, int userId) {
            base.Channel.F8040_UpdateTime(timeDetails, userId);
        }
        
        public string F8042_GetTimeFooterDetails(int eventId, int formId) {
            return base.Channel.F8042_GetTimeFooterDetails(eventId, formId);
        }
        
        public int F8044_DeleteMaterialItem(int materialId, int userId) {
            return base.Channel.F8044_DeleteMaterialItem(materialId, userId);
        }
        
        public string F8044_ListMaterialDetails(int formId, int keyId) {
            return base.Channel.F8044_ListMaterialDetails(formId, keyId);
        }
        
        public string F8044_ListMaterialsResourceType(int flagActiveAndAll, int eventId) {
            return base.Channel.F8044_ListMaterialsResourceType(flagActiveAndAll, eventId);
        }
        
        public void F8044_SaveMaterialDetails(string materialItems, int userId) {
            base.Channel.F8044_SaveMaterialDetails(materialItems, userId);
        }
        
        public void F8044_UpdateMaterialDetails(string materialItems, int userId) {
            base.Channel.F8044_UpdateMaterialDetails(materialItems, userId);
        }
        
        public string F8046_GetMaterialsFooterDetails(int eventId, int formId) {
            return base.Channel.F8046_GetMaterialsFooterDetails(eventId, formId);
        }
        
        public int F8056_DeleteInspectionDetails(int inspectionId, int userId) {
            return base.Channel.F8056_DeleteInspectionDetails(inspectionId, userId);
        }
        
        public string F8056_ListInspectionDetails(int eventId) {
            return base.Channel.F8056_ListInspectionDetails(eventId);
        }
        
        public void F8056_SaveInspectionDetails(string eventItems, int userId) {
            base.Channel.F8056_SaveInspectionDetails(eventItems, userId);
        }
        
        public void F8056_UpdateInspectionDetails(string eventItems, int userId) {
            base.Channel.F8056_UpdateInspectionDetails(eventItems, userId);
        }
        
        public void F84121_DeleteSanitaryManholeProperties(int manholeId, int userId) {
            base.Channel.F84121_DeleteSanitaryManholeProperties(manholeId, userId);
        }
        
        public string F84121_GetSanitaryManholeProperties(int manholeId) {
            return base.Channel.F84121_GetSanitaryManholeProperties(manholeId);
        }
        
        public int F84121_SaveSanitaryManholeProperties(int manholeId, string sanitaryManholeProperties, int userId) {
            return base.Channel.F84121_SaveSanitaryManholeProperties(manholeId, sanitaryManholeProperties, userId);
        }
        
        public string F84122_GetSanitaryManholeLocation(int keyId) {
            return base.Channel.F84122_GetSanitaryManholeLocation(keyId);
        }
        
        public int F84122_SaveSanitaryManholeLocation(int keyId, string sanitaryManholeLocation, int userId) {
            return base.Channel.F84122_SaveSanitaryManholeLocation(keyId, sanitaryManholeLocation, userId);
        }
        
        public void F84123_DeleteSanitaryPipeProperties(int pipeId, int userId) {
            base.Channel.F84123_DeleteSanitaryPipeProperties(pipeId, userId);
        }
        
        public string F84123_GetSanitaryPipeProperties(int pipeId) {
            return base.Channel.F84123_GetSanitaryPipeProperties(pipeId);
        }
        
        public int F84123_SaveSanitaryPipeProperties(int pipeId, string sanitaryPipeProperties, int userId) {
            return base.Channel.F84123_SaveSanitaryPipeProperties(pipeId, sanitaryPipeProperties, userId);
        }
        
        public string F84124_GetSanitaryPipeLocation(int keyId, int formId) {
            return base.Channel.F84124_GetSanitaryPipeLocation(keyId, formId);
        }
        
        public string F35100_GetNeighborhoodHeaderUserDetails(int applicationId) {
            return base.Channel.F35100_GetNeighborhoodHeaderUserDetails(applicationId);
        }
        
        public int F35100_SaveNeighborhoodHeaderDetails(int nbhId, string nbhDetails, int userId) {
            return base.Channel.F35100_SaveNeighborhoodHeaderDetails(nbhId, nbhDetails, userId);
        }
        
        public int F3511_ExeNeighborhoodDetails(int nbhId, string newnbhdName, int userId) {
            return base.Channel.F3511_ExeNeighborhoodDetails(nbhId, newnbhdName, userId);
        }
        
        public void F35100_DeleteNeighborhoodHeader(int nbhdId, int userId) {
            base.Channel.F35100_DeleteNeighborhoodHeader(nbhdId, userId);
        }
        
        public int DuplicateNeighborhoodHeaderCheck(int nbhId, string nbhDetails) {
            return base.Channel.DuplicateNeighborhoodHeaderCheck(nbhId, nbhDetails);
        }
        
        public string F29550_GetParcelSaleTrackingDetails(int eventId) {
            return base.Channel.F29550_GetParcelSaleTrackingDetails(eventId);
        }
        
        public string F29550_GetPushOwner(int saleId) {
            return base.Channel.F29550_GetPushOwner(saleId);
        }
        
        public string F29550_GetParcelDetails(string parcelIdDetails, int neewParcelId, int saleId) {
            return base.Channel.F29550_GetParcelDetails(parcelIdDetails, neewParcelId, saleId);
        }
        
        public string F29550_GetParcelSaleTrackingComboDetails() {
            return base.Channel.F29550_GetParcelSaleTrackingComboDetails();
        }
        
        public string F29550_GetParcelsOwnerDetails(string parcelIdDetails) {
            return base.Channel.F29550_GetParcelsOwnerDetails(parcelIdDetails);
        }
        
        public int F29550_saveParcelSaleDetails(int eventId, string saleItems, string parcelItems, string ownerItems, int userId) {
            return base.Channel.F29550_saveParcelSaleDetails(eventId, saleItems, parcelItems, ownerItems, userId);
        }
        
        public string F29600_GetSeniorExemptionDetails(int eventId, int userId) {
            return base.Channel.F29600_GetSeniorExemptionDetails(eventId, userId);
        }
        
        public string F29600_GetSeniorExemptionCode(string effectiveDate) {
            return base.Channel.F29600_GetSeniorExemptionCode(effectiveDate);
        }
        
        public int F29600_saveSeniorExemptionDetails(int eventId, string seniorExemptDetails, int userId) {
            return base.Channel.F29600_saveSeniorExemptionDetails(eventId, seniorExemptDetails, userId);
        }
        
        public string F27081_GetTIFDistrictDetails(int TIFIdDistId) {
            return base.Channel.F27081_GetTIFDistrictDetails(TIFIdDistId);
        }
        
        public int F27081_SaveTIFDistrictDetails(System.Nullable<int> TIFIdDistId, string TIFDetails, int userId) {
            return base.Channel.F27081_SaveTIFDistrictDetails(TIFIdDistId, TIFDetails, userId);
        }
        
        public string F27081_DeleteTIFDistrictDetails(int TIFIdDistId, int userId, bool IsReadyToDelete) {
            return base.Channel.F27081_DeleteTIFDistrictDetails(TIFIdDistId, userId, IsReadyToDelete);
        }
        
        public string F27081_GetTIFComboBoxDetails(int RollYear) {
            return base.Channel.F27081_GetTIFComboBoxDetails(RollYear);
        }
        
        public string F34100_GetAglandDetails(int AglandID) {
            return base.Channel.F34100_GetAglandDetails(AglandID);
        }
        
        public int F34100_SaveAglandDetails(System.Nullable<int> AglandID, string AglandDetails, int userId) {
            return base.Channel.F34100_SaveAglandDetails(AglandID, AglandDetails, userId);
        }
        
        public void F34100_DeleteAglandDetails(int Agland, int userId) {
            base.Channel.F34100_DeleteAglandDetails(Agland, userId);
        }
        
        public string F34110_GetTopDollarDetails(int TopDollarID) {
            return base.Channel.F34110_GetTopDollarDetails(TopDollarID);
        }
        
        public int F34110_SaveTopDollarDetails(System.Nullable<int> TopDollarID, string TopDollarDetails, int userId) {
            return base.Channel.F34110_SaveTopDollarDetails(TopDollarID, TopDollarDetails, userId);
        }
        
        public void F34110_DeleteTopDollarDetails(int TopDollarId, int userId) {
            base.Channel.F34110_DeleteTopDollarDetails(TopDollarId, userId);
        }
        
        public string F34110_CropTopDollar(decimal CropDollar, decimal CountyFactor) {
            return base.Channel.F34110_CropTopDollar(CropDollar, CountyFactor);
        }
        
        public string F29660_GetTIFEventDetails(int EventId, int userId) {
            return base.Channel.F29660_GetTIFEventDetails(EventId, userId);
        }
        
        public int F29660_SaveTIFEventDetails(System.Nullable<int> EventId, int TIfId, decimal BaseValue, int userId) {
            return base.Channel.F29660_SaveTIFEventDetails(EventId, TIfId, BaseValue, userId);
        }
        
        public string GetNeighborhoodCfgDetails(int nbhdId) {
            return base.Channel.GetNeighborhoodCfgDetails(nbhdId);
        }
        
        public string GetNeighborhoodCfgChoice(int nbhdId, int nbhdCfgId) {
            return base.Channel.GetNeighborhoodCfgChoice(nbhdId, nbhdCfgId);
        }
        
        public void F35102_SaveNeighborhoodCfgDetails(int neighborhoodConfigId, string neighborhoodConfigDetails, int userId) {
            base.Channel.F35102_SaveNeighborhoodCfgDetails(neighborhoodConfigId, neighborhoodConfigDetails, userId);
        }
        
        public string ListNeighborhoodParcelLocks(int neighborId) {
            return base.Channel.ListNeighborhoodParcelLocks(neighborId);
        }
        
        public string UpdateParcelLockingDetails(int keyId, int valueLock, int adminLock, int lockAppraisal, int primaryId, int userId) {
            return base.Channel.UpdateParcelLockingDetails(keyId, valueLock, adminLock, lockAppraisal, primaryId, userId);
        }
        
        public int F15050_SaveFeeManagement(int feeId, string description, decimal amount, int accountId, int userId, byte feeTypeId) {
            return base.Channel.F15050_SaveFeeManagement(feeId, description, amount, accountId, userId, feeTypeId);
        }
        
        public int F15050_ApplyFees(string feeXML, decimal amount, string description, int accountId, int userId) {
            return base.Channel.F15050_ApplyFees(feeXML, amount, description, accountId, userId);
        }
        
        public string F15050_ListFeeTypes(int userId) {
            return base.Channel.F15050_ListFeeTypes(userId);
        }
        
        public void F15050_RemoveTemplate(int feeId, int userId) {
            base.Channel.F15050_RemoveTemplate(feeId, userId);
        }
        
        public string F27000_GetMiscAssessment(int madistrictId) {
            return base.Channel.F27000_GetMiscAssessment(madistrictId);
        }
        
        public string F27000_ListMADistrictItemType(int madistrictTypeId) {
            return base.Channel.F27000_ListMADistrictItemType(madistrictTypeId);
        }
        
        public string F27000_ListMADistrictType() {
            return base.Channel.F27000_ListMADistrictType();
        }
        
        public int F27000_SaveMADetails(string distributionItems, string subHeaderItems, int userId) {
            return base.Channel.F27000_SaveMADetails(distributionItems, subHeaderItems, userId);
        }
        
        public string F27006_ListALLOwnerDetails(string firstName, string lastName, string address1, string address2, string city) {
            return base.Channel.F27006_ListALLOwnerDetails(firstName, lastName, address1, address2, city);
        }
        
        public string F27006_ListParcelOwnership(int parcelId) {
            return base.Channel.F27006_ListParcelOwnership(parcelId);
        }
        
        public void F27006_SaveParcelOwnership(string parcelOwnership, int parcelId, int userId, bool isfuturePush) {
            base.Channel.F27006_SaveParcelOwnership(parcelOwnership, parcelId, userId, isfuturePush);
        }
        
        public string F27007_GetParcelHeaderSlimDetails(int parcelId) {
            return base.Channel.F27007_GetParcelHeaderSlimDetails(parcelId);
        }
        
        public string ListMOwnerType() {
            return base.Channel.ListMOwnerType();
        }
        
        public string F27008_ListParcelOwnership(int parcelId) {
            return base.Channel.F27008_ListParcelOwnership(parcelId);
        }
        
        public void F27008_SaveParcelOwnership(string parcelOwnership, int parcelId, int userId) {
            base.Channel.F27008_SaveParcelOwnership(parcelOwnership, parcelId, userId);
        }
        
        public string F27008_GetOwnerDetails(int ownerId, int userId) {
            return base.Channel.F27008_GetOwnerDetails(ownerId, userId);
        }
        
        public string F35000_GetAppraisalSummaryObjects(int parcelId) {
            return base.Channel.F35000_GetAppraisalSummaryObjects(parcelId);
        }
        
        public string F35000_CheckAppraisalSummaryUser(int valueSliceId, int objectId, int userId) {
            return base.Channel.F35000_CheckAppraisalSummaryUser(valueSliceId, objectId, userId);
        }
        
        public int F35000_InsertObject(int parcelId, short objectTypeId, string description, int userId) {
            return base.Channel.F35000_InsertObject(parcelId, objectTypeId, description, userId);
        }
        
        public void F35000_SaveAppraisal(int parcelId, string propertiesXML, int userId) {
            base.Channel.F35000_SaveAppraisal(parcelId, propertiesXML, userId);
        }
        
        public int F35000_InsertOrUpdateValueSlice(System.Nullable<int> valueSliceId, string valueSliceHeaderItems, int userId) {
            return base.Channel.F35000_InsertOrUpdateValueSlice(valueSliceId, valueSliceHeaderItems, userId);
        }
        
        public string F35000_ListObjectSliceTypes(System.Nullable<int> ParcelId) {
            return base.Channel.F35000_ListObjectSliceTypes(ParcelId);
        }
        
        public string F35000_ListSliceTypes(int objectId) {
            return base.Channel.F35000_ListSliceTypes(objectId);
        }
        
        public string F35000_ObjectTotal(int parcelId) {
            return base.Channel.F35000_ObjectTotal(parcelId);
        }
        
        public void F35001_DeleteValueSlice(int valueSliceId, int userId) {
            base.Channel.F35001_DeleteValueSlice(valueSliceId, userId);
        }
        
        public string F35001_GetAdjustmentSliceValue(int valueSliceId, byte type, bool isvalue, decimal adjustmentValue) {
            return base.Channel.F35001_GetAdjustmentSliceValue(valueSliceId, type, isvalue, adjustmentValue);
        }
        
        public string F35001_GetValueSliceHeader(int valueSliceId) {
            return base.Channel.F35001_GetValueSliceHeader(valueSliceId);
        }
        
        public string F35002_ListAdjustmentType(System.Nullable<int> masterFromNo) {
            return base.Channel.F35002_ListAdjustmentType(masterFromNo);
        }
        
        public int SaveNeighborhoodHeaderDetails(int nbhId, string nbhDetails, int userId) {
            return base.Channel.SaveNeighborhoodHeaderDetails(nbhId, nbhDetails, userId);
        }
        
        public string GetParentNeighborhoodHeaderDetails(int rollyear, int type, int parentNeighborhood) {
            return base.Channel.GetParentNeighborhoodHeaderDetails(rollyear, type, parentNeighborhood);
        }
        
        public string GetNeighborhoodHeaderDetails(int neighborId) {
            return base.Channel.GetNeighborhoodHeaderDetails(neighborId);
        }
        
        public int DeleteNeighborhoodHeader(int nbhdId, int userId) {
            return base.Channel.DeleteNeighborhoodHeader(nbhdId, userId);
        }
        
        public string F25090_GetParcelOwnerShip(int keyId) {
            return base.Channel.F25090_GetParcelOwnerShip(keyId);
        }
        
        public string F25090_GetPhotos(int keyId, int form) {
            return base.Channel.F25090_GetPhotos(keyId, form);
        }
        
        public string F25090_ParcelSale(int keyId) {
            return base.Channel.F25090_ParcelSale(keyId);
        }
        
        public TerraScan.BusinessEntities.F25000FieldUseData F25000_GetCheckOutDetails(int snapShotId, string snapShotValue) {
            return base.Channel.F25000_GetCheckOutDetails(snapShotId, snapShotValue);
        }
        
        public string F25051_GetParcelDetails(int parcelId) {
            return base.Channel.F25051_GetParcelDetails(parcelId);
        }
        
        public string F25051OwnerOccupied() {
            return base.Channel.F25051OwnerOccupied();
        }
        
        public string F25051ParcelClassTypes() {
            return base.Channel.F25051ParcelClassTypes();
        }
        
        public int f25051ParcelHeaderDetails(int parcelId, string parcelDetails, int userId) {
            return base.Channel.f25051ParcelHeaderDetails(parcelId, parcelDetails, userId);
        }
        
        public string ListPrimaryImprovement() {
            return base.Channel.ListPrimaryImprovement();
        }
        
        public string ListPrimaryLandType() {
            return base.Channel.ListPrimaryLandType();
        }
        
        public int UpdateParcelHeaderDetails(int parcelId, string parcelDetails, bool isCopyHeader, int userId) {
            return base.Channel.UpdateParcelHeaderDetails(parcelId, parcelDetails, isCopyHeader, userId);
        }
        
        public int UpdateParcelHeaderFormDetails(int parcelId, string parcelDetails, int userId, int rollYear) {
            return base.Channel.UpdateParcelHeaderFormDetails(parcelId, parcelDetails, userId, rollYear);
        }
        
        public string F26000_GetParcelFormDetails(int parcelId) {
            return base.Channel.F26000_GetParcelFormDetails(parcelId);
        }
        
        public string F26000_ExemptionDetails(int parcelId, string exemptionCode, System.Nullable<decimal> exemptionFromAmount) {
            return base.Channel.F26000_ExemptionDetails(parcelId, exemptionCode, exemptionFromAmount);
        }
        
        public string F26000_ExemptFieldDetails(int parcelId, int exmptionId, string exemptionCode) {
            return base.Channel.F26000_ExemptFieldDetails(parcelId, exmptionId, exemptionCode);
        }
        
        public string F26000_ClassCodeDetails(string filterValue) {
            return base.Channel.F26000_ClassCodeDetails(filterValue);
        }
        
        public string PrimaryImprovementList() {
            return base.Channel.PrimaryImprovementList();
        }
        
        public string PrimaryLandTypeList() {
            return base.Channel.PrimaryLandTypeList();
        }
        
        public string F26000_GetApprisalType() {
            return base.Channel.F26000_GetApprisalType();
        }
        
        public string f2101_GetLocationSelection(string locationCode, string description) {
            return base.Channel.f2101_GetLocationSelection(locationCode, description);
        }
        
        public string f2102_GetGroupingSelection(string groupCode, string description) {
            return base.Channel.f2102_GetGroupingSelection(groupCode, description);
        }
        
        public string f2103_GetExemptionSelection(string exemptionCode, string description, System.Nullable<decimal> percent, System.Nullable<decimal> maximum, System.Nullable<int> rollYear) {
            return base.Channel.f2103_GetExemptionSelection(exemptionCode, description, percent, maximum, rollYear);
        }
        
        public string GetParcelTypeDetails(int parcelId) {
            return base.Channel.GetParcelTypeDetails(parcelId);
        }
        
        public string GetParcelAttachmentDetails(int oldParcelID, int newParcelID, int userID, int moduleID) {
            return base.Channel.GetParcelAttachmentDetails(oldParcelID, newParcelID, userID, moduleID);
        }
        
        public int CreateNewParcelCopy(int parcelId, int parcelTypeId, int copyAllObjects, int copyAllSlices, int copyAttachments, int copyComments, string parcelElements, int userId) {
            return base.Channel.CreateNewParcelCopy(parcelId, parcelTypeId, copyAllObjects, copyAllSlices, copyAttachments, copyComments, parcelElements, userId);
        }
        
        public string F2001_getParcelLockingDetails(int keyId) {
            return base.Channel.F2001_getParcelLockingDetails(keyId);
        }
        
        public string GetParcelType() {
            return base.Channel.GetParcelType();
        }
        
        public string F2001_getParcelLockingUsername(int userId) {
            return base.Channel.F2001_getParcelLockingUsername(userId);
        }
        
        public int F2001_GetValidUserName(int prcelId, int userId, string formNo) {
            return base.Channel.F2001_GetValidUserName(prcelId, userId, formNo);
        }
        
        public int F2001_UpdateParcelLockingDetails(int keyId, int valueLock, int adminLock, int lockAppraisal, int userId) {
            return base.Channel.F2001_UpdateParcelLockingDetails(keyId, valueLock, adminLock, lockAppraisal, userId);
        }
        
        public string F15050_ComboData() {
            return base.Channel.F15050_ComboData();
        }
        
        public string F15050_getDatas(int feeId) {
            return base.Channel.F15050_getDatas(feeId);
        }
        
        public string F15018_GetMiscReceipt(int receiptId) {
            return base.Channel.F15018_GetMiscReceipt(receiptId);
        }
        
        public string F1024_SaveDistrictDetails(int levyOption, int districtId, decimal amountValue, int userId, bool IsReplace, string SubFundXML) {
            return base.Channel.F1024_SaveDistrictDetails(levyOption, districtId, amountValue, userId, IsReplace, SubFundXML);
        }
        
        public string GetDistrictDistributionData(int LevyOptionId, int districtId, decimal amount, int userId, string subfundsXML, bool isreplace) {
            return base.Channel.GetDistrictDistributionData(LevyOptionId, districtId, amount, userId, subfundsXML, isreplace);
        }
        
        public string GetDistrictData(int districtId) {
            return base.Channel.GetDistrictData(districtId);
        }
        
        public string F15018_ListAccountDetails(string filterValue, System.Nullable<int> rollYear, System.Nullable<int> formNo) {
            return base.Channel.F15018_ListAccountDetails(filterValue, rollYear, formNo);
        }
        
        public int F15019_CheckRollYear(int statementId, int receiptSourceId, string journalItems) {
            return base.Channel.F15019_CheckRollYear(statementId, receiptSourceId, journalItems);
        }
        
        public void F1502_DeleteAccountElementMgmt(string functionId, int userId) {
            base.Channel.F1502_DeleteAccountElementMgmt(functionId, userId);
        }
        
        public string F1502_GetAccountElementMgmt(string function, string description, int type) {
            return base.Channel.F1502_GetAccountElementMgmt(function, description, type);
        }
        
        public int F1502_SaveAccountElementMgmt(string functionElemnts, int userId) {
            return base.Channel.F1502_SaveAccountElementMgmt(functionElemnts, userId);
        }
        
        public string F15020_GetReceiptDetails(int receiptId) {
            return base.Channel.F15020_GetReceiptDetails(receiptId);
        }
        
        public string F15020_ListHistoryGrid(int statementId) {
            return base.Channel.F15020_ListHistoryGrid(statementId);
        }
        
        public void F1503_DeleteGenericElementMgmt(string elementId, string formName, int userId) {
            base.Channel.F1503_DeleteGenericElementMgmt(elementId, formName, userId);
        }
        
        public string F1503_GetGenericElementMgmt(string keyValue, string description, string formName) {
            return base.Channel.F1503_GetGenericElementMgmt(keyValue, description, formName);
        }
        
        public int F1503_SaveGenericElementMgmt(string functionElemnts, string formName, int userId) {
            return base.Channel.F1503_SaveGenericElementMgmt(functionElemnts, formName, userId);
        }
        
        public string F15104_GetReceiptPayment(int receiptId) {
            return base.Channel.F15104_GetReceiptPayment(receiptId);
        }
        
        public void F15104_UpdateReceiptPayment(string receiptPayment, int userId) {
            base.Channel.F15104_UpdateReceiptPayment(receiptPayment, userId);
        }
        
        public string F1512_GetDistrictSelectionData(int districtId, string district, string description, int rollYear) {
            return base.Channel.F1512_GetDistrictSelectionData(districtId, district, description, rollYear);
        }
        
        public string F1513_GetFundSelection(string fund, string description) {
            return base.Channel.F1513_GetFundSelection(fund, description);
        }
        
        public int F1513_CentralFundItemValidation(int fundId, int rollYear) {
            return base.Channel.F1513_CentralFundItemValidation(fundId, rollYear);
        }
        
        public string F1515_GetSubFundSelection(string subFund, string description, int rollYear, int iscash) {
            return base.Channel.F1515_GetSubFundSelection(subFund, description, rollYear, iscash);
        }
        
        public string F1530_GetInstitutionDetail(int institutionId) {
            return base.Channel.F1530_GetInstitutionDetail(institutionId);
        }
        
        public int F1530_SaveInstitution(int institutionId, string institutionElements, int userId) {
            return base.Channel.F1530_SaveInstitution(institutionId, institutionElements, userId);
        }
        
        public string F1531_GetCashAccountDetail(int registerId) {
            return base.Channel.F1531_GetCashAccountDetail(registerId);
        }
        
        public int F1531_SaveCashAccount(int registerId, string registerItems, int userId) {
            return base.Channel.F1531_SaveCashAccount(registerId, registerItems, userId);
        }
        
        public string F1532_GetInstitutionContactDetail(int contactId) {
            return base.Channel.F1532_GetInstitutionContactDetail(contactId);
        }
        
        public int F1532_SaveInstitutionContact(int contactId, string acctEmelemts, int userId) {
            return base.Channel.F1532_SaveInstitutionContact(contactId, acctEmelemts, userId);
        }
        
        public string F25000_GetParcelDetails(int parcelId) {
            return base.Channel.F25000_GetParcelDetails(parcelId);
        }
        
        public string F25090_FieldSummary(int keyId) {
            return base.Channel.F25090_FieldSummary(keyId);
        }
        
        public string F25090_BuildingPermits(int keyId) {
            return base.Channel.F25090_BuildingPermits(keyId);
        }
        
        public string F25090_GetAncestryData(int keyId) {
            return base.Channel.F25090_GetAncestryData(keyId);
        }
        
        public string F25090_GetCorrection(int keyId) {
            return base.Channel.F25090_GetCorrection(keyId);
        }
        
        public string F25090_GetHistoryData(int keyId) {
            return base.Channel.F25090_GetHistoryData(keyId);
        }
        
        public int F15007_CheckDuplicateAccount(int accountId, string acctEmelemts) {
            return base.Channel.F15007_CheckDuplicateAccount(accountId, acctEmelemts);
        }
        
        public int F1501_CreateOrEditGLConfigDetails(int configId, string configElements, int userId) {
            return base.Channel.F1501_CreateOrEditGLConfigDetails(configId, configElements, userId);
        }
        
        public string F1501_GetGLConfigDetails(int configId) {
            return base.Channel.F1501_GetGLConfigDetails(configId);
        }
        
        public string F1501_ListGLConfigDetails(int rollYear) {
            return base.Channel.F1501_ListGLConfigDetails(rollYear);
        }
        
        public string F1501_ListRollYear() {
            return base.Channel.F1501_ListRollYear();
        }
        
        public void F15010_DeleteAffidavitDetails(int statementId, int userId) {
            base.Channel.F15010_DeleteAffidavitDetails(statementId, userId);
        }
        
        public string F15010_GetAffidavitStatementId(int formId, string orderField, string orderBy) {
            return base.Channel.F15010_GetAffidavitStatementId(formId, orderField, orderBy);
        }
        
        public string F15010_GetDistrictSelection(int exciseRateId) {
            return base.Channel.F15010_GetDistrictSelection(exciseRateId);
        }
        
        public string F15010_GetExciseIndividualType() {
            return base.Channel.F15010_GetExciseIndividualType();
        }
        
        public string F15010_GetExciseTaxAffidavitCalulateAmountDue(System.DateTime saleDate, System.DateTime paymentDate, int exciseRateId, int taxCode, double taxableSaleAmount) {
            return base.Channel.F15010_GetExciseTaxAffidavitCalulateAmountDue(saleDate, paymentDate, exciseRateId, taxCode, taxableSaleAmount);
        }
        
        public string F15010_GetExciseTaxAffidavitDetails(int statementId) {
            return base.Channel.F15010_GetExciseTaxAffidavitDetails(statementId);
        }
        
        public string F15010_GetOwnerDetails(int ownerId) {
            return base.Channel.F15010_GetOwnerDetails(ownerId);
        }
        
        public string F15010_GetOwnerStatus(int ownerId) {
            return base.Channel.F15010_GetOwnerStatus(ownerId);
        }
        
        public string F15010_GetParcelDetail(System.Nullable<int> parcelId, string parcelNumber) {
            return base.Channel.F15010_GetParcelDetail(parcelId, parcelNumber);
        }
        
        public int F15010_SaveAffiDavitDetails(int statementId, string partiesAddress, string parcelDetails, string exciseAffidavitDetails, string mobileHomeDetails, int userId) {
            return base.Channel.F15010_SaveAffiDavitDetails(statementId, partiesAddress, parcelDetails, exciseAffidavitDetails, mobileHomeDetails, userId);
        }
        
        public string F15011_GetExciseStatement(int statementId) {
            return base.Channel.F15011_GetExciseStatement(statementId);
        }
        
        public string F15010_ListExciseWAC() {
            return base.Channel.F15010_ListExciseWAC();
        }
        
        public string F15010_ListExciseIndividual(string ExciseIndividualElements) {
            return base.Channel.F15010_ListExciseIndividual(ExciseIndividualElements);
        }
        
        public string F15010_ListOpenSpaceField(string parcelIds) {
            return base.Channel.F15010_ListOpenSpaceField(parcelIds);
        }
        
        public void F15011_SaveExciseStatement(int statementId, System.DateTime interestDate, System.DateTime receiptDate, int userId) {
            base.Channel.F15011_SaveExciseStatement(statementId, interestDate, receiptDate, userId);
        }
        
        public string F15012_GetExciseReceipt(int statementId) {
            return base.Channel.F15012_GetExciseReceipt(statementId);
        }
        
        public int F15013_DeleteExciseTaxRate(int exciseRateId, int userId) {
            return base.Channel.F15013_DeleteExciseTaxRate(exciseRateId, userId);
        }
        
        public string F15013_GetAccountName(int accountId) {
            return base.Channel.F15013_GetAccountName(accountId);
        }
        
        public string F15013_GetDistrictName(int districtId) {
            return base.Channel.F15013_GetDistrictName(districtId);
        }
        
        public string F15013_GetExciseTaxRate(int exciseRateId) {
            return base.Channel.F15013_GetExciseTaxRate(exciseRateId);
        }
        
        public string F15013_ListExciseTaxRate() {
            return base.Channel.F15013_ListExciseTaxRate();
        }
        
        public int F15013_SaveExciseTaxRate(int exciseRateId, string exciseTaxDetails, int userId) {
            return base.Channel.F15013_SaveExciseTaxRate(exciseRateId, exciseTaxDetails, userId);
        }
        
        public string F15015_ListStatementOwnership(int statementId) {
            return base.Channel.F15015_ListStatementOwnership(statementId);
        }
        
        public string F15015_ListMOwnerType() {
            return base.Channel.F15015_ListMOwnerType();
        }
        
        public void F15015_SaveStatementOwnership(int statementId, string statementOwner, int userId) {
            base.Channel.F15015_SaveStatementOwnership(statementId, statementOwner, userId);
        }
        
        public string F15015_ListALLOwnerDetails(string firstName, string lastName, string address1, string address2, string city) {
            return base.Channel.F15015_ListALLOwnerDetails(firstName, lastName, address1, address2, city);
        }
        
        public string F15016_GetStatementHeaderSlimDetails(int statementlId) {
            return base.Channel.F15016_GetStatementHeaderSlimDetails(statementlId);
        }
        
        public void F1226_UpdateCashLedgerStatus(int clid, int userId, System.DateTime functionDate, int functionId, int loginUserId) {
            base.Channel.F1226_UpdateCashLedgerStatus(clid, userId, functionDate, functionId, loginUserId);
        }
        
        public int F1405_SaveMasterReceipt(int statementId, int receiptSourceId, string otherParameterInfo, System.Nullable<int> sharedPaymentId) {
            return base.Channel.F1405_SaveMasterReceipt(statementId, receiptSourceId, otherParameterInfo, sharedPaymentId);
        }
        
        public string F1410_DeleteOwnerReceipting(int ownerId, string ownerXml, string statementXml, int userId, string formBackColor) {
            return base.Channel.F1410_DeleteOwnerReceipting(ownerId, ownerXml, statementXml, userId, formBackColor);
        }
        
        public string F1410_GetOwnerReceipting(string interestDate, string ownerId, string parcelIDs) {
            return base.Channel.F1410_GetOwnerReceipting(interestDate, ownerId, parcelIDs);
        }
        
        public string F1410_ListOwnerReceipting(string interestDate, string statementXml, string formBackColor) {
            return base.Channel.F1410_ListOwnerReceipting(interestDate, statementXml, formBackColor);
        }
        
        public string F1410_SaveOwnerReceipting(int userId, string receiptDate, string interestDate, int ppaymentId, int paymentOption, string statementXml) {
            return base.Channel.F1410_SaveOwnerReceipting(userId, receiptDate, interestDate, ppaymentId, paymentOption, statementXml);
        }
        
        public int F1410_SaveOwnerReceiptPreview(int userId, string statementDetails) {
            return base.Channel.F1410_SaveOwnerReceiptPreview(userId, statementDetails);
        }
        
        public string F1410_ListAttachmentDetails(int formId, string keyIds, int userId, int moduleId) {
            return base.Channel.F1410_ListAttachmentDetails(formId, keyIds, userId, moduleId);
        }
        
        public string F1423_ListMortgageName() {
            return base.Channel.F1423_ListMortgageName();
        }
        
        public void F1423_UpdateRealPropertyStatement(int statementId, string statementItems, int userId) {
            base.Channel.F1423_UpdateRealPropertyStatement(statementId, statementItems, userId);
        }
        
        public int F1500_CreateOrEditAccount(int accountId, string acctEmelemts, int userId) {
            return base.Channel.F1500_CreateOrEditAccount(accountId, acctEmelemts, userId);
        }
        
        public string F1500_GetConfigurationValue(string cfgName) {
            return base.Channel.F1500_GetConfigurationValue(cfgName);
        }
        
        public string F1500_GetDescription(string keyId, string elementName) {
            return base.Channel.F1500_GetDescription(keyId, elementName);
        }
        
        public string F1500_GetFunctionItems(string function) {
            return base.Channel.F1500_GetFunctionItems(function);
        }
        
        public string F1500_GetSubFundItems(string subFund, short rollYear) {
            return base.Channel.F1500_GetSubFundItems(subFund, rollYear);
        }
        
        public string F1500_ListAccountDetails(int accountId) {
            return base.Channel.F1500_ListAccountDetails(accountId);
        }
        
        public string F1500_ListRegisterType() {
            return base.Channel.F1500_ListRegisterType();
        }
        
        public string F1505ExecuteCopyDistrict(int districtId, string districtText, int rollyear, string description, bool isactive, int districtTypeId, int ExciseId, int userId) {
            return base.Channel.F1505ExecuteCopyDistrict(districtId, districtText, rollyear, description, isactive, districtTypeId, ExciseId, userId);
        }
        
        public int F15002_CheckDistrict(System.Nullable<int> districtId, string district, int rollYear) {
            return base.Channel.F15002_CheckDistrict(districtId, district, rollYear);
        }
        
        public int F15002_CreateOrEditDistrictMgmt(System.Nullable<int> districtId, string districtDetails, string districtFundItems, int userId) {
            return base.Channel.F15002_CreateOrEditDistrictMgmt(districtId, districtDetails, districtFundItems, userId);
        }
        
        public string F15002_GetDistirctFundDetails(System.Nullable<int> districtId) {
            return base.Channel.F15002_GetDistirctFundDetails(districtId);
        }
        
        public string F15002_ListAllFunds(System.Nullable<int> fundId, string fund, System.Nullable<int> rollYear) {
            return base.Channel.F15002_ListAllFunds(fundId, fund, rollYear);
        }
        
        public string F15002_GetDistrictType(int userId) {
            return base.Channel.F15002_GetDistrictType(userId);
        }
        
        public int F15003_CheckFund(System.Nullable<int> fundId, string fund, int rollYear) {
            return base.Channel.F15003_CheckFund(fundId, fund, rollYear);
        }
        
        public int F15003_CreateOrEditFundMgmt(System.Nullable<int> fundId, string fund, int rollYear, string description, System.Nullable<int> fundGroupId, string fundItems, int userId) {
            return base.Channel.F15003_CreateOrEditFundMgmt(fundId, fund, rollYear, description, fundGroupId, fundItems, userId);
        }
        
        public string F15003_GetFundSubFundDetails(System.Nullable<int> fundId) {
            return base.Channel.F15003_GetFundSubFundDetails(fundId);
        }
        
        public string F15003_ListAvailableSubFunds(string subFund, string description, System.Nullable<int> rollYear, System.Nullable<int> fundId) {
            return base.Channel.F15003_ListAvailableSubFunds(subFund, description, rollYear, fundId);
        }
        
        public string F15003_ListFundType() {
            return base.Channel.F15003_ListFundType();
        }
        
        public int F15004_CheckDuplicateAgency(int agencyId, string agencyName) {
            return base.Channel.F15004_CheckDuplicateAgency(agencyId, agencyName);
        }
        
        public int F15004_CreateOrEditAgencyDetails(int agencyId, string acctEmelemts, int userId) {
            return base.Channel.F15004_CreateOrEditAgencyDetails(agencyId, acctEmelemts, userId);
        }
        
        public string F15004_GetAgencyDetails(int agencyId) {
            return base.Channel.F15004_GetAgencyDetails(agencyId);
        }
        
        public int F15005_CheckSubFund(System.Nullable<int> subFundId, string subFund, int rollYear) {
            return base.Channel.F15005_CheckSubFund(subFundId, subFund, rollYear);
        }
        
        public string F1108_GetSubmitAffidavit(string statementId) {
            return base.Channel.F1108_GetSubmitAffidavit(statementId);
        }
        
        public string F1108_GetSubmitAffidavitReply(string reetReplyXml, int userId) {
            return base.Channel.F1108_GetSubmitAffidavitReply(reetReplyXml, userId);
        }
        
        public string F1108_ListConfigurationDetail() {
            return base.Channel.F1108_ListConfigurationDetail();
        }
        
        public string F1108_ListManagementQueue(string parcelNumber, string name, string receiptDate, string address, string taxCode, string receiptNumber, string statementNumber) {
            return base.Channel.F1108_ListManagementQueue(parcelNumber, name, receiptDate, address, taxCode, receiptNumber, statementNumber);
        }
        
        public string F1108_SaveReplyReetXml(string reetXml, string reetReplyXml, int userId) {
            return base.Channel.F1108_SaveReplyReetXml(reetXml, reetReplyXml, userId);
        }
        
        public string F1109_FilterSearchAffidavit(string filterXml) {
            return base.Channel.F1109_FilterSearchAffidavit(filterXml);
        }
        
        public string F1109_ListManagementQueue(string parcelNumber, string name, string receiptDate, string address, string taxCode, string treasurer, string assessor, int rollYear, string statementNumber) {
            return base.Channel.F1109_ListManagementQueue(parcelNumber, name, receiptDate, address, taxCode, treasurer, assessor, rollYear, statementNumber);
        }
        
        public string F1109_ListRollYear() {
            return base.Channel.F1109_ListRollYear();
        }
        
        public string F1109_ManagementQueueFilterResult(int statusFilterId, int rollYear, string filterFromDate, string filterToDate) {
            return base.Channel.F1109_ManagementQueueFilterResult(statusFilterId, rollYear, filterFromDate, filterToDate);
        }
        
        public string F1210_DisbursementAccountNames() {
            return base.Channel.F1210_DisbursementAccountNames();
        }
        
        public string F1210_GetDisbursementDetails(System.DateTime postDate) {
            return base.Channel.F1210_GetDisbursementDetails(postDate);
        }
        
        public int F1210_SaveDisbursement(int registerId, int userId, System.DateTime postDate, string agencies, int overrideStatus) {
            return base.Channel.F1210_SaveDisbursement(registerId, userId, postDate, agencies, overrideStatus);
        }
        
        public int F1211_CreateChecks(int userId, string createChecksTclId) {
            return base.Channel.F1211_CreateChecks(userId, createChecksTclId);
        }
        
        public void F1211_DeleteCheckStaging(string tclIdDelete, int userId) {
            base.Channel.F1211_DeleteCheckStaging(tclIdDelete, userId);
        }
        
        public string F1211_GetDisbursementCheckList() {
            return base.Channel.F1211_GetDisbursementCheckList();
        }
        
        public void F1211_UpdateAgencyValidStatus(string tclIds, int validStatus, int userId) {
            base.Channel.F1211_UpdateAgencyValidStatus(tclIds, validStatus, userId);
        }
        
        public void F1211_UpdateCheckStaging(int tclId, string disbursementCheck, string checkItems, int userId) {
            base.Channel.F1211_UpdateCheckStaging(tclId, disbursementCheck, checkItems, userId);
        }
        
        public string F1214_AccountNames() {
            return base.Channel.F1214_AccountNames();
        }
        
        public string F1214_ListRefundPayments(int form, string whereCondnSql) {
            return base.Channel.F1214_ListRefundPayments(form, whereCondnSql);
        }
        
        public int F1214_PrepareChecks(int registerId, int ownerId, System.DateTime interestDate, int userId, string paymentItems) {
            return base.Channel.F1214_PrepareChecks(registerId, ownerId, interestDate, userId, paymentItems);
        }
        
        public string F1220_AccountNames() {
            return base.Channel.F1220_AccountNames();
        }
        
        public string F1220_GetAccountRegisterDetails(int registerId, System.DateTime beginningDate) {
            return base.Channel.F1220_GetAccountRegisterDetails(registerId, beginningDate);
        }
        
        public string F1220_GetReconciledDetails(int registerId) {
            return base.Channel.F1220_GetReconciledDetails(registerId);
        }
        
        public string F1220_ListAccountRegister(int registerId, System.DateTime beginningDate) {
            return base.Channel.F1220_ListAccountRegister(registerId, beginningDate);
        }
        
        public int F1221_UpdateCashLedger(int clid, int overRide, string checkDetails, int userId) {
            return base.Channel.F1221_UpdateCashLedger(clid, overRide, checkDetails, userId);
        }
        
        public string F1224_AccountNames() {
            return base.Channel.F1224_AccountNames();
        }
        
        public string F1224_CreateChecks(int registerId, int userId, long startingCheckNumber, string checkItems) {
            return base.Channel.F1224_CreateChecks(registerId, userId, startingCheckNumber, checkItems);
        }
        
        public string F1224_GetCheckNumber(int registerId) {
            return base.Channel.F1224_GetCheckNumber(registerId);
        }
        
        public string F1224_ListUnPrintedChecks(int registerId) {
            return base.Channel.F1224_ListUnPrintedChecks(registerId);
        }
        
        public void F1226_DeleteCashLedger(int clid, int userId) {
            base.Channel.F1226_DeleteCashLedger(clid, userId);
        }
        
        public string F1226_GetCashLedger(int clid) {
            return base.Channel.F1226_GetCashLedger(clid);
        }
        
        public string F1226_ListCashLedger() {
            return base.Channel.F1226_ListCashLedger();
        }
        
        public string F16031_GetSpecialAssessmentParcel(string parcelNumber, System.Nullable<int> parcelId, System.Nullable<int> rollYear) {
            return base.Channel.F16031_GetSpecialAssessmentParcel(parcelNumber, parcelId, rollYear);
        }
        
        public string F16031_DeleteDistrictAssessment(int workingfileId, int userId) {
            return base.Channel.F16031_DeleteDistrictAssessment(workingfileId, userId);
        }
        
        public int F16031_SaveDistrictAssessmentDetails(string districtProperty, string districtRates, int userId) {
            return base.Channel.F16031_SaveDistrictAssessmentDetails(districtProperty, districtRates, userId);
        }
        
        public string F16031_CheckSpecialAssessment(string districtProperty) {
            return base.Channel.F16031_CheckSpecialAssessment(districtProperty);
        }
        
        public void F16031_ExeWriteTaxStatement(int workingFileId, int userId, bool isCancel) {
            base.Channel.F16031_ExeWriteTaxStatement(workingFileId, userId, isCancel);
        }
        
        public int F1031_DeleteDistrictAssessment(int statementId, int userId) {
            return base.Channel.F1031_DeleteDistrictAssessment(statementId, userId);
        }
        
        public string F1031_GetDistrictAssessmentParcelID(string parcelNumber, System.Nullable<int> parcelId, System.Nullable<int> rollYear) {
            return base.Channel.F1031_GetDistrictAssessmentParcelID(parcelNumber, parcelId, rollYear);
        }
        
        public string F1031_ListDistrictAssessment(int districtId) {
            return base.Channel.F1031_ListDistrictAssessment(districtId);
        }
        
        public string F1031_ListDistrictAssessmentDetails(int statementId) {
            return base.Channel.F1031_ListDistrictAssessmentDetails(statementId);
        }
        
        public string F1031_ListDistrictAssessmentIDs() {
            return base.Channel.F1031_ListDistrictAssessmentIDs();
        }
        
        public int F1031_SaveDistrictAssessmentDetails(string districtProperty, string districtRates, bool overrideStatus, bool ownerRide, int userId) {
            return base.Channel.F1031_SaveDistrictAssessmentDetails(districtProperty, districtRates, overrideStatus, ownerRide, userId);
        }
        
        public int F1031_CheckSpecialDistrictStatementOrOwner(string districtProperty, bool statementFlag) {
            return base.Channel.F1031_CheckSpecialDistrictStatementOrOwner(districtProperty, statementFlag);
        }
        
        public string F1033_ListPostTypes(System.Nullable<int> form) {
            return base.Channel.F1033_ListPostTypes(form);
        }
        
        public string F1033_ListSpecialDistricts(System.Nullable<int> district, System.Nullable<int> rollYear, string description, System.Nullable<int> postTypeId) {
            return base.Channel.F1033_ListSpecialDistricts(district, rollYear, description, postTypeId);
        }
        
        public string ListInterestMethod() {
            return base.Channel.ListInterestMethod();
        }
        
        public string ListInterestDelqDetails() {
            return base.Channel.ListInterestDelqDetails();
        }
        
        public string GetDistrictDetails(int districtId) {
            return base.Channel.GetDistrictDetails(districtId);
        }
        
        public string ImprovementDistrictTypelist(string districtType) {
            return base.Channel.ImprovementDistrictTypelist(districtType);
        }
        
        public string GetDistributionDetails() {
            return base.Channel.GetDistributionDetails();
        }
        
        public string GetDistrictDefinitionDetails(int districtID) {
            return base.Channel.GetDistrictDefinitionDetails(districtID);
        }
        
        public string RollOver_ImprovementDistrict(int districtId, int userId) {
            return base.Channel.RollOver_ImprovementDistrict(districtId, userId);
        }
        
        public string F16040_SaveImproveDistrictDefinition(string districtItem, string distributionItem, int userid) {
            return base.Channel.F16040_SaveImproveDistrictDefinition(districtItem, distributionItem, userid);
        }
        
        public string F16040_UpdateImproveDistrictDefinition(int districtNo, string districtItem, string distributionItem, int userid) {
            return base.Channel.F16040_UpdateImproveDistrictDefinition(districtNo, districtItem, distributionItem, userid);
        }
        
        public string GetDistrictParcels(int DistrictId) {
            return base.Channel.GetDistrictParcels(DistrictId);
        }
        
        public string ListDistrictParcelsDetails(string parcelval, System.Nullable<int> parcelId, System.Nullable<int> rollYear) {
            return base.Channel.ListDistrictParcelsDetails(parcelval, parcelId, rollYear);
        }
        
        public string F16041_SaveDistrictParcels(string districtProperty, int userId) {
            return base.Channel.F16041_SaveDistrictParcels(districtProperty, userId);
        }
        
        public string F16041_DeleteDistrictParcels(int workingFileItemId, int userId) {
            return base.Channel.F16041_DeleteDistrictParcels(workingFileItemId, userId);
        }
        
        public string CheckParcelDetails(string districtProperty) {
            return base.Channel.CheckParcelDetails(districtProperty);
        }
        
        public string F11020_GetRealPropertyStatement(int statementId) {
            return base.Channel.F11020_GetRealPropertyStatement(statementId);
        }
        
        public string F15030_GetRealPropertyStatements(int statementId) {
            return base.Channel.F15030_GetRealPropertyStatements(statementId);
        }
        
        public string f25050GetDistrictAssessmentParcelID(string parcelNumber, int parcelId) {
            return base.Channel.f25050GetDistrictAssessmentParcelID(parcelNumber, parcelId);
        }
        
        public string F1107_ExciseWorkQueue_GetWorkQueueSearchResult(string parcelNumber, string name, string receiptDate, string address, string taxCode, string treasurer, string assessor, string statementNumber) {
            return base.Channel.F1107_ExciseWorkQueue_GetWorkQueueSearchResult(parcelNumber, name, receiptDate, address, taxCode, treasurer, assessor, statementNumber);
        }
        
        public void DeleteQuery(int queryId, int userId) {
            base.Channel.DeleteQuery(queryId, userId);
        }
        
        public void DeleteQueryUtility(int queryId, int userId) {
            base.Channel.DeleteQueryUtility(queryId, userId);
        }
        
        public void DeleteSnapShot(int snapShotId, int userId) {
            base.Channel.DeleteSnapShot(snapShotId, userId);
        }
        
        public void DeleteSnapshotUtility(int snapshotId, int userId) {
            base.Channel.DeleteSnapshotUtility(snapshotId, userId);
        }
        
        public void DeleteUserDetails(int userId, int loginUserId) {
            base.Channel.DeleteUserDetails(userId, loginUserId);
        }
        
        public string ExecuteAffdvtQuery(int formId, string whereCondnSql, string orderByCondn) {
            return base.Channel.ExecuteAffdvtQuery(formId, whereCondnSql, orderByCondn);
        }
        
        public string ExecuteQuery(string whereCondition, string orderByCondition, int formId) {
            return base.Channel.ExecuteQuery(whereCondition, orderByCondition, formId);
        }
        
        public string ExecuteSnapshot(int snapshotId, string whereCondition, string orderByCondition, int formId) {
            return base.Channel.ExecuteSnapshot(snapshotId, whereCondition, orderByCondition, formId);
        }
        
        public decimal F1003_GetMinTaxDue(int statmentId, string interestDate) {
            return base.Channel.F1003_GetMinTaxDue(statmentId, interestDate);
        }
        
        public decimal F1004_GetInterestAmount(int statmentId, string interestDate, decimal taxDueAmount) {
            return base.Channel.F1004_GetInterestAmount(statmentId, interestDate, taxDueAmount);
        }
        
        public string F1009_GetValidReceiptTest(int statementId, System.DateTime receiptDate) {
            return base.Channel.F1009_GetValidReceiptTest(statementId, receiptDate);
        }
        
        public string F1021_GetMiscReceiptTemplate(int miscTemplateId) {
            return base.Channel.F1021_GetMiscReceiptTemplate(miscTemplateId);
        }
        
        public int F1021_SaveMiscReceiptTemplate(string miscTemplateDetails, string templateItems, int userId) {
            return base.Channel.F1021_SaveMiscReceiptTemplate(miscTemplateDetails, templateItems, userId);
        }
        
        public void F1022_DeleteMiscReceiptTemplate(int miscTemplateId, int userId) {
            base.Channel.F1022_DeleteMiscReceiptTemplate(miscTemplateId, userId);
        }
        
        public string F1022_ListMiscReceiptTemplate() {
            return base.Channel.F1022_ListMiscReceiptTemplate();
        }
        
        public int F1025_CheckRollYear(string autoFundItems) {
            return base.Channel.F1025_CheckRollYear(autoFundItems);
        }
        
        public int F1025_DeleteAutoFundTransferDetails(int autoTransferId, int userId) {
            return base.Channel.F1025_DeleteAutoFundTransferDetails(autoTransferId, userId);
        }
        
        public string F1025_ListAutoFundTransferDetails(int rollYear) {
            return base.Channel.F1025_ListAutoFundTransferDetails(rollYear);
        }
        
        public string F1025_ListRollYear() {
            return base.Channel.F1025_ListRollYear();
        }
        
        public int F1025_UpdateAutoFundTransferDetails(string autoFundItems, int userId) {
            return base.Channel.F1025_UpdateAutoFundTransferDetails(autoFundItems, userId);
        }
        
        public int F1030_DeleteDistrictDefinition(int specialDistrictId, int userId) {
            return base.Channel.F1030_DeleteDistrictDefinition(specialDistrictId, userId);
        }
        
        public void F1030_DeleteDistrictDefinitionRate(int specialDistrictRateItemId, int userId) {
            base.Channel.F1030_DeleteDistrictDefinitionRate(specialDistrictRateItemId, userId);
        }
        
        public string F1030_GetDistrictDefinitionDetails(int districtNo) {
            return base.Channel.F1030_GetDistrictDefinitionDetails(districtNo);
        }
        
        public string F1030_ListDistrictDefinitionType() {
            return base.Channel.F1030_ListDistrictDefinitionType();
        }
        
        public string F1030_SaveDistrictDefinition(int districtNo, string districtItem, string rateItem, string distributionItem, bool flagOverride, int userId) {
            return base.Channel.F1030_SaveDistrictDefinition(districtNo, districtItem, rateItem, distributionItem, flagOverride, userId);
        }
        
        public int F16030_DeleteDistrictDefinition(int specialDistrictId, int userId) {
            return base.Channel.F16030_DeleteDistrictDefinition(specialDistrictId, userId);
        }
        
        public void F16030_DeleteDistrictDefinitionRate(int specialDistrictRateItemId, int userId) {
            base.Channel.F16030_DeleteDistrictDefinitionRate(specialDistrictRateItemId, userId);
        }
        
        public string F16030_GetDistrictDefinitionDetails(int districtNo) {
            return base.Channel.F16030_GetDistrictDefinitionDetails(districtNo);
        }
        
        public string F16030_ListDistrictDefinitionType() {
            return base.Channel.F16030_ListDistrictDefinitionType();
        }
        
        public string F16030_SaveDistrictDefinition(int districtNo, string districtItem, string rateItem, string distributionItem, bool flagOverride, bool flagValidation, int userId) {
            return base.Channel.F16030_SaveDistrictDefinition(districtNo, districtItem, rateItem, distributionItem, flagOverride, flagValidation, userId);
        }
        
        public string F16031_ListDistrictAssessmentDetails(int workingfileId) {
            return base.Channel.F16031_ListDistrictAssessmentDetails(workingfileId);
        }
        
        public string F16031_ListDistrictAssessment(int sadistrictId) {
            return base.Channel.F16031_ListDistrictAssessment(sadistrictId);
        }
        
        public string CheckInstallation(string test) {
            return base.Channel.CheckInstallation(test);
        }
        
        public string CheckMortgageImportValidReceipt(int importId, System.DateTime receiptDate) {
            return base.Channel.CheckMortgageImportValidReceipt(importId, receiptDate);
        }
        
        public System.Data.DataSet CheckNextNumber(int rollYear, int nextNum, string formula) {
            return base.Channel.CheckNextNumber(rollYear, nextNum, formula);
        }
        
        public int CheckQueryExist(int formId, string savedQueryName) {
            return base.Channel.CheckQueryExist(formId, savedQueryName);
        }
        
        public int CheckSnapShotExist(int formId, string savedSnapShotName) {
            return base.Channel.CheckSnapShotExist(formId, savedSnapShotName);
        }
        
        public void ClearTemporaryRecords(int userId) {
            base.Channel.ClearTemporaryRecords(userId);
        }
        
        public string CompilePostingRecordSet(System.DateTime postDate, string selectedPostTypes, int userId) {
            return base.Channel.CompilePostingRecordSet(postDate, selectedPostTypes, userId);
        }
        
        public string F36091_GetIncomeSources(int valueSliceId) {
            return base.Channel.F36091_GetIncomeSources(valueSliceId);
        }
        
        public void F36091_SaveIncomeSourceDetails(int valueSliceId, string SourceGridDetails, string IncomeApproachDetails, int userId) {
            base.Channel.F36091_SaveIncomeSourceDetails(valueSliceId, SourceGridDetails, IncomeApproachDetails, userId);
        }
        
        public string F36091_ListSourceDetails(int valueSliceId) {
            return base.Channel.F36091_ListSourceDetails(valueSliceId);
        }
        
        public string F36091_GetIncomeApproachItemDetails(string IncomeApproachDetails) {
            return base.Channel.F36091_GetIncomeApproachItemDetails(IncomeApproachDetails);
        }
        
        public string F36091_ListApproachValues(out decimal contract, out decimal marketperunit, out decimal market, int incomeSourceID, decimal Units, decimal ContractPerUnit) {
            return base.Channel.F36091_ListApproachValues(out contract, out marketperunit, out market, incomeSourceID, Units, ContractPerUnit);
        }
        
        public void F36091_DeleteIncomeSource(string incomesourceIds, int userId) {
            base.Channel.F36091_DeleteIncomeSource(incomesourceIds, userId);
        }
        
        public string GetPaymentManagement(int ReceiptID) {
            return base.Channel.GetPaymentManagement(ReceiptID);
        }
        
        public void F1557_InsertPayment(string receiptPayment, int userId) {
            base.Channel.F1557_InsertPayment(receiptPayment, userId);
        }
        
        public void F1557_UpdatePayment(string receiptPayment, int userId) {
            base.Channel.F1557_UpdatePayment(receiptPayment, userId);
        }
        
        public void F1557_DeletePayment(string PaymentIDs, int userId) {
            base.Channel.F1557_DeletePayment(PaymentIDs, userId);
        }
        
        public string CreateReceipt(int importId, int templateId, string templateName, string filePath, int typeId, System.DateTime receiptDate, System.DateTime interestDate, bool payCode, int firstHalfPaycode, int userId, int rollYear, System.Nullable<int> ppaymentId, bool resetErrorCheck) {
            return base.Channel.CreateReceipt(importId, templateId, templateName, filePath, typeId, receiptDate, interestDate, payCode, firstHalfPaycode, userId, rollYear, ppaymentId, resetErrorCheck);
        }
        
        public void DeleteAffidavitDetails(int statementId, int userId) {
            base.Channel.DeleteAffidavitDetails(statementId, userId);
        }
        
        public void DeleteAttachments(int fileId, int userId) {
            base.Channel.DeleteAttachments(fileId, userId);
        }
        
        public void DeleteComments(int keyId, int formId, int commentId, int userId) {
            base.Channel.DeleteComments(keyId, formId, commentId, userId);
        }
        
        public int DeleteEventEngineTVDetails(int detailId, int userId) {
            return base.Channel.DeleteEventEngineTVDetails(detailId, userId);
        }
        
        public int DeleteExciseTaxRate(int exciseRateId, int userId) {
            return base.Channel.DeleteExciseTaxRate(exciseRateId, userId);
        }
        
        public void DeleteGDocEventHeader(int eventId, int childFlag, int userId) {
            base.Channel.DeleteGDocEventHeader(eventId, childFlag, userId);
        }
        
        public void DeleteGroupDetails(int groupId, int userId) {
            base.Channel.DeleteGroupDetails(groupId, userId);
        }
        
        public string DeleteMortgageImport(int importId, int userId) {
            return base.Channel.DeleteMortgageImport(importId, userId);
        }
        
        public string DeletePermiTemplate(int templateId, int userId) {
            return base.Channel.DeletePermiTemplate(templateId, userId);
        }
        
        public string DeleteIncomeSource(int IncomeSourceID, int userId) {
            return base.Channel.DeleteIncomeSource(IncomeSourceID, userId);
        }
        
        public string DeleteMADTemplate(int templateId, int userId) {
            return base.Channel.DeleteMADTemplate(templateId, userId);
        }
        
        public string DeleteSnapshotTemplate(int templateId, int userId) {
            return base.Channel.DeleteSnapshotTemplate(templateId, userId);
        }
        
        public string DeleteMortgageImportFileEntries(int importId, int userId) {
            return base.Channel.DeleteMortgageImportFileEntries(importId, userId);
        }
        
        public int DeleteMortgageTemplate(int templateId, bool overrideStatus, int userId) {
            return base.Channel.DeleteMortgageTemplate(templateId, overrideStatus, userId);
        }
    }
}
